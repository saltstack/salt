=============================================
Salt 2014.7.0 Release Notes - Codename Helium
=============================================

This release is the largest Salt release ever, with more features and commits
then any previous release of Salt. Everything from the new RAET transport to
major updates in Salt Cloud and the merging of Salt API into the main project.

New Transport!
==============

RAET Transport Option
---------------------

This has been a HUGE amount of work, but the beta release of Salt with RAET is
ready to go. RAET is a reliable queuing transport system that has been
developed in partnership with a number of large enterprises to give Salt an
alternative to ZeroMQ and a way to get Salt to scale well beyond tens of
thousands of servers. Unlike ZeroMQ, RAET is completely asynchronous in every
aspect of its operation and has been developed using the flow programming
paradigm. This allows for many new capabilities to be added to Salt in the
upcoming releases.

Please keep in mind that this is a beta release of RAET and we hope for bugs to
be worked out, performance to be better realized and more in the Lithium
release.

Simply stated, users running Salt with RAET should expect some hiccups as we
hammer out the update. This is a BETA release of Salt RAET.

For information about how to use Salt with RAET please see the :doc:`tutorial </topics/transports/raet/programming_intro>`.

State System Enhancements
=========================

New Imperative State Keyword "Listen"
-------------------------------------

The new listen keyword allows for completely imperative states by calling the
mod_watch routine after all states have run instead of re-ordering the states.

Mod Aggregate Runtime Manipulator
---------------------------------

The new mod_aggregate system allows for the state system to rewrite the state
data during execution. This allows for state definitions to be aggregated
dynamically at runtime.

The best example is found in the pkg state. If mod_aggregate is turned on,
then when the first pkg state is reached the state system will scan all of the
other running states for pkg states and take all other packages set for install
and install them all at once in the first pkg state.

These runtime modifications make it easy groups of states together, in future
versions we hope to fill out the mod_aggregate system to build in more and
more optimizations.

For more documentation on mod_aggregate please see [salt.states.mod_aggregate](http://docs.saltstack.com/en/latest/ref/states/aggregate.html)

New Requisites: onchanges and onfail
------------------------------------

New requisites!

Global onlyif and unless
------------------------

The ``onlyif`` and ``unless`` options can now be used for any state declaration.

Use ``names`` to expand and override values
-------------------------------------------

The :ref:`names declaration <names-declaration>` in Salt's state system can now
override or add values to the expanded data structure. For example:

.. code-block:: yaml

    my_users:
      user.present:
        - names:
          - larry
          - curly
          - moe:
            - shell: /bin/zsh
            - groups:
              - wheel
        - shell: /bin/bash

Major Features
==============

Scheduler Additions
-------------------

The Salt scheduler system has received MAJOR enhancements, allowing for cron-like
scheduling and much more granular timing routines. See: [salt.modules.schedule](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.schedule.html)

Red Hat 7 Family Support
------------------------

All the needed additions have been made to run Salt on RHEL 7 and derived OSes
like CentOS and Scientific.

Amazon Execution Modules
------------------------

An entire family of execution modules further enhancing Salt's Amazon Cloud
support.

- Autoscale Groups - [salt.modules.boto_asg](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.boto_asg.html) and [salt.states.boto_asg](http://docs.saltstack.com/en/latest/ref/states/all/salt.states.boto_asg.html)
- Cloud Watch - [salt.modules.boto_cloudwatch](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.boto_cloudwatch.html) and [salt.states.boto_cloudwatch_alarm](http://docs.saltstack.com/en/latest/ref/states/all/salt.states.boto_cloudwatch_alarm.html)
- Elastic Cache - [salt.modules.boto_elasticache](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.boto_elasticache.html) and [salt.states.boto_elasticache](http://docs.saltstack.com/en/latest/ref/states/all/salt.states.boto_elasticache.html)
- Elastic Load Balancer - [salt.modules.boto_elb](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.boto_elb.html) and [salt.states.boto_elb](http://docs.saltstack.com/en/latest/ref/states/all/salt.states.boto_elb.html)
- IAM Identity and Access Management - [salt.modules.boto_iam](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.boto_iam.html), [salt.states.boto_iam_role](http://docs.saltstack.com/en/latest/ref/states/all/salt.states.boto_iam_role.html)
- Launch Control - [salt.states.boto_lc](http://docs.saltstack.com/en/latest/ref/states/all/salt.states.boto_lc.html)
- Route53 DNS - [salt.modules.boto_route53](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.boto_route53.html) and [salt.states.boto_route53.html](http://docs.saltstack.com/en/latest/ref/states/all/salt.states.boto_route53.html)
- Security Groups - [salt.modules.boto_secgroup](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.boto_secgroup.html) and [salt.states.boto_secgroup](http://docs.saltstack.com/en/latest/ref/states/all/salt.states.boto_secgroup.html)
- Simple Queue Service - [salt.modules.boto_sqs](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.boto_sqs.html) and [salt.states.boto_sqs](http://docs.saltstack.com/en/latest/ref/states/all/salt.states.boto_sqs.html)

LXC Runner Enhancements
-----------------------

BETA
The Salt LXC management system has received a number of enhancements which make
running an LXC cloud entirely from Salt an easy proposition.

Next Gen Docker Management
--------------------------

The Docker support in Salt has been increased at least ten fold. The Docker API
is now completely exposed and Salt ships with Docker data tracking systems
which make automating Docker deployments very easy.

Peer System Performance Improvements
------------------------------------

The peer system communication routines have been refined to make the peer
system substantially faster.

SDB
---

Encryption at rest for configs

GPG Renderer
------------

Encrypted pillar at rest

OpenStack Expansion
-------------------

Lots of new OpenStack stuff

Queues System
-------------

Ran change external queue systems into Salt events

Multi Master Failover Additions
-------------------------------

Connecting to multiple masters is more dynamic then ever

Chef Execution Module
---------------------

Managing Chef with Salt just got even easier!

Fileserver Backend Enhancements
-------------------------------

All of the fileserver backends have been overhauled to be faster, lighter and more reliable

Pyobjects Renderer
------------------

Salt now ships with with the :mod:`Pyobjects Renderer <salt.renderers.pyobjects>` that
allows for construction of States using pure Python with an idiomatic object interface.

New Modules
===========

- Syslog-ng: [Usage Guide](http://docs.saltstack.com/en/latest/topics/tutorials/syslog_ng-state-usage.html)
- Oracle: [salt.modules.oracle](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.oracle.html)
- Random: [salt.modules.mod_random](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.mod_random.html)
- Redis: [salt.modules.redismod](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.redismod.html), [salt.pillar.etcd_pillar](http://docs.saltstack.com/en/latest/ref/pillar/all/salt.pillar.etcd_pillar.html)
- Amazon Simple Queue Service - [salt.modules.aws_sqs](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.aws_sqs.html)
- Manage block devices [salt.modules.blockdev](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.blockdev.html)
- CoreOS etcd - [salt.modules.etcd_mod](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.etcd_mod.html)
- Genesis [salt.modules.genesis](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.genesis.html)
- InfluxDB - [salt.modules.influx](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.influx.html)
- Server Density - [salt.modules.serverdensity_device](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.serverdensity_device.html)
- Twilio Notifications - [salt.modules.twilio_notify](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.twilio_notify.html)
- Varnish Cache - [salt.modules.varnish](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.varnish.html)
- ZNC IRC Bouncer - [salt.modules.znc](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.znc.html)
- map/reduce style runner - [salt.runners.survey](http://docs.saltstack.com/en/latest/ref/runners/all/salt.runners.survey.html)
- Queues for runners - [salt.runners.queue](http://docs.saltstack.com/en/latest/ref/runners/all/salt.runners.queue.html)
- Sending messages via SMTP - [salt.modules.smtp](http://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.smtp.html)

New clouds
==========

- Aliyun ECS Cloud - [salt.cloud.clouds.aliyun](http://docs.saltstack.com/en/latest/ref/clouds/all/salt.cloud.clouds.aliyun.html)
- LXC Containers - [salt.cloud.clouds.lxc](http://docs.saltstack.com/en/latest/ref/clouds/all/salt.cloud.clouds.lxc.html)
- Proxmox KVM Containers - [salt.cloud.clouds.proxmox](http://docs.saltstack.com/en/latest/ref/clouds/all/salt.cloud.clouds.proxmox.html)

Deprecations
============

salt.modules.virturalenv_mod
----------------------------

- Removed deprecated ``memoize`` function from ``salt/utils/__init__.py`` (deprecated)
- Removed deprecated ``no_site_packages`` argument from ``create`` function (deprecated)
- Removed deprecated ``check_dns`` argument from ``minion_config`` and ``apply_minion_config`` functions (deprecated)
- Removed deprecated ``OutputOptionsWithTextMixIn`` class from ``salt/utils/parsers.py`` (deprecated)
- Removed the following deprecated functions from ``salt/modules/ps.py``:
  - ``physical_memory_usage`` (deprecated)
  - ``virtual_memory_usage`` (deprecated)
  - ``cached_physical_memory`` (deprecated)
  - ``physical_memory_buffers`` (deprecated)
- Removed deprecated cloud arguments from ``cloud_config`` function in ``salt/config.py``:
  - ``vm_config`` (deprecated)
  - ``vm_config_path`` (deprecated)
- Removed deprecated ``libcloud_version`` function from ``salt/cloud/libcloudfuncs.py`` (deprecated)
- Removed deprecated ``CloudConfigMixIn`` class from ``salt/utils/parsers.py`` (deprecated)
