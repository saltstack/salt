=========================
Salt 0.17.0 Release Notes
=========================

The 0.17.0 release is a very exciting release of Salt, this brings to Salt
some very powerful new features and advances. The advances range from the
state system to the test suite, covering new transport capabilities and
making states easier and more powerful, to extending Salt Virt and much more!

The 0.17.0 release will also be the last release of Salt to follow the old
0.XX.X numbering system, the next release of Salt will change the numbering to
be date based following this format:

<Year>.<Month>.<Minor>

So if the release happens in November of 2013 the number will be 13.11.0, the
first bugfix release will be 13.11.1 and so forth.

Major Features
==============

Halite
------

The new Halite web GUI is now available, a great deal of work has been put into
Halite to make it fully event driven and amazingly fast. The Halite UI can be
started from within the Salt Master, or standalone, and does not require an
external database to run, it is very lightweight!

This initial release of Halite is primarily the framework for the UI and the
communication systems making it easy to extend and build the UI up. It
presently supports watching the event bus and firing commands over Salt.

Halite is, like the rest of Salt, Open Source!

Much more will be coming in the future of Halite!

Salt SSH
--------

The new ``salt-ssh`` command has been added to Salt. This system allows for
remote execution and states to be run over ssh. The benefit here being, that
salt can run relying only on the ssh agent, rather than requiring a minion
to be deployed.

The ``salt-ssh`` system runs states in a compatible way as Salt and states
created and run with salt-ssh can be moved over to a standard salt deployment
without modification.

Since this is the initial release of salt-ssh, there is plenty of room for
improvement, but it is fully operational, not just a bootstrap tool.

Rosters
-------

Salt is designed to have the minions be aware of the master and the master does
not need to be aware of the location of the minions. The new salt 

State Auto Order
----------------

This is a major change in how states are evaluated in Salt. State Auto Order
is a new feature that makes states get evaluated and executed in the order in
which they are defined in the sls file. This feature makes it very easy to
see the finite order in which things will be executed, making Salt now, fully
imperative AND fully declarative.

The requisite system still takes precedence over the order in which states are
defined, so no existing states should break with this change. But this new
feature can be turned off by setting ``state_auto_order: False`` in the master
config, thus reverting to the old lexicographical order.

state.sls Runner
----------------

Event Namespacing
-----------------

Mercurial Fileserver Backend
----------------------------

External Logging Handlers
-------------------------
sentry and logstash

Jenkins Testing
---------------

Salt Testing Project
--------------------

Keystone Additions
------------------

StormPath External Authentication
---------------------------------

LXC Support
-----------
