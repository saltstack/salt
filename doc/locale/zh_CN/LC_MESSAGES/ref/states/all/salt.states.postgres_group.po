# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../ref/states/all/salt.states.postgres_group.rst:6
msgid "salt.states.postgres_group"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group:2
msgid "Management of PostgreSQL groups (roles)."
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group:4
msgid ""
"The postgres_group module is used to create and manage Postgres groups."
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.absent:1
msgid "Ensure that the named group is absent"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.absent:4
#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:4
msgid "name"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.absent:4
msgid "The groupname of the group to remove"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.absent:9
#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:30
msgid "runas"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.absent:7
#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.absent:12
#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:28
#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:33
msgid "System user all operations should be performed on behalf of"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.absent:13
#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:34
msgid "user"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:1
msgid "Ensure that the named group is present with the specified privileges"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:4
msgid "The name of the group to manage"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:7
msgid "createdb"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:7
msgid "Is the group allowed to create databases?"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:10
msgid "createuser"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:10
msgid "Is the group allowed to create other users?"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:13
msgid "encrypted"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:13
msgid "Should the password be encrypted in the system catalog?"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:16
msgid "superuser"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:16
msgid "Should the new group be a \"superuser\""
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:19
msgid "replication"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:19
msgid "Should the new group be allowed to initiate streaming replication"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:22
msgid "password"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:22
msgid "The group's password"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:25
msgid "groups"
msgstr ""

#: ../../../salt/states/postgres_group.pydocstring of
#: salt.states.postgres_group.present:25
msgid "A string of comma separated groups the group should be in"
msgstr ""
