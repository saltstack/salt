# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../ref/states/providers.rst:6
msgid "State Providers"
msgstr ""

#: ../../ref/states/providers.rst:10
msgid ""
"Salt predetermines what modules should be mapped to what uses based on the "
"properties of a system. These determinations are generally made for modules "
"that provide things like package and service management."
msgstr ""

#: ../../ref/states/providers.rst:14
msgid ""
"Sometimes in states, it may be necessary to use an alternative module to "
"provide the needed functionality. For instance, an older Arch Linux system "
"may not be running systemd, so instead of using the systemd service module, "
"you can revert to the default service module:"
msgstr ""

#: ../../ref/states/providers.rst:26
msgid ""
"In this instance, the basic :py:mod:`~salt.modules.service` module (which "
"manages :program:`sysvinit`-based services) will replace the "
":py:mod:`~salt.modules.systemd` module which is used by default on Arch "
"Linux."
msgstr ""

#: ../../ref/states/providers.rst:30
msgid ""
"However, if it is necessary to make this override for most or every service,"
" it is better to just override the provider in the minion config file, as "
"described in the section below."
msgstr ""

#: ../../ref/states/providers.rst:35
msgid "Setting a Provider in the Minion Config File"
msgstr ""

#: ../../ref/states/providers.rst:39
msgid ""
"Sometimes, when running Salt on custom Linux spins, or distros that are "
"derived from other distros, Salt does not successfully detect providers. The"
" providers which are most likely to be affected by this are:"
msgstr ""

#: ../../ref/states/providers.rst:43
msgid "pkg"
msgstr ""

#: ../../ref/states/providers.rst:44 ../../ref/states/providers.rst:106
msgid "service"
msgstr ""

#: ../../ref/states/providers.rst:45
msgid "user"
msgstr ""

#: ../../ref/states/providers.rst:46
msgid "group"
msgstr ""

#: ../../ref/states/providers.rst:48
msgid ""
"When something like this happens, rather than specifying the provider "
"manually in each state, it easier to use the :conf_minion:`providers` "
"parameter in the minion config file to set the provider."
msgstr ""

#: ../../ref/states/providers.rst:52
msgid ""
"If you end up needing to override a provider because it was not detected, "
"please let us know! File an issue on the `issue tracker`_, and provide the "
"output from the :mod:`grains.items <salt.modules.grains.items>` function, "
"taking care to sanitize any sensitive information."
msgstr ""

#: ../../ref/states/providers.rst:57
msgid ""
"Below are tables that should help with deciding which provider to use if one"
" needs to be overridden."
msgstr ""

#: ../../ref/states/providers.rst:62
msgid "Provider: ``pkg``"
msgstr ""

#: ../../ref/states/providers.rst:65 ../../ref/states/providers.rst:94
#: ../../ref/states/providers.rst:118 ../../ref/states/providers.rst:133
msgid "Execution Module"
msgstr ""

#: ../../ref/states/providers.rst:65 ../../ref/states/providers.rst:94
#: ../../ref/states/providers.rst:118 ../../ref/states/providers.rst:133
msgid "Used for"
msgstr ""

#: ../../ref/states/providers.rst:67
msgid "apt"
msgstr ""

#: ../../ref/states/providers.rst:67
msgid ""
"Debian/Ubuntu-based distros which use ``apt-get(8)`` for package management"
msgstr ""

#: ../../ref/states/providers.rst:69
msgid "brew"
msgstr ""

#: ../../ref/states/providers.rst:69
msgid "Mac OS software management using `Homebrew`_"
msgstr ""

#: ../../ref/states/providers.rst:70
msgid "ebuild"
msgstr ""

#: ../../ref/states/providers.rst:70
msgid ""
"Gentoo-based systems (utilizes the ``portage`` python module as well as "
"``emerge(1)``)"
msgstr ""

#: ../../ref/states/providers.rst:72
msgid "freebsdpkg"
msgstr ""

#: ../../ref/states/providers.rst:72
msgid "FreeBSD-based OSes using ``pkg_add(1)``"
msgstr ""

#: ../../ref/states/providers.rst:73
msgid "openbsdpkg"
msgstr ""

#: ../../ref/states/providers.rst:73
msgid "OpenBSD-based OSes using ``pkg_add(1)``"
msgstr ""

#: ../../ref/states/providers.rst:74
msgid "pacman"
msgstr ""

#: ../../ref/states/providers.rst:74
msgid "Arch Linux-based distros using ``pacman(8)``"
msgstr ""

#: ../../ref/states/providers.rst:75
msgid "pkgin"
msgstr ""

#: ../../ref/states/providers.rst:75
msgid "NetBSD-based OSes using ``pkgin(1)``"
msgstr ""

#: ../../ref/states/providers.rst:76
msgid "pkgng"
msgstr ""

#: ../../ref/states/providers.rst:76
msgid "FreeBSD-based OSes using ``pkg(8)``"
msgstr ""

#: ../../ref/states/providers.rst:77
msgid "pkgutil"
msgstr ""

#: ../../ref/states/providers.rst:77
msgid "Solaris-based OSes using `OpenCSW`_'s ``pkgutil(1)``"
msgstr ""

#: ../../ref/states/providers.rst:78
msgid "solarispkg"
msgstr ""

#: ../../ref/states/providers.rst:78
msgid "Solaris-based OSes using ``pkgadd(1M)``"
msgstr ""

#: ../../ref/states/providers.rst:79
msgid "win_pkg"
msgstr ""

#: ../../ref/states/providers.rst:79 ../../ref/states/providers.rst:110
#: ../../ref/states/providers.rst:125 ../../ref/states/providers.rst:140
msgid "Windows"
msgstr ""

#: ../../ref/states/providers.rst:80
msgid "yumpkg"
msgstr ""

#: ../../ref/states/providers.rst:80
msgid ""
"RedHat-based distros and derivatives (utilizes the ``yum`` and ``rpmUtils`` "
"modules)"
msgstr ""

#: ../../ref/states/providers.rst:82
msgid "yumpkg5"
msgstr ""

#: ../../ref/states/providers.rst:82
msgid "RedHat-based distros and derivatives (wraps ``yum(8)``)"
msgstr ""

#: ../../ref/states/providers.rst:83
msgid "zypper"
msgstr ""

#: ../../ref/states/providers.rst:83
msgid "SUSE-based distros using ``zypper(8)``"
msgstr ""

#: ../../ref/states/providers.rst:91
msgid "Provider: ``service``"
msgstr ""

#: ../../ref/states/providers.rst:96
msgid "debian_service"
msgstr ""

#: ../../ref/states/providers.rst:96
msgid "Debian Linux (non-systemd)"
msgstr ""

#: ../../ref/states/providers.rst:97
msgid "freebsdservice"
msgstr ""

#: ../../ref/states/providers.rst:97
msgid "FreeBSD-based OSes using ``service(8)``"
msgstr ""

#: ../../ref/states/providers.rst:98
msgid "gentoo_service"
msgstr ""

#: ../../ref/states/providers.rst:98
msgid "Gentoo Linux using :program:`sysvinit` and ``rc-update(8)``"
msgstr ""

#: ../../ref/states/providers.rst:100
msgid "launchctl"
msgstr ""

#: ../../ref/states/providers.rst:100
msgid "Mac OS hosts using ``launchctl(1)``"
msgstr ""

#: ../../ref/states/providers.rst:101
msgid "netbsdservice"
msgstr ""

#: ../../ref/states/providers.rst:101
msgid "NetBSD-based OSes"
msgstr ""

#: ../../ref/states/providers.rst:102
msgid "openbsdservice"
msgstr ""

#: ../../ref/states/providers.rst:102
msgid "OpenBSD-based OSes"
msgstr ""

#: ../../ref/states/providers.rst:103
msgid "rh_service"
msgstr ""

#: ../../ref/states/providers.rst:103
msgid ""
"RedHat-based distros and derivatives using ``service(8)`` and "
"``chkconfig(8)``. Supports both pure sysvinit and mixed sysvinit/upstart "
"systems."
msgstr ""

#: ../../ref/states/providers.rst:106
msgid "Fallback which simply wraps sysvinit scripts"
msgstr ""

#: ../../ref/states/providers.rst:107
msgid "smf"
msgstr ""

#: ../../ref/states/providers.rst:107
msgid "Solaris-based OSes which use SMF"
msgstr ""

#: ../../ref/states/providers.rst:108
msgid "systemd"
msgstr ""

#: ../../ref/states/providers.rst:108
msgid "Linux distros which use systemd"
msgstr ""

#: ../../ref/states/providers.rst:109
msgid "upstart"
msgstr ""

#: ../../ref/states/providers.rst:109
msgid "Ubuntu-based distros using upstart"
msgstr ""

#: ../../ref/states/providers.rst:110
msgid "win_service"
msgstr ""

#: ../../ref/states/providers.rst:115
msgid "Provider: ``user``"
msgstr ""

#: ../../ref/states/providers.rst:120
msgid "useradd"
msgstr ""

#: ../../ref/states/providers.rst:120
msgid ""
"Linux, NetBSD, and OpenBSD systems using ``useradd(8)``, ``userdel(8)``, and"
" ``usermod(8)``"
msgstr ""

#: ../../ref/states/providers.rst:122
msgid "pw_user"
msgstr ""

#: ../../ref/states/providers.rst:122 ../../ref/states/providers.rst:137
msgid "FreeBSD-based OSes using ``pw(8)``"
msgstr ""

#: ../../ref/states/providers.rst:123
msgid "solaris_user"
msgstr ""

#: ../../ref/states/providers.rst:123
msgid ""
"Solaris-based OSes using ``useradd(1M)``, ``userdel(1M)``, and "
"``usermod(1M)``"
msgstr ""

#: ../../ref/states/providers.rst:125
msgid "win_useradd"
msgstr ""

#: ../../ref/states/providers.rst:130
msgid "Provider: ``group``"
msgstr ""

#: ../../ref/states/providers.rst:135
msgid "groupadd"
msgstr ""

#: ../../ref/states/providers.rst:135
msgid ""
"Linux, NetBSD, and OpenBSD systems using ``groupadd(8)``, ``groupdel(8)``, "
"and ``groupmod(8)``"
msgstr ""

#: ../../ref/states/providers.rst:137
msgid "pw_group"
msgstr ""

#: ../../ref/states/providers.rst:138
msgid "solaris_group"
msgstr ""

#: ../../ref/states/providers.rst:138
msgid ""
"Solaris-based OSes using ``groupadd(1M)``, ``groupdel(1M)``, and "
"``groupmod(1M)``"
msgstr ""

#: ../../ref/states/providers.rst:140
msgid "win_groupadd"
msgstr ""

#: ../../ref/states/providers.rst:145
msgid "Arbitrary Module Redirects"
msgstr ""

#: ../../ref/states/providers.rst:147
msgid ""
"The provider statement can also be used for more powerful means, instead of "
"overwriting or extending the module used for the named service an arbitrary "
"module can be used to provide certain functionality."
msgstr ""

#: ../../ref/states/providers.rst:159
msgid ""
"In this example the default :py:mod:`~salt.modules.pkg` module is being "
"redirected to use the :py:mod:`~salt.modules.yumpkg5` module (:program:`yum`"
" via shelling out instead of via the :program:`yum` Python API), but is also"
" using a custom module to invoke commands. This could be used to "
"dramatically change the behavior of a given state."
msgstr ""
