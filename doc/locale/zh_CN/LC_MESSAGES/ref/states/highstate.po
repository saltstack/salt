# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../ref/states/highstate.rst:6
msgid "Highstate data structure definitions"
msgstr ""

#: ../../ref/states/highstate.rst:9
msgid "The Salt State Tree"
msgstr ""

#: ../../ref/states/highstate.rst:12
msgid "Top file"
msgstr ""

#: ../../ref/states/highstate.rst:14
msgid ""
"The main state file that instructs minions what environment and modules to "
"use during state execution."
msgstr ""

#: ../../ref/states/highstate.rst:17
msgid "Configurable via :conf_master:`state_top`."
msgstr ""

#: ../../ref/states/highstate.rst:19
msgid ":doc:`A detailed description of the top file </ref/states/top>`"
msgstr ""

#: ../../ref/states/highstate.rst:22
msgid "State tree"
msgstr ""

#: ../../ref/states/highstate.rst:24
msgid ""
"A collection of ``SLS`` files that live under the directory specified in "
":conf_master:`file_roots`. A state tree can be organized into ``SLS "
"modules``."
msgstr ""

#: ../../ref/states/highstate.rst:29 ../../ref/states/highstate.rst:32
msgid "Include declaration"
msgstr ""

#: ../../ref/states/highstate.rst:34
msgid ""
"Defines a list of :term:`module reference` strings to include in this "
":term:`SLS`."
msgstr ""

#: ../../ref/states/highstate.rst:37
msgid "Occurs only in the top level of the highstate structure."
msgstr ""

#: ../../ref/states/highstate.rst:39
msgid "Example:"
msgstr ""

#: ../../ref/states/highstate.rst:48 ../../ref/states/highstate.rst:51
msgid "Module reference"
msgstr ""

#: ../../ref/states/highstate.rst:53
msgid ""
"The name of a SLS module defined by a separate SLS file and residing on the "
"Salt Master. A module named ``edit.vim`` is a reference to the SLS file "
"``salt://edit/vim.sls``."
msgstr ""

#: ../../ref/states/highstate.rst:58 ../../ref/states/highstate.rst:61
msgid "ID declaration"
msgstr ""

#: ../../ref/states/highstate.rst:63
msgid ""
"Defines an individual highstate component. Always references a value of a "
"dictionary containing keys referencing :term:`state declarations <state "
"declaration>` and :term:`requisite declarations <requisite declaration>`. "
"Can be overridden by a :term:`name declaration` or a :term:`names "
"declaration`."
msgstr ""

#: ../../ref/states/highstate.rst:69
msgid "Occurs on the top level or under the :term:`extend declaration`."
msgstr ""

#: ../../ref/states/highstate.rst:71
msgid ""
"Must be unique across entire state tree. If the same ID declaration is used "
"twice, only the first one matched will be used. All subsequent ID "
"declarations with the same name will be ignored."
msgstr ""

#: ../../ref/states/highstate.rst:75
msgid "Naming gotchas"
msgstr ""

#: ../../ref/states/highstate.rst:77
msgid ""
"Until 0.9.6, IDs could **not** contain a dot, otherwise highstate summary "
"output was unpredictable. (It was fixed in versions 0.9.7 and above)"
msgstr ""

#: ../../ref/states/highstate.rst:83 ../../ref/states/highstate.rst:86
msgid "Extend declaration"
msgstr ""

#: ../../ref/states/highstate.rst:88
msgid ""
"Extends a :term:`name declaration` from an included ``SLS module``. The keys"
" of the extend declaration always define existing :term:`ID declarations <ID"
" declaration>` which have been defined in included ``SLS modules``."
msgstr ""

#: ../../ref/states/highstate.rst:93
msgid "Occurs only in the top level and defines a dictionary."
msgstr ""

#: ../../ref/states/highstate.rst:95
msgid ""
"Extend declarations are useful for adding-to or overriding parts of a "
":term:`state declaration` that is defined in another ``SLS`` file. In the "
"following contrived example, the shown ``mywebsite.sls`` file is ``include``"
" -ing and ``extend`` -ing the ``apache.sls`` module in order to add a "
"``watch`` declaration that will restart Apache whenever the Apache "
"configuration file, ``mywebsite`` changes."
msgstr ""

#: ../../ref/states/highstate.rst:117
msgid "watch_in and require_in"
msgstr ""

#: ../../ref/states/highstate.rst:119
msgid ""
"Sometimes it is more convenient to use the :ref:`watch_in <requisites-watch-"
"in>` or :ref:`require_in <requisites-require-in>` syntax instead of "
"extending another ``SLS`` file."
msgstr ""

#: ../../ref/states/highstate.rst:123
msgid ":doc:`State Requisites </ref/states/requisites>`"
msgstr ""

#: ../../ref/states/highstate.rst:126 ../../ref/states/highstate.rst:129
msgid "State declaration"
msgstr ""

#: ../../ref/states/highstate.rst:131
msgid ""
"A list which contains one string defining the :term:`function declaration` "
"and any number of :term:`function arg declaration` dictionaries."
msgstr ""

#: ../../ref/states/highstate.rst:135
msgid ""
"Can, optionally, contain a number of additional components like the name "
"override components â€” :term:`name <name declaration>` and :term:`names "
"<names declaration>`. Can also contain :term:`requisite declarations "
"<requisite declaration>`."
msgstr ""

#: ../../ref/states/highstate.rst:140
msgid "Occurs under an :term:`ID declaration`."
msgstr ""

#: ../../ref/states/highstate.rst:143 ../../ref/states/highstate.rst:146
msgid "Requisite declaration"
msgstr ""

#: ../../ref/states/highstate.rst:148
msgid "A list containing :term:`requisite references <requisite reference>`."
msgstr ""

#: ../../ref/states/highstate.rst:150
msgid ""
"Used to build the action dependency tree. While Salt states are made to "
"execute in a deterministic order, this order is managed by requiring and "
"watching other Salt states."
msgstr ""

#: ../../ref/states/highstate.rst:154
msgid ""
"Occurs as a list component under a :term:`state declaration` or as a key "
"under an :term:`ID declaration`."
msgstr ""

#: ../../ref/states/highstate.rst:158 ../../ref/states/highstate.rst:161
msgid "Requisite reference"
msgstr ""

#: ../../ref/states/highstate.rst:163
msgid ""
"A single key dictionary. The key is the name of the referenced :term:`state "
"declaration` and the value is the ID of the referenced :term:`ID "
"declaration`."
msgstr ""

#: ../../ref/states/highstate.rst:167
msgid "Occurs as a single index in a :term:`requisite declaration` list."
msgstr ""

#: ../../ref/states/highstate.rst:170 ../../ref/states/highstate.rst:173
msgid "Function declaration"
msgstr ""

#: ../../ref/states/highstate.rst:175
msgid ""
"The name of the function to call within the state. A state declaration can "
"contain only a single function declaration."
msgstr ""

#: ../../ref/states/highstate.rst:178
msgid ""
"For example, the following state declaration calls the :mod:`installed "
"<salt.states.pkg.installed>` function in the ``pkg`` state module:"
msgstr ""

#: ../../ref/states/highstate.rst:186
msgid ""
"The function can be declared inline with the state as a shortcut, but the "
"actual data structure is better referenced in this form:"
msgstr ""

#: ../../ref/states/highstate.rst:195
msgid ""
"Where the function is a string in the body of the state declaration. "
"Technically when the function is declared in dot notation the compiler "
"converts it to be a string in the state declaration list. Note that the use "
"of the first example more than once in an ID declaration is invalid yaml."
msgstr ""

#: ../../ref/states/highstate.rst:201
msgid "INVALID:"
msgstr ""

#: ../../ref/states/highstate.rst:209
msgid ""
"When passing a function without arguments and another state declaration "
"within a single ID declaration, then the long or \"standard\" format needs "
"to be used since otherwise it does not represent a valid data structure."
msgstr ""

#: ../../ref/states/highstate.rst:214
msgid "VALID:"
msgstr ""

#: ../../ref/states/highstate.rst:224
msgid "Occurs as the only index in the :term:`state declaration` list."
msgstr ""

#: ../../ref/states/highstate.rst:227 ../../ref/states/highstate.rst:230
msgid "Function arg declaration"
msgstr ""

#: ../../ref/states/highstate.rst:232
msgid ""
"A single key dictionary referencing a Python type which is to be passed to "
"the named :term:`function declaration` as a parameter. The type must be the "
"data type expected by the function."
msgstr ""

#: ../../ref/states/highstate.rst:236
msgid "Occurs under a :term:`function declaration`."
msgstr ""

#: ../../ref/states/highstate.rst:238
msgid ""
"For example in the following state declaration ``user``, ``group``, and "
"``mode`` are passed as arguments to the :mod:`managed "
"<salt.states.file.managed>` function in the ``file`` state module:"
msgstr ""

#: ../../ref/states/highstate.rst:251 ../../ref/states/highstate.rst:254
msgid "Name declaration"
msgstr ""

#: ../../ref/states/highstate.rst:256
msgid ""
"Overrides the ``name`` argument of a :term:`state declaration`. If ``name`` "
"is not specified the :term:`ID declaration` satisfies the ``name`` argument."
msgstr ""

#: ../../ref/states/highstate.rst:260
msgid "The name is always a single key dictionary referencing a string."
msgstr ""

#: ../../ref/states/highstate.rst:262
msgid "Overriding ``name`` is useful for a variety of scenarios."
msgstr ""

#: ../../ref/states/highstate.rst:264
msgid ""
"For example, avoiding clashing ID declarations. The following two state "
"declarations cannot both have ``/etc/motd`` as the ID declaration:"
msgstr ""

#: ../../ref/states/highstate.rst:279
msgid ""
"Another common reason to override ``name`` is if the ID declaration is long "
"and needs to be referenced in multiple places. In the example below it is "
"much easier to specify ``mywebsite`` than to specify ``/etc/apache2/sites-"
"available/mywebsite.com`` multiple times:"
msgstr ""

#: ../../ref/states/highstate.rst:304 ../../ref/states/highstate.rst:307
msgid "Names declaration"
msgstr ""

#: ../../ref/states/highstate.rst:309
msgid ""
"Expands the contents of the containing :term:`state declaration` into "
"multiple state declarations, each with its own name."
msgstr ""

#: ../../ref/states/highstate.rst:312
msgid "For example, given the following state declaration:"
msgstr ""

#: ../../ref/states/highstate.rst:323
msgid ""
"Once converted into the lowstate data structure the above state declaration "
"will be expanded into the following three state declarations:"
msgstr ""

#: ../../ref/states/highstate.rst:338
msgid "Large example"
msgstr ""

#: ../../ref/states/highstate.rst:340
msgid ""
"Here is the layout in yaml using the names of the highdata structure "
"components."
msgstr ""
