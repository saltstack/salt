# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../ref/states/overstate.rst:6
msgid "OverState System"
msgstr ""

#: ../../ref/states/overstate.rst:8
msgid ""
"Often servers need to be set up and configured in a specific order, and "
"systems should only be set up if systems earlier in the sequence has been "
"set up without any issues."
msgstr ""

#: ../../ref/states/overstate.rst:12
msgid ""
"The 0.11.0 release of Salt addresses this problem with a new layer in the "
"state system called the `Over State`. The concept of the `Over State` is "
"managed on the master, a series of state executions is controlled from the "
"master and executed in order. If an execution requires that another "
"execution first run without problems then the state executions will stop."
msgstr ""

#: ../../ref/states/overstate.rst:18
msgid ""
"The `Over State` system is used to orchestrate deployment in a smooth and "
"reliable way across multiple systems in small to large environments."
msgstr ""

#: ../../ref/states/overstate.rst:22
msgid "The Over State SLS"
msgstr ""

#: ../../ref/states/overstate.rst:24
msgid ""
"The overstate system is managed by an sls file located in the root of an "
"environment. This file uses a data structure like all sls files."
msgstr ""

#: ../../ref/states/overstate.rst:27
msgid ""
"The overstate sls file configures an unordered list of stages, each stage "
"defines the minions to execute on and can define what sls files to run or to"
" execute a state.highstate."
msgstr ""

#: ../../ref/states/overstate.rst:48
msgid ""
"The above defined over state will execute the mysql stage first because it "
"is required by the webservers stage. The webservers stage will then be "
"executed only if the mysql stage executes without any issues. The webservers"
" stage will execute state.highstate on the matched minions, while the mysql "
"stage will execute state.sls with the named sls files."
msgstr ""

#: ../../ref/states/overstate.rst:54
msgid ""
"Finally the all stage will execute state.highstate on all systems only if "
"the mysql and webservers stages complete without failures. The overstate "
"system checks for any states that return a result of `False`, if the run has"
" any `False` returns then the overstate will quit."
msgstr ""

#: ../../ref/states/overstate.rst:60
msgid "Adding Functions To Overstate"
msgstr ""

#: ../../ref/states/overstate.rst:62
msgid ""
"In 0.15.0 the ability to execute module functions directly in the overstate "
"was added. Functions are called as a stage with the function key:"
msgstr ""

#: ../../ref/states/overstate.rst:73
msgid ""
"The list of function arguments are passed after the declared function. "
"Requisites only functions properly if the given function supports returning "
"a custom return code."
msgstr ""

#: ../../ref/states/overstate.rst:78
msgid "Executing the Over State"
msgstr ""

#: ../../ref/states/overstate.rst:80
msgid ""
"The over state can be executed from the salt-run command, calling the "
"state.over runner function. The function will by default look in the base "
"environment for the `overstate.sls` file:"
msgstr ""

#: ../../ref/states/overstate.rst:88
msgid ""
"To specify the location of the overstate file and the environment to pull "
"from pass the arguments to the salt-run command:"
msgstr ""

#: ../../ref/states/overstate.rst:95
msgid "Remember, that these calls are made on the master."
msgstr ""
