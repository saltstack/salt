# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../ref/runners/all/salt.runners.manage.rst:6
msgid "salt.runners.manage"
msgstr ""

#: ../../../salt/runners/manage.pydocstring of salt.runners.manage:1
msgid ""
"General management functions for salt, tools like seeing what hosts are up "
"and what hosts are down"
msgstr ""

#: ../../../salt/runners/manage.pydocstring of salt.runners.manage.bootstrap:1
msgid "Bootstrap minions with salt-bootstrap"
msgstr ""

#: ../../../salt/runners/manage.pydocstring of salt.runners.manage.bootstrap:6
msgid "Options:"
msgstr ""

#: ../../../salt/runners/manage.pydocstring of salt.runners.manage.bootstrap:4
msgid ""
"version: git tag of version to install [default: develop] script: Script to "
"execute [default: http://bootstrap.saltstack.org] hosts: Comma separated "
"hosts [example: hosts=\"host1.local,host2.local\"]"
msgstr ""

#: ../../../salt/runners/manage.pydocstring of salt.runners.manage.bootstrap:8
#: ../../../salt/runners/manage.pydocstring of salt.runners.manage.down:4
#: ../../../salt/runners/manage.pydocstring of
#: salt.runners.manage.key_regen:18 ../../../salt/runners/manage.pydocstring
#: of salt.runners.manage.status:3 ../../../salt/runners/manage.pydocstring of
#: salt.runners.manage.up:3 ../../../salt/runners/manage.pydocstring of
#: salt.runners.manage.versions:3
msgid "CLI Example:"
msgstr ""

#: ../../../salt/runners/manage.pydocstring of salt.runners.manage.down:1
msgid ""
"Print a list of all the down or unresponsive salt minions Optionally remove "
"keys of down minions"
msgstr ""

#: ../../../salt/runners/manage.pydocstring of salt.runners.manage.key_regen:1
msgid ""
"This routine is used to regenerate all keys in an environment. This is "
"invasive! ALL KEYS IN THE SALT ENVIRONMENT WILL BE REGENERATED!!"
msgstr ""

#: ../../../salt/runners/manage.pydocstring of salt.runners.manage.key_regen:4
msgid ""
"The key_regen routine sends a command out to minions to revoke the master "
"key and remove all minion keys, it then removes all keys from the master and"
" prompts the user to restart the master. The minions will all reconnect and "
"keys will be placed in pending."
msgstr ""

#: ../../../salt/runners/manage.pydocstring of salt.runners.manage.key_regen:9
msgid ""
"After the master is restarted and minion keys are in the pending directory "
"execute a salt-key -A command to accept the regenerated minion keys."
msgstr ""

#: ../../../salt/runners/manage.pydocstring of
#: salt.runners.manage.key_regen:12
msgid ""
"The master *must* be restarted within 60 seconds of running this command or "
"the minions will think there is something wrong with the keys and abort."
msgstr ""

#: ../../../salt/runners/manage.pydocstring of
#: salt.runners.manage.key_regen:15
msgid ""
"Only Execute this runner after upgrading minions and master to 0.15.1 or "
"higher!"
msgstr ""

#: ../../../salt/runners/manage.pydocstring of salt.runners.manage.status:1
msgid "Print the status of all known salt minions"
msgstr ""

#: ../../../salt/runners/manage.pydocstring of salt.runners.manage.up:1
msgid "Print a list of all of the minions that are up"
msgstr ""

#: ../../../salt/runners/manage.pydocstring of salt.runners.manage.versions:1
msgid "Check the version of active minions"
msgstr ""
