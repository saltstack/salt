# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../ref/modules/all/salt.modules.cmdmod.rst:6
msgid "salt.modules.cmdmod"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod:1
msgid "A module for shelling out"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod:3
msgid ""
"Keep in mind that this module is insecure, in that it can give whomever has "
"access to the master root execution access to all salt minions"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.exec_code:1
msgid ""
"Pass in two strings, the first naming the executable language, aka - "
"python2, python3, ruby, perl, lua, etc. the second string containing the "
"code you wish to execute. The stdout and stderr will be returned"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.exec_code:5
#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.has_exec:3
#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.retcode:6
#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.run:6
#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.run_all:6
#: ../../../salt/modules/cmdmod.pydocstring of
#: salt.modules.cmdmod.run_stderr:6 ../../../salt/modules/cmdmod.pydocstring
#: of salt.modules.cmdmod.run_stdout:6
#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.script:11
#: ../../../salt/modules/cmdmod.pydocstring of
#: salt.modules.cmdmod.script_retcode:12
#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.which:3
#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.which_bin:3
msgid "CLI Example:"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.has_exec:1
msgid ""
"Returns true if the executable is available on the minion, false otherwise"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.retcode:1
msgid "Execute a shell command and return the command's return code."
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.retcode:3
#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.run:3
#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.run_all:3
#: ../../../salt/modules/cmdmod.pydocstring of
#: salt.modules.cmdmod.run_stderr:3 ../../../salt/modules/cmdmod.pydocstring
#: of salt.modules.cmdmod.run_stdout:3
msgid ""
"Note that ``env`` represents the environment variables for the command, and "
"should be formatted as a dict, or a YAML string which resolves to a dict."
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.retcode:12
#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.run:12
#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.run_all:12
#: ../../../salt/modules/cmdmod.pydocstring of
#: salt.modules.cmdmod.run_stderr:12 ../../../salt/modules/cmdmod.pydocstring
#: of salt.modules.cmdmod.run_stdout:12
msgid ""
"The template arg can be set to 'jinja' or another supported template engine "
"to render the command arguments before execution. For example:"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.retcode:20
#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.run:26
#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.run_all:20
#: ../../../salt/modules/cmdmod.pydocstring of
#: salt.modules.cmdmod.run_stderr:20 ../../../salt/modules/cmdmod.pydocstring
#: of salt.modules.cmdmod.run_stdout:20
#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.script:19
#: ../../../salt/modules/cmdmod.pydocstring of
#: salt.modules.cmdmod.script_retcode:18
msgid ""
"A string of standard input can be specified for the command to be run using "
"the ``stdin`` parameter. This can be useful in cases where sensitive "
"information must be read from standard input.:"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.run:1
msgid "Execute the passed command and return the output as a string"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.run:20
msgid "Specify an alternate shell with the shell parameter:"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.run_all:1
msgid "Execute the passed command and return a dict of return data"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of
#: salt.modules.cmdmod.run_stderr:1
msgid "Execute a command and only return the standard error"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of
#: salt.modules.cmdmod.run_stdout:1
msgid "Execute a command, and only return the standard out"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.script:1
#: ../../../salt/modules/cmdmod.pydocstring of
#: salt.modules.cmdmod.script_retcode:1
msgid ""
"Download a script from a remote location and execute the script locally. The"
" script can be located on the salt master file server or on an HTTP/FTP "
"server."
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.script:5
#: ../../../salt/modules/cmdmod.pydocstring of
#: salt.modules.cmdmod.script_retcode:5
msgid ""
"The script will be executed directly, so it can be written in any available "
"programming language."
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.script:8
msgid ""
"The script can also be formated as a template, the default is jinja. "
"Arguments for the script can be specified as well."
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of
#: salt.modules.cmdmod.script_retcode:8
msgid "The script can also be formated as a template, the default is jinja."
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of
#: salt.modules.cmdmod.script_retcode:10
msgid ""
"Only evaluate the script return code and do not block for terminal output"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.which:1
msgid ""
"Returns the path of an executable available on the minion, None otherwise"
msgstr ""

#: ../../../salt/modules/cmdmod.pydocstring of salt.modules.cmdmod.which_bin:1
msgid "Returns the first command found in a list of commands"
msgstr ""
