# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../ref/modules/all/salt.modules.dnsutil.rst:6
msgid "salt.modules.dnsutil"
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of salt.modules.dnsutil:1
msgid "Compendium of generic DNS utilities"
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of salt.modules.dnsutil.A:1
msgid "Return the A record for 'host'."
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of salt.modules.dnsutil.A:3
msgid "Always returns a list."
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of salt.modules.dnsutil.A:5
#: ../../../salt/modules/dnsutil.pydocstring of salt.modules.dnsutil.MX:10
#: ../../../salt/modules/dnsutil.pydocstring of salt.modules.dnsutil.NS:5
#: ../../../salt/modules/dnsutil.pydocstring of salt.modules.dnsutil.SPF:7
#: ../../../salt/modules/dnsutil.pydocstring of
#: salt.modules.dnsutil.check_ip:3 ../../../salt/modules/dnsutil.pydocstring
#: of salt.modules.dnsutil.hosts_append:3
#: ../../../salt/modules/dnsutil.pydocstring of
#: salt.modules.dnsutil.parse_hosts:3
#: ../../../salt/modules/dnsutil.pydocstring of
#: salt.modules.dnsutil.parse_zone:3
msgid "CLI Example:"
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of salt.modules.dnsutil.MX:1
msgid "Return a list of lists for the MX of ``domain``."
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of salt.modules.dnsutil.MX:3
msgid "If the 'resolve' argument is True, resolve IPs for the servers."
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of salt.modules.dnsutil.MX:5
msgid ""
"It's limited to one IP, because although in practice it's very rarely a "
"round robin, it is an acceptable configuration and pulling just one IP lets "
"the data be similar to the non-resolved version. If you think an MX has "
"multiple IPs, don't use the resolver here, resolve them in a separate step."
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of salt.modules.dnsutil.NS:1
msgid "Return a list of IPs of the nameservers for ``domain``"
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of salt.modules.dnsutil.NS:3
msgid "If 'resolve' is False, don't resolve names."
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of salt.modules.dnsutil.SPF:1
msgid "Return the allowed IPv4 ranges in the SPF record for ``domain``."
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of salt.modules.dnsutil.SPF:3
msgid ""
"If record is ``SPF`` and the SPF record is empty, the TXT record will be "
"searched automatically. If you know the domain uses TXT and not SPF, "
"specifying that will save a lookup."
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of
#: salt.modules.dnsutil.check_ip:1
msgid "Check that string ip_addr is a valid IP"
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of
#: salt.modules.dnsutil.hosts_append:1
msgid "Append a single line to the /etc/hosts file."
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of
#: salt.modules.dnsutil.hosts_remove:1
msgid ""
"Remove a host from the /etc/hosts file. If doing so will leave a line "
"containing only an IP address, then the line will be deleted. This function "
"will leave comments and blank lines intact."
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of
#: salt.modules.dnsutil.hosts_remove:5
msgid "CLI Examples:"
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of
#: salt.modules.dnsutil.parse_hosts:1
msgid "Parse /etc/hosts file."
msgstr ""

#: ../../../salt/modules/dnsutil.pydocstring of
#: salt.modules.dnsutil.parse_zone:1
msgid "Parses a zone file. Can be passed raw zone data on the API level."
msgstr ""
