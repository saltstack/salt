# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../ref/modules/all/salt.modules.solarispkg.rst:6
msgid "salt.modules.solarispkg"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of salt.modules.solarispkg:1
msgid "Package support for Solaris"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:1
msgid ""
"Install the passed package. Can install packages from the following "
"sources::"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:9
msgid "Returns a dict containing the new package names and versions::"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:14
msgid ""
"CLI Example, installing a datastream pkg that already exists on the minion::"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:20
msgid ""
"CLI Example, installing a datastream pkg that exists on the salt master::"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:25
msgid ""
"CLI Example, installing a datastream pkg that exists on a HTTP server::"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:30
msgid ""
"If working with solaris zones and you want to install a package only in the "
"global zone you can pass 'current_zone_only=True' to salt to have the "
"package only installed in the global zone. (Behind the scenes this is "
"passing '-G' to the pkgadd command.) Solaris default when installing a "
"package in the global zone is to install it in all zones. This overrides "
"that and installs the package only in the global."
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:37
msgid "CLI Example, installing a datastream package only in the global zone::"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:41
msgid ""
"By default salt automatically provides an adminfile, to automate package "
"installation, with these options set::"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:56
#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.remove:21
msgid ""
"You can override any of these options in two ways. First you can optionally "
"pass any of the options as a kwarg to the module/state to override the "
"default value or you can optionally pass the 'admin_source' option providing"
" your own adminfile to the minions."
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:61
msgid ""
"Note: You can find all of the possible options to provide to the adminfile "
"by reading the admin man page::"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:66
msgid ""
"CLI Example - Overriding the 'instance' adminfile option when calling the "
"module directly::"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:71
msgid ""
"CLI Example - Overriding the 'instance' adminfile option when used in a "
"state::"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:80
#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:96
msgid ""
"Note: the ID declaration is ignored, as the package name is read from the "
"\"sources\" parameter."
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:83
msgid ""
"CLI Example - Providing your own adminfile when calling the module "
"directly::"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.install:88
msgid "CLI Example - Providing your own adminfile when using states::"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.latest_version:1
msgid ""
"Return the latest version of the named package available for upgrade or "
"installation. If more than one package name is specified, a dict of "
"name/version pairs is returned."
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.latest_version:5
msgid ""
"If the latest version of a given package is already installed, an empty "
"string will be returned for that package."
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.latest_version:8
#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.list_pkgs:5
#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.purge:19
#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.remove:45
#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.upgrade_available:3
#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.version:5
msgid "CLI Example:"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.latest_version:15
msgid ""
"NOTE: As package repositories are not presently supported for Solaris "
"pkgadd, this function will always return an empty string for a given "
"package."
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.list_pkgs:1
msgid "List the packages currently installed as a dict::"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.purge:1
msgid ""
"Package purges are not supported, this function is identical to "
"``remove()``."
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.purge:6
#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.remove:4
msgid "name"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.purge:5
#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.remove:4
msgid "The name of the package to be deleted"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.purge:8
#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.remove:34
msgid "Multiple Package Options:"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.purge:12
#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.remove:38
msgid "pkgs"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.purge:11
#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.remove:37
msgid ""
"A list of packages to delete. Must be passed as a python list. The ``name`` "
"parameter will be ignored if this option is passed."
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.purge:17
#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.remove:43
msgid "Returns a dict containing the changes."
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.remove:1
msgid "Remove packages with pkgrm"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.remove:6
msgid ""
"By default salt automatically provides an adminfile, to automate package "
"removal, with these options set::"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.remove:26
msgid ""
"Note: You can find all of the possible options to provide to the adminfile "
"by reading the admin man page:"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.upgrade_available:1
msgid "Check whether or not an upgrade is available for a given package"
msgstr ""

#: ../../../salt/modules/solarispkg.pydocstring of
#: salt.modules.solarispkg.version:1
msgid ""
"Returns a string representing the package version or an empty string if not "
"installed. If more than one package name is specified, a dict of "
"name/version pairs is returned."
msgstr ""
