# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../ref/modules/all/salt.modules.iptables.rst:6
msgid "salt.modules.iptables"
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of salt.modules.iptables:1
msgid "Support for iptables"
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.append:1
msgid "Append a rule to the specified table/chain."
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.append:6 ../../../salt/modules/iptables.pydocstring
#: of salt.modules.iptables.check:6 ../../../salt/modules/iptables.pydocstring
#: of salt.modules.iptables.delete:7
#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.insert:6
msgid "This function accepts a rule in a standard iptables command format,"
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.append:4 ../../../salt/modules/iptables.pydocstring
#: of salt.modules.iptables.check:4 ../../../salt/modules/iptables.pydocstring
#: of salt.modules.iptables.delete:5
#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.insert:4
msgid ""
"starting with the chain. Trying to force users to adapt to a new method of "
"creating rules would be irritating at best, and we already have a parser "
"that can handle it."
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.append:8 ../../../salt/modules/iptables.pydocstring
#: of salt.modules.iptables.check:8 ../../../salt/modules/iptables.pydocstring
#: of salt.modules.iptables.flush:3 ../../../salt/modules/iptables.pydocstring
#: of salt.modules.iptables.get_policy:3
#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.get_rules:3
#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.get_saved_rules:3
#: ../../../salt/modules/iptables.pydocstring of salt.modules.iptables.save:3
#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.set_policy:3
#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.version:3
msgid "CLI Example:"
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.build_rule:1
msgid ""
"Build a well-formatted iptables rule based on kwargs. Long options must be "
"used (`--jump` instead of `-j`) because they will have the `--` added to "
"them. A `table` and `chain` are not required, unless `full` is True."
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.build_rule:5
msgid ""
"If `full` is `True`, then `table`, `chain` and `command` are required. "
"`command` may be specified as either a short option ('I') or a long option "
"(`--insert`). This will return the iptables command, exactly as it would be "
"used from the command line."
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.build_rule:10
msgid ""
"If a position is required (as with `-I` or `-D`), it may be specified as "
"`position`. This will only be useful if `full` is True."
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.build_rule:13
msgid ""
"If `connstate` is passed in, it will automatically be changed to `state`."
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.build_rule:15
#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.delete:9 ../../../salt/modules/iptables.pydocstring
#: of salt.modules.iptables.get_saved_policy:3
#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.insert:8
msgid "CLI Examples:"
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of salt.modules.iptables.check:1
msgid "Check for the existance of a rule in the table and chain"
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.delete:2
msgid ""
"Delete a rule from the specified table/chain, specifying either the rule"
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.delete:2
msgid "in its entirety, or the rule's position in the chain."
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of salt.modules.iptables.flush:1
msgid "Flush all chains in the specified table."
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.get_policy:1
#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.get_saved_policy:1
msgid "Return the current policy for the specified table/chain"
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.get_rules:1
msgid "Return a data structure of the current, in-memory rules"
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.get_saved_rules:1
msgid "Return a data structure of the rules in the conf file"
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.insert:1
msgid ""
"Insert a rule into the specified table/chain, at the specified position."
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of salt.modules.iptables.save:1
msgid "Save the current in-memory rules to disk"
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.set_policy:1
msgid "Set the current policy for the specified table/chain"
msgstr ""

#: ../../../salt/modules/iptables.pydocstring of
#: salt.modules.iptables.version:1
msgid "Return version from iptables --version"
msgstr ""
