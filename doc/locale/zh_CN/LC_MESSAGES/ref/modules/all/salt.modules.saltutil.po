# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../ref/modules/all/salt.modules.saltutil.rst:6
msgid "salt.modules.saltutil"
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of salt.modules.saltutil:1
msgid ""
"The Saltutil module is used to manage the state of the salt minion itself. "
"It is used to manage minion modules as well as automate updates to the salt "
"minion."
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of salt.modules.saltutil:3
msgid "esky Python module for update functionality"
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of salt.modules.saltutil.cmd:1
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.cmd_iter:1
msgid "Assuming this minion is a master, execute a salt command"
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of salt.modules.saltutil.cmd:3
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.cmd_iter:3 ../../../salt/modules/saltutil.pydocstring
#: of salt.modules.saltutil.find_job:3
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.is_running:4
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.kill_job:3 ../../../salt/modules/saltutil.pydocstring
#: of salt.modules.saltutil.refresh_modules:3
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.refresh_pillar:3
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.regen_keys:3
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.revoke_auth:5
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.running:3 ../../../salt/modules/saltutil.pydocstring
#: of salt.modules.saltutil.signal_job:3
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.sync_all:4 ../../../salt/modules/saltutil.pydocstring
#: of salt.modules.saltutil.sync_grains:6
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.sync_modules:6
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.sync_outputters:6
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.sync_renderers:6
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.sync_returners:6
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.sync_states:6
#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.term_job:3 ../../../salt/modules/saltutil.pydocstring
#: of salt.modules.saltutil.update:11
msgid "CLI Example:"
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.find_job:1
msgid "Return the data for a specific job id"
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.is_running:1
msgid ""
"If the named function is running return the data associated with it/them. "
"The argument can be a glob"
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.kill_job:1
msgid "Sends a kill signal (SIGKILL 9) to the named salt job's process"
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.refresh_modules:1
msgid "Signal the minion to refresh the module and grain data"
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.refresh_pillar:1
msgid "Signal the minion to refresh the pillar data."
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.regen_keys:1
msgid "Used to regenerate the minion keys."
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.revoke_auth:1
msgid ""
"The minion sends a request to the master to revoke its own key. Note that "
"the minion session will be revoked and the minion may not be able to return "
"the result of this command back to the master."
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.running:1
msgid "Return the data on all running salt processes on the minion"
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.signal_job:1
msgid "Sends a signal to the named salt job's process"
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.sync_all:1
msgid ""
"Sync down all of the dynamic modules from the file server for a specific "
"environment"
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.sync_grains:1
msgid ""
"Sync the grains from the _grains directory on the salt master file server. "
"This function is environment aware, pass the desired environment to grab the"
" contents of the _grains directory, base is the default environment."
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.sync_modules:1
msgid ""
"Sync the modules from the _modules directory on the salt master file server."
" This function is environment aware, pass the desired environment to grab "
"the contents of the _modules directory, base is the default environment."
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.sync_outputters:1
msgid ""
"Sync the outputters from the _outputters directory on the salt master file "
"server. This function is environment aware, pass the desired environment to "
"grab the contents of the _outputters directory, base is the default "
"environment."
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.sync_renderers:1
msgid ""
"Sync the renderers from the _renderers directory on the salt master file "
"server. This function is environment aware, pass the desired environment to "
"grab the contents of the _renderers directory, base is the default "
"environment."
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.sync_returners:1
msgid ""
"Sync the returners from the _returners directory on the salt master file "
"server. This function is environment aware, pass the desired environment to "
"grab the contents of the _returners directory, base is the default "
"environment."
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.sync_states:1
msgid ""
"Sync the states from the _states directory on the salt master file server. "
"This function is environment aware, pass the desired environment to grab the"
" contents of the _states directory, base is the default environment."
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.term_job:1
msgid ""
"Sends a termination signal (SIGTERM 15) to the named salt job's process"
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.update:1
msgid "Update the salt minion from the URL defined in opts['update_url']"
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.update:4
msgid "This feature requires the minion to be running a bdist_esky build."
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.update:6
msgid ""
"The version number is optional and will default to the most recent version "
"available at opts['update_url']."
msgstr ""

#: ../../../salt/modules/saltutil.pydocstring of
#: salt.modules.saltutil.update:9
msgid "Returns details about the transaction upon completion."
msgstr ""
