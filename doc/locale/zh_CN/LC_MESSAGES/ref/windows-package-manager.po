# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../ref/windows-package-manager.rst:6
msgid "Windows Software Repository"
msgstr ""

#: ../../ref/windows-package-manager.rst:8
msgid ""
"The Salt Windows Software Repository provides a package manager and software"
" repository similar to what is provided by yum and apt on Linux."
msgstr ""

#: ../../ref/windows-package-manager.rst:11
msgid ""
"It permits the installation of software using the installers on remote "
"windows machines. In many senses, the operation is similar to that of the "
"other package managers salt is aware of:"
msgstr ""

#: ../../ref/windows-package-manager.rst:15
msgid "the ``pkg.installed`` and similar states work on Windows."
msgstr ""

#: ../../ref/windows-package-manager.rst:16
msgid "the ``pkg.install`` and similar module functions work on Windows."
msgstr ""

#: ../../ref/windows-package-manager.rst:17
msgid ""
"each windows machine needs to have ``pkg.refresh_db`` executed against it to"
" pick up the latest version of the package database."
msgstr ""

#: ../../ref/windows-package-manager.rst:20
msgid "High level differences to yum and apt are:"
msgstr ""

#: ../../ref/windows-package-manager.rst:22
msgid ""
"The repository metadata (sls files) is hosted through either salt or git."
msgstr ""

#: ../../ref/windows-package-manager.rst:24
msgid ""
"Packages can be downloaded from within the salt repository, a git repository"
" or from http(s) or ftp urls."
msgstr ""

#: ../../ref/windows-package-manager.rst:26
msgid ""
"No dependencies are managed. Dependencies between packages needs to be "
"managed manually."
msgstr ""

#: ../../ref/windows-package-manager.rst:31
msgid "Operation"
msgstr ""

#: ../../ref/windows-package-manager.rst:33
msgid ""
"The install state/module function of the windows package manager works "
"roughly as follows:"
msgstr ""

#: ../../ref/windows-package-manager.rst:36
msgid "Execute ``pkg.list_pkgs`` and store the result"
msgstr ""

#: ../../ref/windows-package-manager.rst:37
msgid ""
"Check if any action needs to be taken. (ie compare required package and "
"version against ``pkg.list_pkgs`` results)"
msgstr ""

#: ../../ref/windows-package-manager.rst:39
msgid "If so, run the installer command."
msgstr ""

#: ../../ref/windows-package-manager.rst:40
msgid ""
"Execute ``pkg.list_pkgs`` and compare to the result stored from before "
"installation."
msgstr ""

#: ../../ref/windows-package-manager.rst:42
msgid ""
"Sucess/Failure/Changes will be reported based on the differences between the"
" original and final ``pkg.list_pkgs`` results."
msgstr ""

#: ../../ref/windows-package-manager.rst:45
msgid ""
"If there are any problems in using the package manager it is likely to be "
"due to the data in your sls files not matching the difference between the "
"pre and post ``pkg.list_pkgs`` results."
msgstr ""

#: ../../ref/windows-package-manager.rst:52
msgid "Usage"
msgstr ""

#: ../../ref/windows-package-manager.rst:54
msgid ""
"By default, the Windows software repository is found at "
"``/srv/salt/win/repo`` This can be changed in the master config file "
"(default location is ``/etc/salt/master``) by modifying the  ``win_repo`` "
"variable.  Each piece of software should have its own directory which "
"contains the installers and a package definition file. This package "
"definition file is a YAML file named ``init.sls``."
msgstr ""

#: ../../ref/windows-package-manager.rst:61
msgid ""
"The package definition file should look similar to this example for Firefox:"
" ``/srv/salt/win/repo/firefox/init.sls``"
msgstr ""

#: ../../ref/windows-package-manager.rst:92
msgid ""
"More examples can be found here: https://github.com/saltstack/salt-winrepo"
msgstr ""

#: ../../ref/windows-package-manager.rst:94
msgid ""
"The version number and ``full_name`` need to match the output from "
"``pkg.list_pkgs`` so that the status can be verfied when running highstate. "
"Note: It is still possible to successfully install packages using "
"``pkg.install`` even if they don't match which can make this hard to "
"troubleshoot."
msgstr ""

#: ../../ref/windows-package-manager.rst:123
msgid ""
"If any of these preinstalled packages already exist in winrepo the full_name"
" will be automatically renamed to their package name during the next update "
"(running highstate or installing another package)."
msgstr ""

#: ../../ref/windows-package-manager.rst:150
msgid ""
"Add ``msiexec: True`` if using an MSI installer requiring the use of "
"``msiexec /i`` to install and ``msiexec /x`` to uninstall."
msgstr ""

#: ../../ref/windows-package-manager.rst:153
msgid ""
"The ``install_flags`` and ``uninstall_flags`` are flags passed to the "
"software installer to cause it to perform a silent install. These can often "
"be found by adding ``/?`` or ``/h`` when running the installer from the "
"command line. A great resource for finding these silent install flags can be"
" found on the WPKG project's wiki_:"
msgstr ""

#: ../../ref/windows-package-manager.rst:174
msgid "Generate Repo Cache File"
msgstr ""

#: ../../ref/windows-package-manager.rst:176
msgid ""
"Once the sls file has been created, generate the repository cache file with "
"the winrepo runner:"
msgstr ""

#: ../../ref/windows-package-manager.rst:182
msgid ""
"Then update the repository cache file on your minions, exactly how it's done"
" for the Linux package managers:"
msgstr ""

#: ../../ref/windows-package-manager.rst:190
msgid "Install Windows Software"
msgstr ""

#: ../../ref/windows-package-manager.rst:192
msgid ""
"Now you can query the available version of Firefox using the Salt pkg "
"module."
msgstr ""

#: ../../ref/windows-package-manager.rst:202
msgid ""
"As you can see, there are three versions of Firefox available for "
"installation."
msgstr ""

#: ../../ref/windows-package-manager.rst:208
msgid "The above line will install the latest version of Firefox."
msgstr ""

#: ../../ref/windows-package-manager.rst:214
msgid "The above line will install version 16.0.2 of Firefox."
msgstr ""

#: ../../ref/windows-package-manager.rst:216
msgid ""
"If a different version of the package is already installed it will be "
"replaced with the version in winrepo (only if the package itself supports "
"live updating)"
msgstr ""

#: ../../ref/windows-package-manager.rst:222
msgid "Uninstall Windows Software"
msgstr ""

#: ../../ref/windows-package-manager.rst:224
msgid "Uninstall software using the pkg module:"
msgstr ""

#: ../../ref/windows-package-manager.rst:232
msgid ""
"``pkg.purge`` just executes ``pkg.remove`` on Windows. At some point in the "
"future ``pkg.purge`` may direct the installer to remove all configs and "
"settings for software packages that support that option."
msgstr ""

#: ../../ref/windows-package-manager.rst:239
msgid "Standalone Minion Salt Windows Repo Module"
msgstr ""

#: ../../ref/windows-package-manager.rst:241
msgid ""
"In order to facilitate managing a Salt Windows software repo with Salt on a "
"Standalone Minion on Windows, a new module named winrepo has been added to "
"Salt. wirepo matches what is available in the salt runner and allows you to "
"manage the Windows software repo contents. Example: ``salt '*' "
"winrepo.genrepo``"
msgstr ""

#: ../../ref/windows-package-manager.rst:248
msgid "Git Hosted Repo"
msgstr ""

#: ../../ref/windows-package-manager.rst:250
msgid ""
"Windows software package definitions can also be hosted in one or more git "
"repositories. The default repo is one hosted on Github.com by "
"SaltStack,Inc., which includes package definitions for open source software."
" This repo points to the HTTP or ftp locations of the installer files. "
"Anyone is welcome to send a pull request to this repo to add new package "
"definitions. Browse the repo here: `https://github.com/saltstack/salt-"
"winrepo <https://github.com/saltstack/salt-winrepo>`_ ."
msgstr ""

#: ../../ref/windows-package-manager.rst:258
msgid ""
"Configure which git repos the master can search for package definitions by "
"modifying or extending the ``win_gitrepos`` configuration option list in the"
" master config."
msgstr ""

#: ../../ref/windows-package-manager.rst:262
msgid ""
"Checkout each git repo in ``win_gitrepos``, compile your package repository "
"cache and then refresh each minion's package cache:"
msgstr ""

#: ../../ref/windows-package-manager.rst:276
msgid "Troubleshooting"
msgstr ""

#: ../../ref/windows-package-manager.rst:280
msgid "Incorrect name/version"
msgstr ""

#: ../../ref/windows-package-manager.rst:282
msgid ""
"If the package seems to install properly, but salt reports a failure then it"
" is likely you have a version or ``full_name`` mismatch."
msgstr ""

#: ../../ref/windows-package-manager.rst:285
msgid ""
"Check the exact ``full_name`` and version used by the package. Use "
"``pkg.list_pkgs`` to check that the names and version exactly match what is "
"installed."
msgstr ""

#: ../../ref/windows-package-manager.rst:290
msgid "Changes to sls files not being picked up"
msgstr ""

#: ../../ref/windows-package-manager.rst:292
msgid ""
"Ensure you have (re)generated the repository cache file and then updated the"
" repository cache on the relevant minions:"
msgstr ""

#: ../../ref/windows-package-manager.rst:302
msgid "Packages management under Windows 2003"
msgstr ""

#: ../../ref/windows-package-manager.rst:304
msgid ""
"On windows server 2003, you need to install optional windows component \"wmi"
" windows installer provider\" to have full list of installed packages. If "
"you don't have this, salt-minion can't report some installed software."
msgstr ""
