# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../topics/tutorials/multimaster.rst:6
msgid "Multi Master Tutorial"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:8
msgid ""
"As of Salt 0.16.0, the ability to connect minions to multiple masters has "
"been made available. The multi-master system allows for redundancy of Salt "
"masters and facilitates multiple points of communication out to minions. "
"When using a multi-master setup, all masters are running hot, and any active"
" master can be used to send commands out to the minions."
msgstr ""

#: ../../topics/tutorials/multimaster.rst:14
msgid ""
"In 0.16.0, the masters do not share any information, keys need to be "
"accepted on both masters, and shared files need to be shared manually or use"
" tools like the git fileserver backend to ensure that the "
":conf_master:`file_roots` are kept consistent."
msgstr ""

#: ../../topics/tutorials/multimaster.rst:20
msgid "Summary of Steps"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:22
msgid "Create a redundant master server"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:23
msgid "Copy primary master key to redundant master"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:24
msgid "Start redundant master"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:25
msgid "Configure minions to connect to redundant master"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:26
msgid "Restart minions"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:27
msgid "Accept keys on redundant master"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:30
msgid "Prepping a Redundant Master"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:32
msgid ""
"The first task is to prepare the redundant master. There is only one "
"requirement when preparing a redundant master, which is that masters share "
"the same private key. When the first master was created, the master's "
"identifying key was generated and placed in the master's ``pki_dir``. The "
"default location of the key is ``/etc/salt/pki/master/master.pem``. Take "
"this key and copy it to the same location on the redundant master. Assuming "
"that no minions have yet been connected to the new redundant master, it is "
"safe to delete any existing key in this location and replace it."
msgstr ""

#: ../../topics/tutorials/multimaster.rst:42
msgid ""
"There is no logical limit to the number of redundant masters that can be "
"used."
msgstr ""

#: ../../topics/tutorials/multimaster.rst:45
msgid ""
"Once the new key is in place, the redundant master can be safely started."
msgstr ""

#: ../../topics/tutorials/multimaster.rst:48
msgid "Configure Minions"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:50
msgid ""
"Since minions need to be master-aware, the new master needs to be added to "
"the minion configurations. Simply update the minion configurations to list "
"all connected masters:"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:60
msgid "Now the minion can be safely restarted."
msgstr ""

#: ../../topics/tutorials/multimaster.rst:62
msgid ""
"Now the minions will check into the original master and also check into the "
"new redundant master. Both masters are first-class and have rights to the "
"minions."
msgstr ""

#: ../../topics/tutorials/multimaster.rst:66
msgid "Sharing Files Between Masters"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:68
msgid ""
"Salt does not automatically share files between multiple masters. A number "
"of files should be shared or sharing of these files should be strongly "
"considered."
msgstr ""

#: ../../topics/tutorials/multimaster.rst:72
msgid "Minion Keys"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:74
msgid ""
"Minion keys can be accepted the normal way using :strong:`salt-key` on both "
"masters.  Keys accepted, deleted, or rejected on one master will NOT be "
"automatically managed on redundant masters; this needs to be taken care of "
"by running salt-key on both masters or sharing the "
"``/etc/salt/pki/master/{minions,minions_pre,minions_rejected}`` directories "
"between masters."
msgstr ""

#: ../../topics/tutorials/multimaster.rst:83
msgid ""
"While sharing the :strong:`/etc/salt/pki/master` directory will work, it is "
"strongly discouraged, since allowing access to the :strong:`master.pem` key "
"outside of Salt creates a *SERIOUS* security risk."
msgstr ""

#: ../../topics/tutorials/multimaster.rst:88
msgid "File_Roots"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:90
msgid ""
"The :conf_master:`file_roots` contents should be kept consistent between "
"masters. Otherwise state runs will not always be consistent on minions since"
" instructions managed by one master will not agree with other masters."
msgstr ""

#: ../../topics/tutorials/multimaster.rst:94
msgid ""
"The recommended way to sync these is to use a fileserver backend like gitfs "
"or to keep these files on shared storage."
msgstr ""

#: ../../topics/tutorials/multimaster.rst:98
msgid "Pillar_Roots"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:100
msgid ""
"Pillar roots should be given the same considerations as "
":conf_master:`file_roots`."
msgstr ""

#: ../../topics/tutorials/multimaster.rst:104
msgid "Master Configurations"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:106
msgid ""
"While reasons may exist to maintain separate master configurations, it is "
"wise to remember that each master maintains independent control over "
"minions. Therefore, access controls should be in sync between masters unless"
" a valid reason otherwise exists to keep them inconsistent."
msgstr ""

#: ../../topics/tutorials/multimaster.rst:111
msgid "These access control options include but are not limited to:"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:113
msgid "external_auth"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:114
msgid "client_acl"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:115
msgid "peer"
msgstr ""

#: ../../topics/tutorials/multimaster.rst:116
msgid "peer_run"
msgstr ""
