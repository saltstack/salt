# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../topics/tutorials/states_pt2.rst:6
msgid "States tutorial, part 2"
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:10
msgid ""
"This tutorial builds on topics covered in :doc:`part 1 <states_pt1>`. It is "
"recommended that you begin there."
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:13
msgid ""
"In the :doc:`last part <states_pt1>` of the Salt States tutorial we covered "
"the basics of installing a package. We will now modify our ``webserver.sls``"
" file to have requirements, and use even more Salt States."
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:18
msgid "Call multiple States"
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:20
msgid ""
"You can specify multiple :term:`state declarations <state declaration>` "
"under an :term:`ID declaration`. For example, a quick modification to our "
"``webserver.sls`` to also start Apache if it is not running:"
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:36
msgid ""
"Try stopping Apache before running ``state.highstate`` once again and "
"observe the output."
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:40
msgid "Expand the SLS module"
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:42
msgid ""
"As you have seen, SLS modules are appended with the file extension ``.sls`` "
"and are referenced by name starting at the root of the state tree. An SLS "
"module can be also defined as a directory. Demonstrate that now by creating "
"a directory named ``webserver`` and moving and renaming ``webserver.sls`` to"
" ``webserver/init.sls``. Your state directory should now look like this::"
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:52
msgid "Organizing SLS modules"
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:54
msgid ""
"You can place additional ``.sls`` files in a state file directory. This "
"affords much cleaner organization of your state tree on the filesystem. For "
"example, if we created a ``webserver/django.sls`` file that module would be "
"referenced as ``webserver.django``."
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:59
msgid ""
"In addition, States provide powerful includes and extending functionality "
"which we will cover in :doc:`Part 3 <states_pt3>`."
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:63
msgid "Require other states"
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:65
msgid ""
"We now have a working installation of Apache so let's add an HTML file to "
"customize our website. It isn't exactly useful to have a website without a "
"webserver so we don't want Salt to install our HTML file until Apache is "
"installed and running. Include the following at the bottom of your "
"``webserver/init.sls`` file:"
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:90
msgid ""
"**line 9** is the :term:`ID declaration`. In this example it is the location"
" we want to install our custom HTML file. (**Note:** the default location "
"that Apache serves may differ from the above on your OS or distro. "
"``/srv/www`` could also be a likely place to look.)"
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:95
msgid ""
"**Line 10** the :term:`state declaration`. This example uses the Salt "
":mod:`file state <salt.states.file>`."
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:98
msgid ""
"**Line 11** is the :term:`function declaration`. The :func:`managed function"
" <salt.states.file.managed>` will download a file from the master and "
"install it in the location specified."
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:102
msgid ""
"**Line 12** is a :term:`function arg declaration` which, in this example, "
"passes the ``source`` argument to the :func:`managed function "
"<salt.states.file.managed>`."
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:106
msgid "**Line 13** is a :term:`requisite declaration`."
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:108
msgid ""
"**Line 14** is a :term:`requisite reference` which refers to a state and an "
"ID. In this example, it is referring to the ``ID declaration`` from our "
"example in :doc:`part 1 <states_pt1>`. This declaration tells Salt not to "
"install the HTML file until Apache is installed."
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:113
msgid ""
"Next, create the ``index.html`` file and save it in the ``webserver`` "
"directory:"
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:125
msgid ""
"Last, call :func:`state.highstate <salt.modules.state.highstate>` again and "
"the minion will fetch and execute the highstate as well as our HTML file "
"from the master using Salt's File Server:"
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:133
msgid "Verify that Apache is now serving your custom HTML."
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:135
msgid "``require`` vs. ``watch``"
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:137
msgid ""
"There are two :term:`requisite declarations <requisite declaration>`, "
"“require” and “watch”. Not every state supports “watch”. The :mod:`service "
"state <salt.states.service>` does support “watch” and will restart a service"
" based on the watch condition."
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:142
msgid ""
"For example, if you use Salt to install an Apache virtual host configuration"
" file and want to restart Apache whenever that file is changed you could "
"modify our Apache example from earlier as follows:"
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:164
msgid ""
"If the pkg and service names differ on your OS or distro of choice you can "
"specify each one separately using a :term:`name declaration` which explained"
" in :doc:`Part 3 <states_pt3>`."
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:169
msgid "Next steps"
msgstr ""

#: ../../topics/tutorials/states_pt2.rst:171
msgid ""
"In :doc:`part 3 <states_pt3>` we will discuss how to use includes, extends "
"and templating to make a more complete State Tree configuration."
msgstr ""
