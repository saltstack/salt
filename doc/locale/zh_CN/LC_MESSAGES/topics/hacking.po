# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../topics/hacking.rst:5
msgid "Developing Salt"
msgstr ""

#: ../../topics/hacking.rst:7
msgid ""
"There is a great need for contributions to salt and patches are welcome! The"
" goal here is to make contributions clear, make sure there is a trail for "
"where the code has come from, and most importantly, to give credit where "
"credit is due!"
msgstr ""

#: ../../topics/hacking.rst:11
msgid "There are a number of ways to contribute to salt development."
msgstr ""

#: ../../topics/hacking.rst:15
msgid "Sending a GitHub pull request"
msgstr ""

#: ../../topics/hacking.rst:17
msgid ""
"This is the preferred method for contributions. Simply create a GitHub fork,"
" commit changes to the fork, and then open up a pull request."
msgstr ""

#: ../../topics/hacking.rst:20
msgid ""
"The following is an example (from `Open Comparison Contributing Docs`_ ) of "
"an efficient workflow for forking, cloning, branching, committing, and "
"sending a pull request for a GitHub repository."
msgstr ""

#: ../../topics/hacking.rst:24
msgid ""
"First, make a local clone of your GitHub fork of the salt GitHub repo and "
"make edits and changes locally."
msgstr ""

#: ../../topics/hacking.rst:27
msgid ""
"Then, create a new branch on your clone by entering the following commands:"
msgstr ""

#: ../../topics/hacking.rst:35
msgid "Choose a name for your branch that describes its purpose."
msgstr ""

#: ../../topics/hacking.rst:37
msgid "Now commit your changes to this new branch with the following command:"
msgstr ""

#: ../../topics/hacking.rst:45
msgid ""
"Using ``git commit -am``, followed by a quoted string, both stages and "
"commits all modified files in a single command. Depending on the nature of "
"your changes, you may wish to stage and commit them separately. Also, note "
"that if you wish to add newly-tracked files as part of your commit, they "
"will not be caught using ``git commit -am`` and will need to be added using "
"``git add`` before committing."
msgstr ""

#: ../../topics/hacking.rst:52
msgid "Push your locally-committed changes back up to GitHub:"
msgstr ""

#: ../../topics/hacking.rst:58
msgid ""
"Now go look at your fork of the salt repo on the GitHub website. The new "
"branch will now be listed under the \"Source\" tab where it says \"Switch "
"Branches\". Select the new branch from this list, and then click the \"Pull "
"request\" button."
msgstr ""

#: ../../topics/hacking.rst:62
msgid ""
"Put in a descriptive comment, and include links to any project issues "
"related to the pull request."
msgstr ""

#: ../../topics/hacking.rst:65
msgid ""
"The repo managers will be notified of your pull request and it will be "
"reviewed. If a reviewer asks for changes, just make the changes locally in "
"the same local feature branch, push them to GitHub, then add a comment to "
"the discussion section of the pull request."
msgstr ""

#: ../../topics/hacking.rst:73
msgid "Travis-CI"
msgstr ""

#: ../../topics/hacking.rst:75
msgid ""
"To make reviewing pull requests easier for the maintainers, please enable "
"Travis-CI on your fork. Salt is already configured, so simply follow the "
"first 2 steps on the Travis-CI `Getting Started Doc`_."
msgstr ""

#: ../../topics/hacking.rst:82
msgid "Keeping Salt Forks in Sync"
msgstr ""

#: ../../topics/hacking.rst:84
msgid ""
"Salt is advancing quickly. It is therefore critical to pull upstream changes"
" from master into forks on a regular basis. Nothing is worse than putting in"
" a days of hard work into a pull request only to have it rejected because it"
" has diverged too far from master."
msgstr ""

#: ../../topics/hacking.rst:89
msgid "To pull in upstream changes:"
msgstr ""

#: ../../topics/hacking.rst:102
msgid ""
"To check the log to be sure that you actually want the changes, run the "
"following before merging:"
msgstr ""

#: ../../topics/hacking.rst:109
msgid "Then to accept the changes and merge into the current branch:"
msgstr ""

#: ../../topics/hacking.rst:115
msgid ""
"For more info, see `GitHub Fork a Repo Guide`_ or `Open Comparison "
"Contributing Docs`_"
msgstr ""

#: ../../topics/hacking.rst:122
msgid "Posting patches to the mailing list"
msgstr ""

#: ../../topics/hacking.rst:124
msgid ""
"Patches will also be accepted by email. Format patches using `git format-"
"patch`_ and send them to the Salt users mailing list. The contributor will "
"then get credit for the patch, and the Salt community will have an archive "
"of the patch and a place for discussion."
msgstr ""

#: ../../topics/hacking.rst:132
msgid "Installing Salt for development"
msgstr ""

#: ../../topics/hacking.rst:134
msgid "Clone the repository using:"
msgstr ""

#: ../../topics/hacking.rst:140
msgid "tags"
msgstr ""

#: ../../topics/hacking.rst:142
msgid ""
"Just cloning the repository is enough to work with Salt and make "
"contributions. However, fetching additional tags from git is required to "
"have Salt report the correct version for itself. To do this, first add the "
"git repository as an upstream source:"
msgstr ""

#: ../../topics/hacking.rst:151
msgid "Fetching tags is done with the git 'fetch' utility:"
msgstr ""

#: ../../topics/hacking.rst:157
msgid "Create a new `virtualenv`_:"
msgstr ""

#: ../../topics/hacking.rst:165
msgid ""
"On Arch Linux, where Python 3 is the default installation of Python, use the"
" ``virtualenv2`` command instead of ``virtualenv``."
msgstr ""

#: ../../topics/hacking.rst:168
msgid "Using system Python modules in the virtualenv"
msgstr ""

#: ../../topics/hacking.rst:170
msgid ""
"To use already-installed python modules in virtualenv (instead of having pip"
" download and compile new ones), run ``virtualenv --system-site-packages`` "
"Using this method eliminates the requirement to install the salt "
"dependencies again, although it does assume that the listed modules are all "
"installed in the system PYTHONPATH at the time of virtualenv creation."
msgstr ""

#: ../../topics/hacking.rst:176
msgid "Activate the virtualenv:"
msgstr ""

#: ../../topics/hacking.rst:182
msgid "Install Salt (and dependencies) into the virtualenv:"
msgstr ""

#: ../../topics/hacking.rst:190
msgid "Installing M2Crypto"
msgstr ""

#: ../../topics/hacking.rst:192
msgid ""
"``swig`` and ``libssl-dev`` are required to build M2Crypto. To fix the error"
" ``command 'swig' failed with exit status 1`` while installing M2Crypto, try"
" installing it with the following command:"
msgstr ""

#: ../../topics/hacking.rst:200
msgid ""
"Debian and Ubuntu systems have modified openssl libraries and mandate that a"
" patched version of M2Crypto be installed. This means that M2Crypto needs to"
" be installed via apt:"
msgstr ""

#: ../../topics/hacking.rst:208
msgid ""
"This also means that pulling in the M2Crypto installed using apt requires "
"using ``--system-site-packages`` when creating the virtualenv."
msgstr ""

#: ../../topics/hacking.rst:211
msgid "Installing psutil"
msgstr ""

#: ../../topics/hacking.rst:213
msgid ""
"Python header files are required to build this module, otherwise the pip "
"install will fail. If your distribution separates binaries and headers into "
"separate packages, make sure that you have the headers installed. In most "
"Linux distributions which split the headers into their own package, this can"
" be done by installing the ``python-dev`` or ``python-devel`` package. For "
"other platforms, the package will likely be similarly named."
msgstr ""

#: ../../topics/hacking.rst:220
msgid "Important note for those developing using RedHat variants"
msgstr ""

#: ../../topics/hacking.rst:222
msgid ""
"For developers using a RedHat variant, be advised that the package provider "
"for newer Redhat-based systems (:doc:`yumpkg.py "
"<../ref/modules/all/salt.modules.yumpkg>`) relies on RedHat's python "
"interface for yum. The variants that use this module to provide package "
"support include the following:"
msgstr ""

#: ../../topics/hacking.rst:228
msgid "`RHEL`_ and `CentOS`_ releases 6 and later"
msgstr ""

#: ../../topics/hacking.rst:229
msgid "`Fedora Linux`_ releases 11 and later"
msgstr ""

#: ../../topics/hacking.rst:230
msgid "`Amazon Linux`_"
msgstr ""

#: ../../topics/hacking.rst:232
msgid ""
"Developers using one of these systems should create the salt virtualenv "
"using the ``--system-site-packages`` option to ensure that the correct "
"modules are available."
msgstr ""

#: ../../topics/hacking.rst:240
msgid "Installing dependencies on OS X."
msgstr ""

#: ../../topics/hacking.rst:242
msgid ""
"You can install needed dependencies on OS X using homebrew or macports. See "
":doc:`OS X Installation </topics/installation/osx>`"
msgstr ""

#: ../../topics/hacking.rst:246
msgid "Running a self-contained development version"
msgstr ""

#: ../../topics/hacking.rst:248
msgid ""
"During development it is easiest to be able to run the Salt master and "
"minion that are installed in the virtualenv you created above, and also to "
"have all the configuration, log, and cache files contained in the virtualenv"
" as well."
msgstr ""

#: ../../topics/hacking.rst:252
msgid "Copy the master and minion config files into your virtualenv:"
msgstr ""

#: ../../topics/hacking.rst:260
msgid "Edit the master config file:"
msgstr ""

#: ../../topics/hacking.rst:262
msgid "Uncomment and change the ``user: root`` value to your own user."
msgstr ""

#: ../../topics/hacking.rst:263
msgid ""
"Uncomment and change the ``root_dir: /`` value to point to "
"``/path/to/your/virtualenv``."
msgstr ""

#: ../../topics/hacking.rst:265
msgid ""
"If you are running version 0.11.1 or older, uncomment and change the "
"``pidfile: /var/run/salt-master.pid`` value to point to "
"``/path/to/your/virtualenv/salt-master.pid``."
msgstr ""

#: ../../topics/hacking.rst:268
msgid ""
"If you are also running a non-development version of Salt you will have to "
"change the ``publish_port`` and ``ret_port`` values as well."
msgstr ""

#: ../../topics/hacking.rst:271
msgid "Edit the minion config file:"
msgstr ""

#: ../../topics/hacking.rst:273
msgid ""
"Repeat the edits you made in the master config for the ``user`` and "
"``root_dir`` values as well as any port changes."
msgstr ""

#: ../../topics/hacking.rst:275
msgid ""
"If you are running version 0.11.1 or older, uncomment and change the "
"``pidfile: /var/run/salt-minion.pid`` value to point to "
"``/path/to/your/virtualenv/salt-minion.pid``."
msgstr ""

#: ../../topics/hacking.rst:278
msgid ""
"Uncomment and change the ``master: salt`` value to point at ``localhost``."
msgstr ""

#: ../../topics/hacking.rst:279
msgid ""
"Uncomment and change the ``id:`` value to something descriptive like "
"\"saltdev\". This isn't strictly necessary but it will serve as a reminder "
"of which Salt installation you are working with."
msgstr ""

#: ../../topics/hacking.rst:283
msgid ""
"Using `salt-call` with a :doc:`Standalone Minion "
"</topics/tutorials/standalone_minion>`"
msgstr ""

#: ../../topics/hacking.rst:285
msgid ""
"If you plan to run `salt-call` with this self-contained development "
"environment in a masterless setup, you should invoke `salt-call` with ``-c "
"/path/to/your/virtualenv/etc/salt`` so that salt can find the minion config "
"file. Without the ``-c`` option, Salt finds its config files in `/etc/salt`."
msgstr ""

#: ../../topics/hacking.rst:291
msgid ""
"Start the master and minion, accept the minion's key, and verify your local "
"Salt installation is working:"
msgstr ""

#: ../../topics/hacking.rst:303
msgid ""
"Running the master and minion in debug mode can be helpful when developing. "
"To do this, add ``-l debug`` to the calls to ``salt-master`` and ``salt-"
"minion``. If you would like to log to the console instead of to the log "
"file, remove the ``-d``."
msgstr ""

#: ../../topics/hacking.rst:308
msgid "Once the minion starts, you may see an error like the following::"
msgstr ""

#: ../../topics/hacking.rst:312
msgid ""
"This means the the path to the socket the minion is using is too long. This "
"is a system limitation, so the only workaround is to reduce the length of "
"this path. This can be done in a couple different ways:"
msgstr ""

#: ../../topics/hacking.rst:316
msgid "Create your virtualenv in a path that is short enough."
msgstr ""

#: ../../topics/hacking.rst:317
msgid ""
"Edit the :conf_minion:`sock_dir` minion config variable and reduce its "
"length. Remember that this path is relative to the value you set in "
":conf_minion:`root_dir`."
msgstr ""

#: ../../topics/hacking.rst:321
msgid ""
"``NOTE:`` The socket path is limited to 107 characters on Solaris and Linux,"
" and 103 characters on BSD-based systems."
msgstr ""

#: ../../topics/hacking.rst:324
msgid "File descriptor limits"
msgstr ""

#: ../../topics/hacking.rst:326
msgid "Ensure that the system open file limit is raised to at least 2047:"
msgstr ""

#: ../../topics/hacking.rst:337
msgid ""
"To set file descriptors on OSX, refer to the :doc:`OS X Installation "
"</topics/installation/osx>` instructions."
msgstr ""

#: ../../topics/hacking.rst:342
msgid "Using easy_install to Install Salt"
msgstr ""

#: ../../topics/hacking.rst:344
msgid ""
"If you are installing using ``easy_install``, you will need to define a "
":strong:`USE_SETUPTOOLS` environment variable, otherwise dependencies will "
"not be installed:"
msgstr ""

#: ../../topics/hacking.rst:353
msgid "Running the tests"
msgstr ""

#: ../../topics/hacking.rst:355
msgid "You will need ``mock`` to run the tests:"
msgstr ""

#: ../../topics/hacking.rst:361
msgid "If you are on Python < 2.7 then you will also need unittest2:"
msgstr ""

#: ../../topics/hacking.rst:370
msgid ""
"In Salt 0.17, testing libraries were migrated into their own repo. To "
"install them:"
msgstr ""

#: ../../topics/hacking.rst:377
msgid ""
"Failure to install SaltTesting will result in import errors similar to the "
"following:"
msgstr ""

#: ../../topics/hacking.rst:383
msgid "Finally you use setup.py to run the tests with the following command:"
msgstr ""

#: ../../topics/hacking.rst:389
msgid "For greater control while running the tests, please try:"
msgstr ""

#: ../../topics/hacking.rst:397
msgid "Editing and previewing the documentation"
msgstr ""

#: ../../topics/hacking.rst:399
msgid ""
"You need ``sphinx-build`` command to build the docs. In Debian/Ubuntu this "
"is provided in the ``python-sphinx`` package. Sphinx can also be installed "
"to a virtualenv using pip:"
msgstr ""

#: ../../topics/hacking.rst:407
msgid "Change to salt documentation directory, then:"
msgstr ""

#: ../../topics/hacking.rst:413
msgid ""
"This will build the HTML docs. Run ``make`` without any arguments to see the"
" available make targets, which include :strong:`html`, :strong:`man`, and "
":strong:`text`."
msgstr ""

#: ../../topics/hacking.rst:416
msgid ""
"The docs then are built within the :strong:`docs/_build/` folder. To update "
"the docs after making changes, run ``make`` again."
msgstr ""

#: ../../topics/hacking.rst:418
msgid ""
"The docs use `reStructuredText <http://sphinx-doc.org/rest.html>`_ for "
"markup. See a live demo at http://rst.ninjs.org/."
msgstr ""

#: ../../topics/hacking.rst:420
msgid ""
"The help information on each module or state is culled from the python code "
"that runs for that piece. Find them in ``salt/modules/`` or "
"``salt/states/``."
msgstr ""

#: ../../topics/hacking.rst:423
msgid ""
"To build the docs on Arch Linux, the :strong:`python2-sphinx` package is "
"required. Additionally, it is necessary to tell :strong:`make` where to find"
" the proper :strong:`sphinx-build` binary, like so:"
msgstr ""

#: ../../topics/hacking.rst:431
msgid ""
"To build the docs on RHEL/CentOS 6, the :strong:`python-sphinx10` package "
"must be installed from EPEL, and the following make command must be used:"
msgstr ""
