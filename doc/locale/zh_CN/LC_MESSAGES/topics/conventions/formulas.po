# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../topics/conventions/formulas.rst:8
msgid "Salt Formulas"
msgstr ""

#: ../../topics/conventions/formulas.rst:10
msgid ""
"Formulas are pre-written Salt States. They are as open-ended as Salt States "
"themselves and can be used for tasks such as installing a package, "
"configuring and starting a service, setting up users or permissions, and "
"many other common tasks."
msgstr ""

#: ../../topics/conventions/formulas.rst:15
msgid "Formulas require Salt 0.17 or later."
msgstr ""

#: ../../topics/conventions/formulas.rst:17
msgid ""
"More accurately, Formulas are not tested on earlier versions of Salt so your"
" mileage may vary."
msgstr ""

#: ../../topics/conventions/formulas.rst:20
msgid ""
"All Formulas require the grains execution module that shipped with Salt "
"0.16.4. Earlier Salt versions may copy :blob:`salt/modules/grains.py` into "
"the :file:`/srv/salt/_modules` directory and it will be automatically "
"distributed to all minions."
msgstr ""

#: ../../topics/conventions/formulas.rst:25
msgid ""
"Some Formula utilize features added in Salt 0.17 and will not work on "
"earlier Salt versions."
msgstr ""

#: ../../topics/conventions/formulas.rst:28
msgid ""
"All official Salt Formulas are found as separate Git repositories in the "
"\"saltstack-formulas\" organization on GitHub:"
msgstr ""

#: ../../topics/conventions/formulas.rst:31
msgid "https://github.com/saltstack-formulas"
msgstr ""

#: ../../topics/conventions/formulas.rst:33
msgid ""
"As an example, quickly install and configure the popular memcached server "
"using sane defaults simply by including the :formula:`memcached-formula` "
"repository into an existing Salt States tree."
msgstr ""

#: ../../topics/conventions/formulas.rst:38
msgid "Installation"
msgstr ""

#: ../../topics/conventions/formulas.rst:40
msgid ""
"Each Salt Formula is an individual Git repository designed as a drop-in "
"addition to an existing Salt State tree. Formulas can be installed in the "
"following ways."
msgstr ""

#: ../../topics/conventions/formulas.rst:45
msgid "Adding a Formula as a GitFS remote"
msgstr ""

#: ../../topics/conventions/formulas.rst:47
msgid ""
"One design goal of Salt's GitFS fileserver backend was to facilitate "
"reusable States so this is a quick and natural way to use Formulas."
msgstr ""

#: ../../topics/conventions/formulas.rst:50
msgid ":ref:`Setting up GitFS <tutorial-gitfs>`"
msgstr ""

#: ../../topics/conventions/formulas.rst:52
msgid ""
"Add one or more Formula repository URLs as remotes in the "
":conf_master:`gitfs_remotes` list in the Salt Master configuration file."
msgstr ""

#: ../../topics/conventions/formulas.rst:54
msgid "Restart the Salt master."
msgstr ""

#: ../../topics/conventions/formulas.rst:57
msgid "Adding a Formula directory manually"
msgstr ""

#: ../../topics/conventions/formulas.rst:59
msgid ""
"Since Formulas are simply directories they can be copied onto the local file"
" system by using Git to clone the repository or by downloading and expanding"
" a tarball or zip file of the directory."
msgstr ""

#: ../../topics/conventions/formulas.rst:63
msgid ""
"Clone the repository manually and add a new entry to "
":conf_master:`file_roots` pointing to the clone's directory."
msgstr ""

#: ../../topics/conventions/formulas.rst:66
msgid ""
"Clone the repository manually and then copy or link the Formula directory "
"into ``file_roots``."
msgstr ""

#: ../../topics/conventions/formulas.rst:70
msgid "Usage"
msgstr ""

#: ../../topics/conventions/formulas.rst:72
msgid ""
"Each Formula is intended to be immediately usable with sane defaults without"
" any additional configuration. Many formulas are also configurable by "
"including data in Pillar; see the :file:`pillar.example` file in each "
"Formula repository for available options."
msgstr ""

#: ../../topics/conventions/formulas.rst:78
msgid "Including a Formula in an existing State tree"
msgstr ""

#: ../../topics/conventions/formulas.rst:80
msgid ""
"Formula may be included in an existing ``sls`` file. This is often useful "
"when a state you are writing needs to ``require`` or ``extend`` a state "
"defined in the formula."
msgstr ""

#: ../../topics/conventions/formulas.rst:84
msgid ""
"Here is an example of a state that uses the :formula:`epel-formula` in a "
"``require`` declaration which directs Salt to not install the ``python26`` "
"package until after the EPEL repository has also been installed:"
msgstr ""

#: ../../topics/conventions/formulas.rst:100
msgid "Including a Formula from a Top File"
msgstr ""

#: ../../topics/conventions/formulas.rst:102
msgid ""
"Some Formula perform completely standalone installations that are not "
"referenced from other state files. It is usually cleanest to include these "
"Formula directly from a Top File."
msgstr ""

#: ../../topics/conventions/formulas.rst:106
msgid ""
"For example the easiest way to set up an OpenStack deployment on a single "
"machine is to include the :formula:`openstack-standalone-formula` directly "
"from a :file:`top.sls` file:"
msgstr ""

#: ../../topics/conventions/formulas.rst:116
msgid ""
"Quickly deploying OpenStack across several dedicated machines could also be "
"done directly from a Top File and may look something like this:"
msgstr ""

#: ../../topics/conventions/formulas.rst:132
msgid "Configuring Formula using Pillar"
msgstr ""

#: ../../topics/conventions/formulas.rst:134
msgid ""
"Salt Formulas are designed to work out of the box with no additional "
"configuration. However, many Formula support additional configuration and "
"customization through :ref:`Pillar <pillar>`. Examples of available options "
"can be found in a file named :file:`pillar.example` in the root directory of"
" each Formula repository."
msgstr ""

#: ../../topics/conventions/formulas.rst:141
msgid "Modifying default Formula behavior"
msgstr ""

#: ../../topics/conventions/formulas.rst:143
msgid ""
"Remember that Formula are regular Salt States and can be used with all "
"Salt's normal mechanisms for determining execution order. Formula can be "
"required from other States with ``require`` declarations, they can be "
"modified using ``extend``, they can made to watch other states with "
"``watch_in``, they can be used as templates for other States with ``use``. "
"Don't be shy to read through the source for each Formula!"
msgstr ""

#: ../../topics/conventions/formulas.rst:151
msgid "Reporting problems & making additions"
msgstr ""

#: ../../topics/conventions/formulas.rst:153
msgid ""
"Each Formula is a separate repository on GitHub. If you encounter a bug with"
" a Formula please file an issue in the respective repository! Send fixes and"
" additions as a pull request. Add tips and tricks to the repository wiki."
msgstr ""

#: ../../topics/conventions/formulas.rst:158
msgid "Writing Formulas"
msgstr ""

#: ../../topics/conventions/formulas.rst:160
msgid ""
"Each Formula is a separate repository in the `saltstack-formulas`_ "
"organization on GitHub."
msgstr ""

#: ../../topics/conventions/formulas.rst:163
msgid "Get involved creating new Formulas"
msgstr ""

#: ../../topics/conventions/formulas.rst:165
msgid ""
"The best way to create new Formula repositories for now is to create a "
"repository in your own account on GitHub and notify a SaltStack employee "
"when it is ready. We will add you as a collaborator on the `saltstack-"
"formulas`_ organization and help you transfer the repository over. Ping a "
"SaltStack employee on IRC (``#salt`` on Freenode) or send an email to the "
"Salt mailing list."
msgstr ""

#: ../../topics/conventions/formulas.rst:173
msgid "Repository structure"
msgstr ""

#: ../../topics/conventions/formulas.rst:175
msgid "A basic Formula repository should have the following layout::"
msgstr ""

#: ../../topics/conventions/formulas.rst:189
msgid "``README.rst``"
msgstr ""

#: ../../topics/conventions/formulas.rst:191
msgid ""
"The README should detail each available ``.sls`` file by explaining what it "
"does, whether it has any dependencies on other formulas, whether it has a "
"target platform, and any other installation or usage instructions or tips."
msgstr ""

#: ../../topics/conventions/formulas.rst:195
msgid "A sample skeleton for the ``README.rst`` file:"
msgstr ""

#: ../../topics/conventions/formulas.rst:218
msgid "``CHANGELOG.rst``"
msgstr ""

#: ../../topics/conventions/formulas.rst:220
msgid ""
"The ``CHANGELOG.rst`` file should detail the individual versions, their "
"release date and a set of bullet points for each version highlighting the "
"overall changes in a given version of the formula."
msgstr ""

#: ../../topics/conventions/formulas.rst:224
msgid "A sample skeleton for the `CHANGELOG.rst` file:"
msgstr ""

#: ../../topics/conventions/formulas.rst:226
msgid ":file:`CHANGELOG.rst`:"
msgstr ""

#: ../../topics/conventions/formulas.rst:240
msgid "``map.jinja``"
msgstr ""

#: ../../topics/conventions/formulas.rst:242
msgid ""
"It is useful to have a single source for platform-specific or other "
"parameterized information that can be reused throughout a Formula. See "
"\":ref:`conventions-formula-parameterization`\" below for more information. "
"Such a file should be named :file:`map.jinja` and live alongside the state "
"files."
msgstr ""

#: ../../topics/conventions/formulas.rst:248
msgid "The following is an example from the MySQL Formula."
msgstr ""

#: ../../topics/conventions/formulas.rst:250
msgid ":file:`map.jinja`:"
msgstr ""

#: ../../topics/conventions/formulas.rst:275
msgid ""
"Any of the values defined above can be fetched for the current platform in "
"any state file using the following syntax:"
msgstr ""

#: ../../topics/conventions/formulas.rst:301
msgid "SLS files"
msgstr ""

#: ../../topics/conventions/formulas.rst:303
msgid ""
"Each state in a Formula should use sane defaults (as much as is possible) "
"and use Pillar to allow for customization."
msgstr ""

#: ../../topics/conventions/formulas.rst:306
msgid ""
"The root state, in particular, and most states in general, should strive to "
"do no more than the basic expected thing and advanced configuration should "
"be put in child states build on top of the basic states."
msgstr ""

#: ../../topics/conventions/formulas.rst:310
msgid ""
"For example, the root Apache should only install the Apache httpd server and"
" make sure the httpd service is running. It can then be used by more "
"advanced states::"
msgstr ""

#: ../../topics/conventions/formulas.rst:341
msgid "Platform agnostic"
msgstr ""

#: ../../topics/conventions/formulas.rst:343
msgid ""
"Each Salt Formula must be able to be run without error on any platform. If "
"the formula is not applicable to a platform it should do nothing. See the "
":formula:`epel-formula` for an example."
msgstr ""

#: ../../topics/conventions/formulas.rst:347
msgid ""
"Any platform-specific states must be wrapped in conditional statements:"
msgstr ""

#: ../../topics/conventions/formulas.rst:355
msgid ""
"A handy method for using platform-specific values is to create a lookup "
"table using the :py:func:`~salt.modules.grains.filter_by` function:"
msgstr ""

#: ../../topics/conventions/formulas.rst:373
msgid "Configuration and parameterization"
msgstr ""

#: ../../topics/conventions/formulas.rst:375
msgid ""
"Each Formula should strive for sane defaults that can then be customized "
"using Pillar. Pillar lookups must use the safe "
":py:func:`~salt.modules.pillar.get` and must provide a default value:"
msgstr ""

#: ../../topics/conventions/formulas.rst:386
msgid ""
"Any default values used in the Formula must also be documented in the "
":file:`pillar.example` file in the root of the repository. Comments should "
"be used liberally to explain the intent of each configuration value. In "
"addition, users should be able copy-and-paste the contents of this file into"
" their own Pillar to make any desired changes."
msgstr ""

#: ../../topics/conventions/formulas.rst:393
msgid "Scripting"
msgstr ""

#: ../../topics/conventions/formulas.rst:395
msgid ""
"Remember that both State files and Pillar files can easily call out to Salt "
":ref:`execution modules <all-salt.modules>` and have access to all the "
"system grains as well."
msgstr ""

#: ../../topics/conventions/formulas.rst:408
msgid ""
"Jinja macros are generally discouraged in favor of adding functions to "
"existing Salt modules or adding new modules. An example of this is the "
":py:func:`~salt.modules.grains.filter_by` function."
msgstr ""

#: ../../topics/conventions/formulas.rst:413
msgid "Versioning"
msgstr ""

#: ../../topics/conventions/formulas.rst:415
msgid ""
"Formula are versioned according to Semantic Versioning, http://semver.org/."
msgstr ""

#: ../../topics/conventions/formulas.rst:417
msgid "Given a version number MAJOR.MINOR.PATCH, increment the:"
msgstr ""

#: ../../topics/conventions/formulas.rst:419
msgid "MAJOR version when you make incompatible API changes,"
msgstr ""

#: ../../topics/conventions/formulas.rst:420
msgid ""
"MINOR version when you add functionality in a backwards-compatible manner, "
"and"
msgstr ""

#: ../../topics/conventions/formulas.rst:421
msgid "PATCH version when you make backwards-compatible bug fixes."
msgstr ""

#: ../../topics/conventions/formulas.rst:423
msgid ""
"Additional labels for pre-release and build metadata are available as "
"extensions to the MAJOR.MINOR.PATCH format."
msgstr ""

#: ../../topics/conventions/formulas.rst:426
msgid ""
"Formula versions are tracked using Git tags as well as the ``VERSION`` file "
"in the formula repository. The ``VERSION`` file should contain the currently"
" released version of the particular formula."
msgstr ""

#: ../../topics/conventions/formulas.rst:431
msgid "Testing Formulas"
msgstr ""

#: ../../topics/conventions/formulas.rst:433
msgid ""
"Salt Formulas are tested by running each ``.sls`` file via "
":py:func:`state.sls <salt.modules.state.sls>` and checking the output for "
"success or failure. This is done for each supported platform."
msgstr ""
