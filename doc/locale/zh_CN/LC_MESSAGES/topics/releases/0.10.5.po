# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../topics/releases/0.10.5.rst:6
msgid "Salt 0.10.5 Release Notes"
msgstr ""

#: ../../topics/releases/0.10.5.rst:8
msgid ""
"Salt 0.10.5 is ready, and comes with some great new features. A few more "
"interfaces have been modularized, like the outputter system. The job cache "
"system has been made more powerful and can now store and retrieve jobs "
"archived in external databases. The returner system has been extended to "
"allow minions to easily retrieve data from a returner interface."
msgstr ""

#: ../../topics/releases/0.10.5.rst:14
msgid "As usual, this is an exciting release, with many noteworthy additions!"
msgstr ""

#: ../../topics/releases/0.10.5.rst:17
msgid "Major Features"
msgstr ""

#: ../../topics/releases/0.10.5.rst:20
msgid "External Job Cache"
msgstr ""

#: ../../topics/releases/0.10.5.rst:22
msgid ""
"The external job cache is a system which allows for a returner interface to "
"also act as a job cache. This system is intended to allow users to store job"
" information in a central location for longer periods of time and to make "
"the act of looking up information from jobs executed on other minions "
"easier."
msgstr ""

#: ../../topics/releases/0.10.5.rst:27
msgid ""
"Currently the external job cache is supported via the mongo and redis "
"returners:"
msgstr ""

#: ../../topics/releases/0.10.5.rst:35
msgid ""
"Once the external job cache is turned on the new `ret` module can be used on"
" the minions to retrieve return information from the job cache. This can be "
"a great way for minions to respond and react to other minions."
msgstr ""

#: ../../topics/releases/0.10.5.rst:40
msgid "OpenStack Additions"
msgstr ""

#: ../../topics/releases/0.10.5.rst:42
msgid ""
"OpenStack integration with Salt has been moving forward at a blistering "
"pace. The new `nova`, `glance` and `keystone` modules represent the "
"beginning of ongoing OpenStack integration."
msgstr ""

#: ../../topics/releases/0.10.5.rst:46
msgid ""
"The Salt team has had many conversations with core OpenStack developers and "
"is working on linking to OpenStack in powerful new ways."
msgstr ""

#: ../../topics/releases/0.10.5.rst:50
msgid "Wheel System"
msgstr ""

#: ../../topics/releases/0.10.5.rst:52
msgid ""
"A new API was added to the Salt Master which allows the master to be managed"
" via an external API. This new system allows Salt API to easily hook into "
"the Salt Master and manage configs, modify the state tree, manage the pillar"
" and more. The main motivation for the wheel system is to enable features "
"needed in the upcoming web UI so users can manage the master just as easily "
"as they manage minions."
msgstr ""

#: ../../topics/releases/0.10.5.rst:59
msgid ""
"The wheel system has also been hooked into the external auth system. This "
"allows specific users to have granular access to manage components of the "
"Salt Master."
msgstr ""

#: ../../topics/releases/0.10.5.rst:64
msgid "Render Pipes"
msgstr ""

#: ../../topics/releases/0.10.5.rst:66
msgid ""
"Jack Kuan has added a substantial new feature. The render pipes system "
"allows Salt to treat the render system like unix pipes. This new system "
"enables sls files to be passed through specific render engines. While the "
"default renderer is still recommended, different engines can now be more "
"easily merged. So to pipe the output of Mako used in YAML use this shebang "
"line:"
msgstr ""

#: ../../topics/releases/0.10.5.rst:72
msgid "#!mako|yaml"
msgstr ""

#: ../../topics/releases/0.10.5.rst:75
msgid "Salt Key Overhaul"
msgstr ""

#: ../../topics/releases/0.10.5.rst:77
msgid ""
"The Salt Key system was originally developed as only a CLI interface, but as"
" time went on it was pressed into becoming a clumsy API. This release marks "
"a complete overhaul of Salt Key. Salt Key has been rewritten to function "
"purely from an API and to use the outputter system. The benefit here is that"
" the outputter system works much more cleanly with Salt Key now, and the "
"internals of Salt Key can be used much more cleanly."
msgstr ""

#: ../../topics/releases/0.10.5.rst:85
msgid "Modular Outputters"
msgstr ""

#: ../../topics/releases/0.10.5.rst:87
msgid ""
"The outputter system is now loaded in a modular way. This means that output "
"systems can be more easily added by dropping a python file down on the "
"master that contains the function `output`."
msgstr ""

#: ../../topics/releases/0.10.5.rst:92
msgid "Gzip from Fileserver"
msgstr ""

#: ../../topics/releases/0.10.5.rst:94
msgid ""
"Gzip compression has been added as an option to the cp.get_file and "
"cp.get_dir commands. This will make file transfers more efficient and "
"faster, especially over slower network links."
msgstr ""

#: ../../topics/releases/0.10.5.rst:99
msgid "Unified Module Configuration"
msgstr ""

#: ../../topics/releases/0.10.5.rst:101
msgid ""
"In past releases of Salt, the minions needed to be configured for certain "
"modules to function. This was difficult because it required pre-configuring "
"the minions. 0.10.5 changes this by making all module configs on minions "
"search the master config file for values."
msgstr ""

#: ../../topics/releases/0.10.5.rst:106
msgid ""
"Now if a single database server is needed, then it can be defined in the "
"master config and all minions will become aware of the configuration value."
msgstr ""

#: ../../topics/releases/0.10.5.rst:110
msgid "Salt Call Enhancements"
msgstr ""

#: ../../topics/releases/0.10.5.rst:112
msgid ""
"The ``salt-call`` command has been updated in a few ways. Now, ``salt-call``"
" can take the --return option to send the data to a returner. Also, ``salt-"
"call`` now reports executions in the minion proc system, this allows the "
"master to be aware of the operation salt-call is running."
msgstr ""

#: ../../topics/releases/0.10.5.rst:118
msgid "Death to pub_refresh and sub_timeout"
msgstr ""

#: ../../topics/releases/0.10.5.rst:120
msgid ""
"The old configuration values `pub_refresh` and `sub_timeout` have been "
"removed. These options were in place to alleviate problems found in earlier "
"versions of ZeroMQ which have since been fixed. The continued use of these "
"options has proven to cause problems with message passing and have been "
"completely removed."
msgstr ""

#: ../../topics/releases/0.10.5.rst:126
msgid "Git Revision Versions"
msgstr ""

#: ../../topics/releases/0.10.5.rst:128
msgid ""
"When running Salt directly from git (for testing or development, of course) "
"it has been difficult to know exactly what code is being executed. The new "
"versioning system will detect the git revision when building and how many "
"commits have been made since the last release. A release from git will look "
"like this:"
msgstr ""

#: ../../topics/releases/0.10.5.rst:134
msgid "0.10.4-736-gec74d69"
msgstr ""

#: ../../topics/releases/0.10.5.rst:137
msgid "Svn Module Addition"
msgstr ""

#: ../../topics/releases/0.10.5.rst:139
msgid ""
"Anthony Cornehl (twinshadow) contributed a module that adds Subversion "
"support to Salt.  This great addition helps round out Salt's VCS support."
msgstr ""

#: ../../topics/releases/0.10.5.rst:143
msgid "Noteworthy Changes"
msgstr ""

#: ../../topics/releases/0.10.5.rst:146
msgid "Arch Linux Defaults to Systemd"
msgstr ""

#: ../../topics/releases/0.10.5.rst:148
msgid ""
"Arch Linux recently changed to use systemd by default and discontinued "
"support for init scripts. Salt has followed suit and defaults to systemd now"
" for managing services in Arch."
msgstr ""

#: ../../topics/releases/0.10.5.rst:153
msgid "Salt, Salt Cloud and Openstack"
msgstr ""

#: ../../topics/releases/0.10.5.rst:155
msgid ""
"With the releases of Salt 0.10.5 and Salt Cloud 0.8.2, OpenStack becomes the"
" first (non-OS) piece of software to include support both on the user level "
"(with Salt Cloud) and the admin level (with Salt). We are excited to "
"continue to extend support of other platforms at this level."
msgstr ""
