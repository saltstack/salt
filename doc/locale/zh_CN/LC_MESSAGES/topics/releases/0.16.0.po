# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../topics/releases/0.16.0.rst:6
msgid "Salt 0.16.0 Release Notes"
msgstr ""

#: ../../topics/releases/0.16.0.rst:8
msgid ""
"The 0.16.0 release is an exciting one, with new features in master "
"redundancy, and a new, powerful requisite."
msgstr ""

#: ../../topics/releases/0.16.0.rst:12
msgid "Major Features"
msgstr ""

#: ../../topics/releases/0.16.0.rst:15
msgid "Multi-Master"
msgstr ""

#: ../../topics/releases/0.16.0.rst:17
msgid ""
"This new capability allows for a minion to be actively connected to multiple"
" salt masters at the same time. This allows for multiple masters to send out"
" commands to minions and for minions to automatically reconnect to masters "
"that have gone down. A tutorial is available to help get started here:"
msgstr ""

#: ../../topics/releases/0.16.0.rst:22
msgid ":doc:`Multi Master Tutorial </topics/tutorials/multimaster>`"
msgstr ""

#: ../../topics/releases/0.16.0.rst:25
msgid "Prereq, the New Requisite"
msgstr ""

#: ../../topics/releases/0.16.0.rst:27
msgid ""
"The new `prereq` requisite is very powerful! It allows for states to execute"
" based on a state that is expected to make changes in the future. This "
"allows for a change on the system to be preempted by another execution. A "
"good example is needing to shut down a service before modifying files "
"associated with it, allowing, for instance, a webserver to be shut down "
"allowing a load balancer to stop sending requests while server side code is "
"updated. In this case, the prereq will only run if changes are expected to "
"happen in the prerequired state, and the prerequired state will always run "
"after the prereq state and only if the prereq state succeeds."
msgstr ""

#: ../../topics/releases/0.16.0.rst:38
msgid "Peer System Improvements"
msgstr ""

#: ../../topics/releases/0.16.0.rst:40
msgid ""
"The peer system has been revamped to make it more reliable, faster, and like"
" the rest of Salt, async. The peer calls when an updated minion and master "
"are used together will be much faster!"
msgstr ""

#: ../../topics/releases/0.16.0.rst:45
msgid "Relative Includes"
msgstr ""

#: ../../topics/releases/0.16.0.rst:47
msgid ""
"The ability to include an sls relative to the defined sls has been added, "
"the new syntax id documented here:"
msgstr ""

#: ../../topics/releases/0.16.0.rst:50
msgid ":doc:`Includes </ref/states/include>`"
msgstr ""

#: ../../topics/releases/0.16.0.rst:53
msgid "More State Output Options"
msgstr ""

#: ../../topics/releases/0.16.0.rst:55
msgid ""
"The ``state_output`` option in the past only supported `full` and `terse`, "
"0.16.0 add the `mixed` and `changes` modes further refining how states are "
"sent to users' eyes."
msgstr ""

#: ../../topics/releases/0.16.0.rst:60
msgid "Improved Windows Support"
msgstr ""

#: ../../topics/releases/0.16.0.rst:62
msgid ""
"Support for Salt on Windows continues to improve. Software management on "
"Windows has become more seamless with Linux/UNIX/BSD software management. "
"Installed software is now recognized by the short names defined in the "
":doc:`repository SLS </ref/windows-package-manager>`. This makes it possible"
" to run ``salt '*' pkg.version firefox`` and get back results from Windows "
"and non-Windows minions alike."
msgstr ""

#: ../../topics/releases/0.16.0.rst:69
msgid ""
"When templating files on Windows, Salt will now correctly use Windows "
"appropriate line endings. This makes it much easier to edit and consume "
"files on Windows."
msgstr ""

#: ../../topics/releases/0.16.0.rst:73
msgid ""
"When using the cmd state the ``shell`` option now allows for specifying "
"Windows Powershell as an alternate shell to execute cmd.run and cmd.script. "
"This opens up Salt to all the power of Windows Powershell and its advanced "
"Windows management capabilities."
msgstr ""

#: ../../topics/releases/0.16.0.rst:78
msgid ""
"Several fixes and optimizations were added for the Windows networking "
"modules, especially when working with IPv6."
msgstr ""

#: ../../topics/releases/0.16.0.rst:81
msgid ""
"A system module was added that makes it easy to restart and shutdown Windows"
" minions."
msgstr ""

#: ../../topics/releases/0.16.0.rst:84
msgid ""
"The Salt Minion will now look for its config file in ``c:\\salt\\conf`` by "
"default. This means that it's no longer necessary to specify the ``-c`` "
"option to specify the location of the config file when starting the Salt "
"Minion on Windows in a terminal."
msgstr ""

#: ../../topics/releases/0.16.0.rst:90
msgid "Muliple Targets for pkg.removed, pkg.purged States"
msgstr ""

#: ../../topics/releases/0.16.0.rst:92
msgid ""
"Both :mod:`pkg.removed <salt.states.pkg.removed>` and :mod:`pkg.purged "
"<salt.states.pkg.purged>` now support the ``pkgs`` argument, which allow for"
" multiple packages to be targeted in a single state. This, as in "
":mod:`pkg.installed <salt.states.pkg.installed>`, helps speed up these "
"states by reducing the number of times that the package management tools "
"(apt, yum, etc.) need to be run."
msgstr ""

#: ../../topics/releases/0.16.0.rst:100
msgid "Random Times in Cron States"
msgstr ""

#: ../../topics/releases/0.16.0.rst:102
msgid ""
"The temporal parameters in :mod:`cron.present <salt.states.cron.present>` "
"states (minute, hour, etc.) can now be randomized by using ``random`` "
"instead of a specific value. For example, by using the ``random`` keyword in"
" the ``minute`` parameter of a cron state, the same cron job can be pushed "
"to hundreds or thousands of hosts, and they would each use a randomly-"
"generated minute. This can be helpful when the cron job accesses a network "
"resource, and it is not desirable for all hosts to run the job concurrently."
msgstr ""

#: ../../topics/releases/0.16.0.rst:118
msgid ""
"Since Salt assumes a value of ``*`` for unspecified temporal parameters, "
"adding a parameter to the state and setting it to ``random`` will change "
"that value from ``*`` to a randomized numeric value. However, if that field "
"in the cron entry on the minion already contains a numeric value, then using"
" the ``random`` keyword will not modify it."
msgstr ""

#: ../../topics/releases/0.16.0.rst:125
msgid "Confirmation Prompt on Key Acceptance"
msgstr ""

#: ../../topics/releases/0.16.0.rst:127
msgid ""
"When accepting new keys with ``salt-key -a minion-id`` or ``salt-key -A``, "
"there is now a prompt that will show the affected keys and ask for "
"confirmation before proceeding. This prompt can be bypassed using the ``-y``"
" or ``--yes`` command line argument, as with other ``salt-key`` commands."
msgstr ""

#: ../../topics/releases/0.16.0.rst:133
msgid "Support for Setting Password Hashes on BSD Minions"
msgstr ""

#: ../../topics/releases/0.16.0.rst:135
msgid ""
"FreeBSD, NetBSD, and OpenBSD all now support setting passwords in "
":mod:`user.present <salt.states.user.present>` states."
msgstr ""
