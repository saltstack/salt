# 
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-799-g9ccf089\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 21:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../topics/releases/0.8.7.rst:6
msgid "Salt 0.8.7 release notes"
msgstr ""

#: ../../topics/releases/0.8.7.rst:8
msgid ""
"It has been a month since salt 0.8.0, and it has been a long month! But Salt"
" is still coming along strong. 0.8.7 has a lot of changes and a lot of "
"updates. This update makes Salt’s ZeroMQ back end better, strips Facter from"
" the dependencies, and introduces interfaces to handle more capabilities."
msgstr ""

#: ../../topics/releases/0.8.7.rst:13
msgid ""
"Many of the major updates are in the background, but the changes should "
"shine through to the surface. A number of the new features are still a "
"little thin, but the back end to support expansion is in place."
msgstr ""

#: ../../topics/releases/0.8.7.rst:17
msgid ""
"I also recently gave a presentation to the Utah Python users group in Salt "
"Lake City, the slides from this presentation are available here: "
":download:`Salt.pdf`"
msgstr ""

#: ../../topics/releases/0.8.7.rst:21
msgid "The video from this presentation will be available shortly."
msgstr ""

#: ../../topics/releases/0.8.7.rst:23
msgid "The major new features and changes in Salt 0.8.7 are:"
msgstr ""

#: ../../topics/releases/0.8.7.rst:25
msgid "Revamp ZeroMQ topology on the master for better scalability"
msgstr ""

#: ../../topics/releases/0.8.7.rst:26
msgid "State enforcement"
msgstr ""

#: ../../topics/releases/0.8.7.rst:27
msgid "Dynamic state enforcement managers"
msgstr ""

#: ../../topics/releases/0.8.7.rst:28
msgid "Extract the module loader into salt.loader"
msgstr ""

#: ../../topics/releases/0.8.7.rst:29
msgid "Make Job ids more granular"
msgstr ""

#: ../../topics/releases/0.8.7.rst:30
msgid "Replace Facter functionality with the new salt grains interface"
msgstr ""

#: ../../topics/releases/0.8.7.rst:31
msgid "Support for “virtual” salt modules"
msgstr ""

#: ../../topics/releases/0.8.7.rst:32
msgid "Introduce the salt-call command"
msgstr ""

#: ../../topics/releases/0.8.7.rst:33
msgid "Better debugging for minion modules"
msgstr ""

#: ../../topics/releases/0.8.7.rst:35
msgid ""
"The new ZeroMQ topology allows for better scalability, this will be required"
" by the need to execute massive file transfers to multiple machines in "
"parallel and state management. The new ZeroMQ topology is available in the "
"aforementioned presentation."
msgstr ""

#: ../../topics/releases/0.8.7.rst:40
msgid ""
"0.8.7 introduces the capability to declare states, this is similar to the "
"capabilities of Puppet. States in salt are declared via state data "
"structures. This system is very young, but the core feature set is "
"available. Salt states work around rendering files which represent Salt high"
" data. More on the Salt state system will be documented in the near future."
msgstr ""

#: ../../topics/releases/0.8.7.rst:46
msgid ""
"The system for loading salt modules has been pulled out of the minion class "
"to be a standalone module, this has enabled more dynamic loading of Salt "
"modules and enables many of the updates in 0.8.7 –"
msgstr ""

#: ../../topics/releases/0.8.7.rst:50
msgid ":blob:`salt/loader.py`"
msgstr ""

#: ../../topics/releases/0.8.7.rst:52
msgid ""
"Salt Job ids are now microsecond precise, this was needed to repair a race "
"condition unveiled by the speed improvements in the new ZeroMQ topology."
msgstr ""

#: ../../topics/releases/0.8.7.rst:55
msgid ""
"The new grains interface replaces the functionality of Facter, the idea "
"behind grains differs from Facter in that the grains are only used for "
"static system data, dynamic data needs to be derived from a call to a salt "
"module. This makes grains much faster to use, since the grains data is "
"generated when the minion starts."
msgstr ""

#: ../../topics/releases/0.8.7.rst:61
msgid ""
"Virtual salt modules allows for a salt module to be presented as something "
"other than its module name. The idea here is that based on information from "
"the minion decisions about which module should be presented can be made. The"
" best example is the pacman module. The pacman module will only load on Arch"
" Linux minions, and will be called pkg. Similarly the yum module will be "
"presented as pkg when the minion starts on a Fedora/RedHat system."
msgstr ""

#: ../../topics/releases/0.8.7.rst:68
msgid ""
"The new salt-call command allows for minion modules to be executed from the "
"minion. This means that on the minion a salt module can be executed, this is"
" a great tool for testing Salt modules. The salt-call command can also be "
"used to view the grains data."
msgstr ""

#: ../../topics/releases/0.8.7.rst:73
msgid ""
"In previous releases when a minion module threw an exception very little "
"data was returned to the master. Now the stack trace from the failure is "
"returned making debugging of minion modules MUCH easier."
msgstr ""

#: ../../topics/releases/0.8.7.rst:77
msgid ""
"Salt is nearing the goal of 1.0, where the core feature set and capability "
"is complete!"
msgstr ""

#: ../../topics/releases/0.8.7.rst:80
msgid ""
"Salt 0.8.7 can be downloaded from GitHub here: :download:`salt-0.8.7.tar.gz`"
msgstr ""

#: ../../topics/releases/0.8.7.rst:83
msgid "-Thomas S Hatch"
msgstr ""
