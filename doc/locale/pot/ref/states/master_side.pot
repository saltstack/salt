# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013 SaltStack, Inc.
# This file is distributed under the same license as the Salt package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-848-g77b77a3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-12 23:19+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../ref/states/master_side.rst:6
# deda9066e9dd427f9e86551370528051
msgid "Remote Control States"
msgstr ""

#: ../../ref/states/master_side.rst:10
# 6dd2403d8265430bbc41b1a6ad642126
msgid "Remote Control States is the capability to organize routines on minions from the master, using state files."
msgstr ""

#: ../../ref/states/master_side.rst:13
# dedaae61a3dc44deaecd2e6b06926f58
msgid "This allows for the use of the Salt state system to execute state runs and function runs in a way more powerful than the overstate, will full command of the requisite and ordering systems inside of states."
msgstr ""

#: ../../ref/states/master_side.rst:19
# 55bbc8b810674d78a830d07ba85d75e5
msgid "Remote Control States was added in 0.17.0 with the intent to eventually deprecate the overstate system in favor of this new, substantially more powerful system."
msgstr ""

#: ../../ref/states/master_side.rst:23
# 838a2c831acf49748e62e21d8f5f2b54
msgid "The Overstate will still be maintained for the forseable future."
msgstr ""

#: ../../ref/states/master_side.rst:26
# 64e10f683e784d82a21553b2cc4ea934
msgid "Creating States Trigger Remote Executions"
msgstr ""

#: ../../ref/states/master_side.rst:28
# cb66a727c8df4175a7cf596071c2e658
msgid "The new `salt` state module allows for these new states to be defined in such a way to call out to the `salt` and/or the `salt-ssh` remote execution systems, this also supports the addition of states to connect to remote embedded devices."
msgstr ""

#: ../../ref/states/master_side.rst:33
# 08520a2eca964c47a3ac46fa453c5d2f
msgid "To create a state that calls out to minions simple specify the `salt.state` or `salt.function` states:"
msgstr ""

#: ../../ref/states/master_side.rst:43
# 509cfd7fae594e1890c3d717ad411650
msgid "This sls file can now be referenced by the `state.sls` runner the same way an sls is normally referenced, assuming the default configurtion with /srv/salt as the root of the state tree and the above file being saved as /srv/salt/webserver.sls, the state can be run from the master with the salt-run command:"
msgstr ""

#: ../../ref/states/master_side.rst:53
# a2bbc368b18e43a7aba954e9c3819ee1
msgid "This will execute the defined state to fire up the webserver routine."
msgstr ""

#: ../../ref/states/master_side.rst:56
# 2fc55e9e42e64a3980c5eb388bc8974a
msgid "Calling Multiple State Runs"
msgstr ""

#: ../../ref/states/master_side.rst:58
# b2372d498f5f4127a7fa2ea99c10a8c2
msgid "All of the concepts of states exist so building something more complex is easy:"
msgstr ""

#: ../../ref/states/master_side.rst:63
# a759e4890c254bf8971ff56ec588d3b7
msgid "As of Salt 0.17.0 states are run in the order in which they are defined, so the cmd.run defined below will always execute first"
msgstr ""

