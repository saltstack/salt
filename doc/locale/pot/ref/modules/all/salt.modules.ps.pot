# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013 SaltStack, Inc.
# This file is distributed under the same license as the Salt package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-848-g77b77a3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-12 23:19+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../ref/modules/all/salt.modules.ps.rst:6
# b1885803024643f584db3f405d2797b0
msgid "salt.modules.ps"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps:1
# b6abf30265024b33b194a9e954c65a4a
msgid "A salt interface to psutil, a system and process library. See http://code.google.com/p/psutil."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps:4
# c1348549533a47e591f705104c006f09
msgid "psutil Python module"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.boot_time:1
# 1a74f12c66b34be9b651e20b90c4eb00
msgid "Return the boot time in number of seconds since the epoch began."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.boot_time:3
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.cached_physical_memory:3
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.cpu_percent:9
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.cpu_times:8
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.disk_io_counters:3
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.disk_partition_usage:4
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.disk_partitions:8
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.disk_usage:4
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.get_pid_list:3
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.network_io_counters:3
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.num_cpus:3
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.physical_memory_buffers:3
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.total_physical_memory:3
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.virtual_memory_usage:4
# fadae370807b42918ed3b24db45386e5
# c1165e5099b04031b60496746e3b6d9e
# ed8ecd5b2cf54a09869c786667c60a99
# 61411e699e71493b819a0702d7bb483e
# 8570a95bce864ebeb174daa5f49d30db
# 9ca7d61230ac46209b396243fb4b2f15
# 3a307fbd24c244cf86a785e34f967c84
# 97a66884be2f4e00bef83a396e4f2ad0
# b25bdef9302e4f1eb2fe078d6b1957c7
# 09bb4cafd09d4eed8a4158818b46d008
# 1280cc0c9554403a8701d5406bd79cf1
# e1db34b7d75541e3a85730a65c786380
# c125f9fe9d7f4ec5b76e49a784629113
# 7513418b4d094c70b414c15399e90855
msgid "CLI Example:"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.cached_physical_memory:1
# ff3f2bd6831f4a87b673e02beb24ee35
msgid "Return the amount cached memory."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.cpu_percent:1
# 7ab8cfbc805c493399a564f9ac333358
msgid "Return the percent of time the CPU is busy."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.cpu_percent:3
# 1d53a9c575fa4eb6958b6a0738c893a0
msgid "interval"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.cpu_percent:4
# 1b7786f864874c38b917cb56d305dcad
msgid "the number of seconds to sample CPU usage over"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.cpu_percent:7
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.cpu_times:6
# 4360cbe775a84f9493f20448a27d92bf
# 74cb54b8635e4929a9c930027f584b5a
msgid "per_cpu"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.cpu_percent:6
# 459e8eb5ceda4bd088759ca3ea5a59ac
msgid "if True return an array of CPU percent busy for each CPU, otherwise aggregate all percents into one number"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.cpu_times:1
# 2068f77fb2f24d57a9c1a668e193ef6c
msgid "Return the percent of time the CPU spends in each state, e.g. user, system, idle, nice, iowait, irq, softirq."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.cpu_times:5
# a0f0453198bc44e597f78b9674bd132d
msgid "if True return an array of percents for each CPU, otherwise aggregate all percents into one number"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.disk_io_counters:1
# ff965a9aea5d4b30a9d9a33395f151d3
msgid "Return disk I/O statisitics."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.disk_partition_usage:1
# 4b8e9c6644334e318056f63a6292f98c
msgid "Return a list of disk partitions plus the mount point, filesystem and usage statistics."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.disk_partitions:1
# ca1d8ae6d73747368e3c28f815d0e9d9
msgid "Return a list of disk partitions and their device, mount point, and filesystem type."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.disk_partitions:6
# d4f722a7bd6144a0ad22d76882073628
msgid "all"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.disk_partitions:5
# fd40207dc1b94703b20b3f71519151fd
msgid "if set to False, only return local, physical partitions (hard disk, USB, CD/DVD partitions).  If True, return all filesystems."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.disk_usage:1
# 285e02c1296845d4a52dc7f7eec695fc
msgid "Given a path, return a dict listing the total available space as well as the free space, and used space."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.get_pid_list:1
# 8fd9c7f487cc4d3194c1f6b3e765169e
msgid "Return a list of process ids (PIDs) for all running processes."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.kill_pid:1
# a35a59c93e5c464aabc12ce85974bd31
msgid "Kill a proccess by PID."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.kill_pid:8
# 74889c0ef3194c10a76afe8e91f840d3
msgid "pid"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.kill_pid:8
# 947010e931954137bd57e8737a2ab849
msgid "PID of process to kill."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.kill_pid:12
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pkill:16
# 22d24d57793e440098309608b1c1777f
# ac169efc4de94c75a31dd783ec24d1c2
msgid "signal"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.kill_pid:11
# 3667d1073ec242dfb47664faaaa33226
msgid "Signal to send to the process. See manpage entry for kill for possible values. Default: 15 (SIGTERM)."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.kill_pid:14
# 4e88bebb9ff34ea3aef908c988778006
msgid "**Example:**"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.kill_pid:16
# a3b2954f4b2149f8b355d0e441881653
msgid "Send SIGKILL to process with PID 2000:"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.network_io_counters:1
# 834bf5e5cdc24561b5b082db7be2dae9
msgid "Return network I/O statisitics."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.num_cpus:1
# 849400bef8af4f8e80923d2051deeffb
msgid "Return the number of CPUs."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pgrep:1
# db4304e350534b7382d983aeb83833c7
msgid "Return the pids for processes matching a pattern."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pgrep:3
# 19e45e8a8d4048a4ae510ba1eaadef7a
msgid "If full is true, the full command line is searched for a match, otherwise only the name of the command is searched."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pgrep:11
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pkill:9
# cda81742a0674d36911dba061420057c
# 8f76e47f0dc14c8882a0326a9addaadb
msgid "pattern"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pgrep:11
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pkill:9
# 6bf5b95d3e7e44f8a2f4e05792ddf662
# b34ee58186124c2187b1762ac28f733d
msgid "Pattern to search for in the process list."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pgrep:14
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pkill:12
# 518d99eba8da44a2be57b77b2af05c02
# 0420a0d78449450b842010d49fc22e1d
msgid "user"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pgrep:14
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pkill:12
# da08f163a5c9462f8bbba2326d4681ef
# 181fa3c1c9d94109b6b47ccc0fd7f66a
msgid "Limit matches to the given username. Default: All users."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pgrep:18
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pkill:20
# 1cba06a4fc304292bd9e1d1d8bd99df1
# b5a593db4fe14951a3c0125731c2e07c
msgid "full"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pgrep:17
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pkill:19
# 81399b7fddd148d49a255d13aed631db
# add737a0a5154d08835ab74bbacd02c0
msgid "A boolean value indicating whether only the name of the command or the full command line should be matched against the pattern."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pgrep:20
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pkill:22
# 1f1d609e91734379995123cc2f9bc725
# 9944722e936843d59c2c5cb8d42060ea
msgid "**Examples:**"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pgrep:22
# 8ec302a2b5ba4e4ab076f562cf382d97
msgid "Find all httpd processes on all 'www' minions:"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pgrep:28
# 26e1e569f250429db387e4b78ffa268b
msgid "Find all bash processes owned by user 'tom':"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.physical_memory_buffers:1
# 4a6c63bef7ad4506ba75ff322b3f6b09
msgid "Return the amount of physical memory buffers."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.physical_memory_usage:1
# 7dd70f192c2d4ecca41f7644a3694db0
msgid "Return a dict that describes free and available physical memory."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.physical_memory_usage:3
#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.top:5
# 5e74e153934c47668aceb3059b0bf46a
# 8aa7d9a76fc94fce890b6c60b2e9335a
msgid "CLI Examples:"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pkill:1
# 0f7ffd24bd864f03a6e0f9fd3979181c
msgid "Kill processes matching a pattern."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pkill:15
# b4871bbc2b1746ae98f4891a43db0aa4
msgid "Signal to send to the process(es). See manpage entry for kill for possible values. Default: 15 (SIGTERM)."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pkill:24
# 205a32ee15ac4b82a0779dc30f359eff
msgid "Send SIGHUP to all httpd processes on all 'www' minions:"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.pkill:30
# 87a1fbfd55b540f587cd66b6159eacff
msgid "Send SIGKILL to all bash processes owned by user 'tom':"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.top:1
# cec857b1f43543beac0e0931b9e0c380
msgid "Return a list of top CPU consuming processes during the interval. num_processes = return the top N CPU consuming processes interval = the number of seconds to sample CPU usage over"
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.total_physical_memory:1
# 062e10d30a7542a58662a33041fd6f45
msgid "Return the total number of bytes of physical memory."
msgstr ""

#: ../../../salt/modules/ps.py:docstring of salt.modules.ps.virtual_memory_usage:1
# b101c4e30302416ba28e8c0ed36c15e2
msgid "Return a dict that describes free and available memory, both physical and virtual."
msgstr ""

