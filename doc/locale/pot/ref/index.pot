# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013 SaltStack, Inc.
# This file is distributed under the same license as the Salt package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-848-g77b77a3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-12 23:19+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../ref/index.rst:6
# 63c6d94bf6bb4af39c5480528bbca1db
msgid "Introduction to Extending Salt"
msgstr ""

#: ../../ref/index.rst:8
# e3932c1c8f7242a49013dbfcf0f505db
msgid "Salt is made to be used, and made to be extended. The primary goal of Salt is to provide a foundation which can be used to solve problems without assuming what those problems might be."
msgstr ""

#: ../../ref/index.rst:12
# 60babb3844f74e989024ae02e48ddf39
msgid "One of the greatest benefit of developing Salt has been the vast array of ways in which people have wanted to use it, while the original intention was as a communication layer for a cloud controller Salt has been extended to facilitate so much more."
msgstr ""

#: ../../ref/index.rst:18
# d9d795b9213d4896ac2fd6da0cd833e6
msgid "Client API"
msgstr ""

#: ../../ref/index.rst:20
# 09885ee0956c474395c57b5392a373bd
msgid "The primary interface used to extend Salt, is to simply use it. Salt executions can be called via the Salt client API, making programming master side solutions with Salt is easy."
msgstr ""

#: ../../ref/index.rst:24
# 436c27e399c941c0b17a1eded6a39feb
msgid ":ref:`client-apis`"
msgstr ""

#: ../../ref/index.rst:27
# c99cae114f6e4cc494b7f14f1e1dc8ee
msgid "Adding Loadable Plugins"
msgstr ""

#: ../../ref/index.rst:29
# f67224e9b9324e558872f9c73a0c93d5
msgid "Salt is comprised of a core platform that loads many types of easy to write plugins. The idea is to enable all of the breaking points in the Salt processes to have a point of pluggable interaction. This means that all of the main features of Salt can be extended, modified or used."
msgstr ""

#: ../../ref/index.rst:34
# 8e7a7278bf7a425a8ecc19cdc6944a85
msgid "The breaking points and helping interfaces span from convenience master side executions to manipulating the flow of how data is handled by Salt."
msgstr ""

#: ../../ref/index.rst:38
# f2f7779ee420417fbc1b7f6e10874f3e
msgid "Minion Execution Modules"
msgstr ""

#: ../../ref/index.rst:40
# 3e57486b42874cdea6809849589178f2
msgid "The minion execution modules or just ``modules`` are the core to what Salt is and does. These modules are found in:"
msgstr ""

#: ../../ref/index.rst:43
# deb60af329684ab48a566fa4079688f8
msgid ":blob:`salt/modules`"
msgstr ""

#: ../../ref/index.rst:45
# 9295e35a06cf40368c1a9192eb16f85e
msgid "These modules are what is called by the Salt command line and the salt client API. Adding modules is done by simply adding additional Python modules to the *modules* directory and restarting the minion."
msgstr ""

#: ../../ref/index.rst:50
# 46016ea3cfec41d8b052907f047bf8f3
msgid "Grains"
msgstr ""

#: ../../ref/index.rst:52
# edef40e02cf5409daf1f7cf995e29e4d
msgid "Salt grains, or \"grains of truth\" are bits of static information that are generated when the minion starts. This information is useful when determining what package manager to default to, or where certain configuration files are stored on the minion."
msgstr ""

#: ../../ref/index.rst:57
# 6758f8205b444eb896f4e49a9ef01e7e
msgid "The Salt grains are the interface used for auto detection and dynamic assignment of execution modules and types to specific Salt minions."
msgstr ""

#: ../../ref/index.rst:60
# 6b2d25548af74fac8a5cc3faad932c70
msgid "The code used to generate the Salt grains can be found here:"
msgstr ""

#: ../../ref/index.rst:62
# af72c0d8fc7140d4805de704670e1e90
msgid ":blob:`salt/grains`"
msgstr ""

#: ../../ref/index.rst:65
# d6ed81fa3806467e96894691da0f34f8
msgid "States"
msgstr ""

#: ../../ref/index.rst:67
# f2cace5da9bf4264b2956d1272dcd4aa
msgid "Salt supports state enforcement, this makes Salt a high speed and very efficient solution for system configuration management."
msgstr ""

#: ../../ref/index.rst:70
# 3d6046c10e06408f9c9f6d886c3dc9d6
msgid "States can be easily added to Salt by dropping a new state module in:"
msgstr ""

#: ../../ref/index.rst:72
# d122add0aaa8401fb7535789526419d3
msgid ":blob:`salt/states`"
msgstr ""

#: ../../ref/index.rst:75
# 316bde8b28644f5da3d30d35f942eb65
msgid "Renderers"
msgstr ""

#: ../../ref/index.rst:77
# 9301f09e81234940892488b4310c1236
msgid "Salt states are controlled by simple data structures, these structures can be abstracted in a number of ways. While the default is to be in a YAML file wrapped in a jinja template, any abstraction can be used. This means that any format that can be dreamed is possible, so long as a renderer is written for it."
msgstr ""

#: ../../ref/index.rst:83
# 8a713ce06d2b4e87836e49af25bcaf3e
msgid "The existing renderers can be found here:"
msgstr ""

#: ../../ref/index.rst:85
# 9f9b4f6e74dd4f7c84ac3f130794d69c
msgid ":blob:`salt/renderers`"
msgstr ""

#: ../../ref/index.rst:88
# 1d055cef9ddc48e689974678ca6865d2
msgid "Returners"
msgstr ""

#: ../../ref/index.rst:90
# 1cf6c1c1618244248124eeb47913e012
msgid "The Salt commands all produce a return value, that return value is sent to the Salt master by default, but it can be sent anywhere. The returner interface makes it programmatically possible for the information to be sent to anything from an SQL or NoSQL database, to a custom application made to use Salt."
msgstr ""

#: ../../ref/index.rst:95
# bf2eed1fb3e4445ca791e162cc32db1c
msgid "The existing returners can be found here:"
msgstr ""

#: ../../ref/index.rst:97
# 2ad9377510744f908c1fccacc43fa310
msgid ":blob:`salt/returners`"
msgstr ""

#: ../../ref/index.rst:100
# 0f91b696af314fc1b74e30d618a14c92
msgid "Runners"
msgstr ""

#: ../../ref/index.rst:102
# 4ace664c0cf8461a8e9e689c80297fd6
msgid "Sometimes a certain application can be made to execute and run from the existing Salt command line. This is where the Salt runners come into play. The Salt Runners what is called by the Salt-run command and are meant to act as a generic interface for encapsulating master side executions."
msgstr ""

#: ../../ref/index.rst:107
# ce3a59a65fdc497dbd0bb0026ad5e9cc
msgid "Existing Salt runners are located here:"
msgstr ""

#: ../../ref/index.rst:109
# 64adf3973e184280ab73098c1862244c
msgid ":blob:`salt/runners`"
msgstr ""

