# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013 SaltStack, Inc.
# This file is distributed under the same license as the Salt package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-848-g77b77a3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-12 23:19+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../topics/tutorials/preseed_key.rst:6
# 71d727819b5c4f499a849ac3185bb54c
msgid "Preseed Minion with Accepted Key"
msgstr ""

#: ../../topics/tutorials/preseed_key.rst:8
# 36fffee5be204a4a9a9feea7b2a88e01
msgid "In some situations, it is not convenient to wait for a minion to start before accepting its key on the master. For instance, you may want the minion to bootstrap itself as soon as it comes online. You may also want to to let your developers provision new development machines on the fly."
msgstr ""

#: ../../topics/tutorials/preseed_key.rst:13
# 6bd3dccff48e489890606d3ee554420d
msgid "There is a general four step process to do this:"
msgstr ""

#: ../../topics/tutorials/preseed_key.rst:15
# 04702df0551d4f5b8ba0957555c49e41
msgid "Generate the keys on the master:"
msgstr ""

#: ../../topics/tutorials/preseed_key.rst:21
# c5ef01b2c3e5477e901e8d3dbfc751d8
msgid "Pick a name for the key, such as the minion's id."
msgstr ""

#: ../../topics/tutorials/preseed_key.rst:23
# 962d51dbd1174a8185d863be9853c4a4
msgid "Add the public key to the accepted minion folder:"
msgstr ""

#: ../../topics/tutorials/preseed_key.rst:29
# 4c5a46897b7843b083e6ee8d036b2c9a
msgid "It is necessary that the public key file has the same name as your minion id. This is how Salt matches minions with their keys. Also note that the pki folder could be in a different location, depending on your OS or if specified in the master config file."
msgstr ""

#: ../../topics/tutorials/preseed_key.rst:34
# fde420ef93844b0c9975851a211e8b34
msgid "Distribute the minion keys."
msgstr ""

#: ../../topics/tutorials/preseed_key.rst:36
# 460b74eb46964057b0f8abea8ace8045
msgid "There is no single method to get the keypair to your minion. If you are spooling up minions on EC2, you could pass them in using user_data or a cloud-init script. If you are handing them off to a team of developers for provisioning dev machines, you will need a secure file transfer."
msgstr ""

#: ../../topics/tutorials/preseed_key.rst:41
# 9e9ed553b5f544f3af4f86937dc736b5
msgid "Security Warning"
msgstr ""

#: ../../topics/tutorials/preseed_key.rst:43
# 7b848f20949c4640a46ef38ac82eb6df
msgid "Since the minion key is already accepted on the master, distributing the private key poses a potential security risk. A malicious party will have access to your entire state tree and other sensitive data."
msgstr ""

#: ../../topics/tutorials/preseed_key.rst:47
# 84eaa0f9c8524ea3849e28b0d720ea4d
msgid "Preseed the Minion with the keys"
msgstr ""

#: ../../topics/tutorials/preseed_key.rst:49
# d52f5ea95ae8450ba63947b5816ca0ef
msgid "You will want to place the minion keys before starting the salt-minion daemon:"
msgstr ""

#: ../../topics/tutorials/preseed_key.rst:56
# 048013558ba24cbf9ce094cffd3be3c3
msgid "Once in place, you should be able to start salt-minion and run ``salt-call state.highstate`` or any other salt commands that require master authentication."
msgstr ""

