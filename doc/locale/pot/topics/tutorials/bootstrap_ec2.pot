# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013 SaltStack, Inc.
# This file is distributed under the same license as the Salt package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-848-g77b77a3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-12 23:19+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../topics/tutorials/bootstrap_ec2.rst:6
# eb674d44836347bc84f9c411af7c8b7b
msgid "Bootstrapping Salt on Linux EC2 with Cloud-Init"
msgstr ""

#: ../../topics/tutorials/bootstrap_ec2.rst:8
# 8209656ee8744274834bbf5fc34ac605
msgid "`Salt <http://saltstack.org>`_ is a great tool for remote execution and configuration management, however you will still need to bootstrap the daemon when spinning up a new node. One option is to create and save a custom `AMI`_, but this creates another resource to maintain and document."
msgstr ""

#: ../../topics/tutorials/bootstrap_ec2.rst:13
# 495682a3e0f9439c90199491e39cc9ec
msgid "A better method for Linux machines uses Canonical's `CloudInit <https://help.ubuntu.com/community/CloudInit>`_ to run a bootstrap script during an `EC2 Instance`_ initialization. Cloud-init takes the ``user_data`` string passed into a new AWS instance and runs it in a manner similar to rc.local. The bootstrap script needs to:"
msgstr ""

#: ../../topics/tutorials/bootstrap_ec2.rst:19
# e74ca45597274f3bb5d8709c006108d2
msgid "Install `Salt`_ with dependencies"
msgstr ""

#: ../../topics/tutorials/bootstrap_ec2.rst:20
# 8d8df268497848cebbd6836063fe70af
msgid "Point the minion to the master"
msgstr ""

#: ../../topics/tutorials/bootstrap_ec2.rst:22
# c8ae3ec8abef4bbfb5b1ed2b683d63a6
msgid "Here is a sample script:"
msgstr ""

#: ../../topics/tutorials/bootstrap_ec2.rst:39
# f3ef5cda6b81489da1aaf05b725c185d
msgid "First the script adds the saltstack ppa and installs the package. Then we copy over the minion config template and tell it where to find the master. You will have to replace ``[salt_master_fqdn]`` with something that resolves to your Salt master."
msgstr ""

#: ../../topics/tutorials/bootstrap_ec2.rst:48
# b6755654a0394ae4821d1b5079b1388a
msgid "Used With Boto"
msgstr ""

#: ../../topics/tutorials/bootstrap_ec2.rst:50
# b49f6075cdac4b18afba6f9718896f44
msgid "`Boto <https://github.com/boto/boto>`_ will accept a string for user data which can be used to pass our bootstrap script. If the script is saved to a file, you can read it into a string:"
msgstr ""

#: ../../topics/tutorials/bootstrap_ec2.rst:68
# 8b0940c3dc994cf1adf8d6f4efeac7be
msgid "Additional Notes"
msgstr ""

#: ../../topics/tutorials/bootstrap_ec2.rst:70
# e7d2a1c2c68e47379f56d4e761bd4f6f
msgid "Sometime in the future the ppa will include and install an upstart file. In the meantime, you can use the bootstrap to `build one <https://gist.github.com/1617054>`_."
msgstr ""

#: ../../topics/tutorials/bootstrap_ec2.rst:74
# ef8a85e0e7eb45b3b2514b94b45bdab6
msgid "It may also be useful to set the node's role during this phase. One option would be saving the node's role to a file and then using a custom Grain to select it."
msgstr ""

