# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013 SaltStack, Inc.
# This file is distributed under the same license as the Salt package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-848-g77b77a3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-12 23:19+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../topics/conventions/style.rst:6
# 7f88017fb39d4bf98c005d3cd1379e0c
msgid "Salt Coding Style"
msgstr ""

#: ../../topics/conventions/style.rst:8
# 9f2408901e184662a094f77c025c3515
msgid "Salt is developed with a certain coding style, while the style is dominantly PEP 8 it is not completely PEP 8. It is also noteworthy that a few development techniques are also employed which should be adhered to. In the end, the code is made to be \"Salty\"."
msgstr ""

#: ../../topics/conventions/style.rst:13
# 3d6746f3f126468d847757725b0dafd8
msgid "Most importantly though, we will accept code that violates the coding style and KINDLY ask the contributor to fix it, or go ahead and fix the code on behalf of the contributor. Coding style is NEVER grounds to reject code contributions, and is never grounds to talk down to another member of the community (There are no grounds to treat others without respect, especially people working to improve Salt)!!"
msgstr ""

#: ../../topics/conventions/style.rst:22
# 03d4893521204f98860df78a865d8819
msgid "Strings"
msgstr ""

#: ../../topics/conventions/style.rst:24
# ee8501f71492489da3823537d5e083d4
msgid "Salt follows a few rules when formatting strings:"
msgstr ""

#: ../../topics/conventions/style.rst:27
# 44ab8d86a7af4916b47b3314f8069d52
msgid "Single Quotes"
msgstr ""

#: ../../topics/conventions/style.rst:29
# 963a2968c76b4a2693105c80c1fe7e55
msgid "In Salt, all strings use single quotes unless there is a good reason not to. This means that docstrings use single quotes, standard strings use single quotes etc.:"
msgstr ""

#: ../../topics/conventions/style.rst:43
# f6346aba5d0047f380a245d7be240d1b
msgid "Formatting Strings"
msgstr ""

#: ../../topics/conventions/style.rst:45
# 168db809143142b5867387d4b76ceff2
msgid "All strings which require formatting should use the `.format` string method:"
msgstr ""

#: ../../topics/conventions/style.rst:52
# 747df3a12dd74a459e63397d80908a7d
msgid "Make sure to use indices or identifiers in the format brackets, since empty brackets are not supported by python 2.6."
msgstr ""

#: ../../topics/conventions/style.rst:55
# b8a5b7aaf56846f3956a42dd988a5fc2
msgid "Please do NOT use printf formatting."
msgstr ""

#: ../../topics/conventions/style.rst:58
# 9979f18601bf4116ad58efcb7536da81
msgid "Docstring Conventions"
msgstr ""

#: ../../topics/conventions/style.rst:60
# 27dc52ddd2e14195a2e62699b7c37cf8
msgid "Docstrings should always add a newline, docutils takes care of the new line and it makes the code cleaner and more vertical:"
msgstr ""

#: ../../topics/conventions/style.rst:63
# 9afa8c5a3b9141be8fc6606d28791b18
msgid "`GOOD`:"
msgstr ""

#: ../../topics/conventions/style.rst:74
# 22bf8de712494d7ea1af4472062a6b1d
msgid "`BAD`:"
msgstr ""

#: ../../topics/conventions/style.rst:83
# 5b33d46419ee47eea9229040698e428f
msgid "Imports"
msgstr ""

#: ../../topics/conventions/style.rst:85
# 046d613a980d4962898d6ab91c64a526
msgid "Salt code prefers importing modules and not explicit functions. This is both a style and functional preference. The functional preference originates around the fact that the module import system used by pluggable modules will include callable objects (functions) that exist in the direct module namespace. This is not only messy, but may unintentionally expose code python libs to the Salt interface and pose a security problem."
msgstr ""

#: ../../topics/conventions/style.rst:92
# 61e8e20bcaa748f0a852af3d206c35ce
msgid "To say this more directly with an example, this is `GOOD`:"
msgstr ""

#: ../../topics/conventions/style.rst:102
# 94e15a3562904c6687f77194db31b703
msgid "This on the other hand is `DISCOURAGED`:"
msgstr ""

#: ../../topics/conventions/style.rst:112
# 32ec44a88e8847abb11f3724e074cbaa
msgid "The time when this is changed is for importing exceptions, generally directly importing exceptions is preferred:"
msgstr ""

#: ../../topics/conventions/style.rst:115
# 077a07ae6a4747f291c6758d076b5173
msgid "This is a good way to import exceptions:"
msgstr ""

#: ../../topics/conventions/style.rst:123
# 6cf10b0b753b40b7b37c6275789241e0
msgid "Absolute Imports"
msgstr ""

#: ../../topics/conventions/style.rst:125
# 753ffc2e40ed4ee4a6fc86d66f21d2cc
msgid "Although `absolute imports`_ seems like an awesome idea, please do not use it. Extra care would be necessary all over salt's code in order for absolute imports to work as supposed. Believe it, it has been tried before and, as a tried example, by renaming ``salt.modules.sysmod`` to ``salt.modules.sys``, all other salt modules which needed to import :mod:`sys<python2:sys>` would have to also import :mod:`absolute_import<python2:__future__>`, which should be avoided."
msgstr ""

#: ../../topics/conventions/style.rst:137
# 9c1fb6a6f6374531a7655bdf5db36057
msgid "Vertical is Better"
msgstr ""

#: ../../topics/conventions/style.rst:139
# bb6533c0a8fe46b5888178bf7c194034
msgid "When writing Salt code, vertical code is generally preferred. This is not a hard rule but more of a guideline. As PEP 8 specifies, Salt code should not exceed 79 characters on a line, but it is preferred to separate code out into more newlines in some cases for better readability:"
msgstr ""

#: ../../topics/conventions/style.rst:154
# 75a3193cd15242178bb5b588575dab6e
msgid "Where there are more line breaks, this is also apparent when constructing a function with many arguments, something very common in state functions for instance:"
msgstr ""

#: ../../topics/conventions/style.rst:177
# 5aeb826e6525439ca342f22476baeb2b
msgid "Making function and class definitions vertical is only required if the arguments are longer then 80 characters. Otherwise, the formatting is optional and both are acceptable."
msgstr ""

#: ../../topics/conventions/style.rst:182
# ae2902630c694800823e7c5cbcead540
msgid "Indenting"
msgstr ""

#: ../../topics/conventions/style.rst:184
# 9f625af826c849a59a2a880bd085ded8
msgid "Some confusion exists in the python world about indenting things like function calls, the above examples use 8 spaces when indenting comma-delimited constructs."
msgstr ""

#: ../../topics/conventions/style.rst:188
# 0fa32671d5974fc7bf3db76a0a122112
msgid "The confusion arises because the pep8 program INCORRECTLY flags this as wrong, where PEP 8, the document, cites only using 4 spaces here as wrong, as it doesn't differentiate from a new indent level."
msgstr ""

#: ../../topics/conventions/style.rst:192
# 3966d979ef6a4f48a75ddde0666a3527
msgid "Right:"
msgstr ""

#: ../../topics/conventions/style.rst:201
# c61ed6cafaf54ddeac4d1114b7ad76f8
msgid "WRONG:"
msgstr ""

#: ../../topics/conventions/style.rst:210
# 3163a0bd4d944af9a31ce890fcf64fb1
msgid "Lining up the indent is also correct:"
msgstr ""

#: ../../topics/conventions/style.rst:219
# 71606eae86a04e89951720bb6abcca23
msgid "This also applies to function calls and other hanging indents."
msgstr ""

#: ../../topics/conventions/style.rst:221
# cd98dea055cd44dab5a1083160285f7c
msgid "pep8 and Flake8 (and, by extension, the vim plugin Syntastic) will complain about the double indent for hanging indents.  This is a `known conflict <https://github.com/jcrocholl/pep8/issues/167#issuecomment-15936564>`_ between pep8 (the script) and the actual PEP 8 standard.  It is recommended that this particular warning be ignored with the following lines in ``~/.config/flake8``:"
msgstr ""

#: ../../topics/conventions/style.rst:233
# 0ae68564f9ae417ca095eda40663039f
msgid "Make sure your Flake8/pep8 are up to date.  The first three errors are ignored by default and are present here to keep the behavior the same.  This will also work for pep8 without the Flake8 wrapper -- just replace all instances of 'flake8' with 'pep8', including the filename."
msgstr ""

#: ../../topics/conventions/style.rst:239
# 11f33dc504b4470faf29d2a937e0dcd7
msgid "Code Churn"
msgstr ""

#: ../../topics/conventions/style.rst:241
# d46d6fc347444fd2ba86cf9f556594ee
msgid "Many pull requests have been submitted that only churn code in the name of PEP 8. Code churn is a leading source of bugs and is strongly discouraged. While style fixes are encouraged they should be isolated to a single file per commit, and the changes should be legitimate, if there are any questions about whether a style change is legitimate please reference this document and the official PEP 8 (http://www.python.org/dev/peps/pep-0008/) document before changing code. Many claims that a change is PEP 8 have been invalid, please double check before committing fixes."
msgstr ""

