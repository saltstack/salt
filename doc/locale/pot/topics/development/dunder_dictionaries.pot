# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013 SaltStack, Inc.
# This file is distributed under the same license as the Salt package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Salt 0.17.0-848-g77b77a3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-12 23:19+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../topics/development/dunder_dictionaries.rst:6
# f4de9547ae344abf8c0137e457b24134
msgid "Dunder Dictionaries"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:8
# bddea6a3847f47fab2106aff8cf55b65
msgid "Salt provides several special \"dunder\" dictionaries as a convenience for Salt development.  These include ``__opts__``, ``__context__``, ``__salt__``, and others. This document will describe each dictionary and detail where they exist and what information and/or functionality they provide."
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:15
# a0ca77a680d14ea2a3a2f5e27b74e001
msgid "__opts__"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:18
#: ../../topics/development/dunder_dictionaries.rst:45
#: ../../topics/development/dunder_dictionaries.rst:63
#: ../../topics/development/dunder_dictionaries.rst:80
# 0cc7a22d88ff453387b36e799aa4d5ed
# ffd6a43bee194640addc49994c28c2fe
# 92746efcd69c45f4b0d25636cf1cbc4b
# 81c2a5591ee84e55857a65a29ee30723
msgid "Available in"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:20
# e5797b282143402191aa61de0017bcc8
msgid "All loader modules"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:22
# bb5541483973452995cb33f1a28f0f28
msgid "The ``__opts__`` dictionary contains all of the options passed in the configuration file for the master or minion."
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:27
# 0dae1b62328e43fc94ce2b1db88d64aa
msgid "In many places in salt, instead of pulling raw data from the __opts__ dict, configuration data should be pulled from the salt `get` frunctions such as config.get, aka - __salt__['config.get']('foo:bar') The `get` functions also allow for dict traversal via the *:* delimiter. Consider using get functions whenever using __opts__ or __pillar__ and __grains__ (when using grains for configuration data)"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:34
# 4ff8c0bad0814a8080a432aeed3ee261
msgid "The configuration file data made available in the ``__opts__`` dictionary is the configuration data relative to the running daemon. If the modules are loaded and executed by the master, then the master configuration data is available, if the modules are executed by the minion, then the minion configuration is available. Any additional information passed into the respective configuration files is made available"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:42
# 4f443e9d4b954507a8265617a9bdc85f
msgid "__salt__"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:47
#: ../../topics/development/dunder_dictionaries.rst:65
#: ../../topics/development/dunder_dictionaries.rst:82
# b3d912c4aae84168bb604a9d06196900
# 976d2eeeecc3494ca205ceb3781875f2
# 503677ef8de54a37a3fb079f2a715cd0
msgid "Execution Modules"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:48
#: ../../topics/development/dunder_dictionaries.rst:66
#: ../../topics/development/dunder_dictionaries.rst:83
# 7a1abf63f7dc45e1831f51701c29f840
# a61a1c649ad248419c7c16838e0f4d43
# d6276172191f41cca268988afa934117
msgid "State Modules"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:49
#: ../../topics/development/dunder_dictionaries.rst:67
#: ../../topics/development/dunder_dictionaries.rst:84
# c14ba854c5e54bbbbe2d1ce3e218b357
# b6f7dca4ed3348c7a03622080987d787
# 3a0762ac9a724443933da36d2d564d13
msgid "Returners"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:51
# 93a406cc1069443f8df965a679604fd0
msgid "``__salt__`` contains the execution module functions. This allows for all functions to be called as they have been set up by the salt loader."
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:60
# a6ba6a0d0c644b9aacb65ac26919f89a
msgid "__grains__"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:68
# 2bf6ffeb5f1148948c9aa8fc6e4bbafb
msgid "External Pillar"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:70
# 96173d57448048498ca1b8d8655db826
msgid "The ``__grains__`` dictionary contains the grains data generated by the minion that is currently being worked with. In execution modules, state modules and returners this is the grains of the minion running the calls, when generating the external pillar the ``__grains__`` is the grains data from the minion that the pillar is being generated for."
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:77
# 003fb75e362b4f60af04e275dd886d17
msgid "__pillar__"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:86
# 2c5f936d619643be9c893751c759fbf1
msgid "The ``__pillar__`` dictionary contains the pillar for the respective minion."
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:89
# a14c8b2becc8473890db02307149217b
msgid "__context__"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:91
# 2c71116dd6d44cffb98765ceed952101
msgid "``__context__`` exists in state modules and execution modules."
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:93
# 7ebb344f7c7648c0bb646d16cb11d762
msgid "During a state run the ``__context__`` dictionary persists across all states that are run and then is destroyed when the state ends."
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:96
# af5ef768aa9844ab9702496fcf61e155
msgid "When running an execution module ``__context__`` persists across all module executions until the modules are refreshed; such as when ``saltutils.sync_all`` or ``state.highstate`` are executed."
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:100
# f996864728b845a8899a99c5cbacee55
msgid "A great place to see how to use ``__context__`` is in the cp.py module in salt/modules/cp.py. The fileclient authenticates with the master when it is instantiated and then is used to copy files to the minion. Rather than create a new fileclient for each file that is to be copied down, one instance of the fileclient is instantiated in the ``__context__`` dictionary and is reused for each file. Here is an example from salt/modules/cp.py:"
msgstr ""

#: ../../topics/development/dunder_dictionaries.rst:113
# 1d156ed2278d4237b7005ef3c1aa79f4
msgid "Because __context__ may or may not have been destroyed, always be sure to check for the existence of the key in __context__ and generate the key before using it."
msgstr ""

