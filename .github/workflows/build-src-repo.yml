---
name: Build Source Repository

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: The environment to run against
      gpg_key_id:
        type: string
        required: true
        description: The GPG key ID to use
      salt-version:
        type: string
        required: true
        description: The Salt version of the packages to install and test

env:
  RELENV_DATA: "${{ github.workspace }}/.relenv"
  COLUMNS: 190
  AWS_MAX_ATTEMPTS: "10"
  AWS_RETRY_MODE: "adaptive"
  PIP_INDEX_URL: https://pypi-proxy.saltstack.net/root/local/+simple/
  PIP_EXTRA_INDEX_URL: https://pypi.org/simple

jobs:

  build-repo:
    name: Source
    environment: ${{ inputs.environment }}
    runs-on:
      - self-hosted
      - linux
      - repo-${{ inputs.environment }}
    strategy:
      fail-fast: false
      matrix:
        pkg-type:
          - onedir

    steps:

      - name: "Throttle Builds"
        shell: bash
        run: |
          t=$(python3 -c 'import random, sys; sys.stdout.write(str(random.randint(1, 15)))'); echo "Sleeping $t seconds"; sleep "$t"

      - uses: actions/checkout@v4

      - name: Setup Python Tools Scripts
        uses: ./.github/actions/setup-python-tools-scripts

      - name: Get Salt Project GitHub Actions Bot Environment
        run: |
          TOKEN=$(curl -sS -f -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 30")
          SPB_ENVIRONMENT=$(curl -sS -f -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/tags/instance/spb:environment)
          echo "SPB_ENVIRONMENT=$SPB_ENVIRONMENT" >> "$GITHUB_ENV"

      - name: Download Source Tarball
        uses: actions/download-artifact@v3
        with:
          name: salt-${{ inputs.salt-version }}.tar.gz
          path: artifacts/pkgs/incoming

      - name: Setup GnuPG
        run: |
          sudo install -d -m 0700 -o "$(id -u)" -g "$(id -g)" /run/gpg
          GNUPGHOME="$(mktemp -d -p /run/gpg)"
          echo "GNUPGHOME=${GNUPGHOME}" >> "$GITHUB_ENV"
          cat <<EOF > "${GNUPGHOME}/gpg.conf"
          batch
          no-tty
          pinentry-mode loopback
          EOF

      - name: Get Secrets
        env:
          SECRETS_KEY: ${{ secrets.SECRETS_KEY }}
        run: |
          SECRETS_KEY_FILE=$(mktemp /tmp/output.XXXXXXXXXX)
          echo "$SECRETS_KEY" > "$SECRETS_KEY_FILE"
          aws --region us-west-2 secretsmanager get-secret-value --secret-id /cmbu-saltstack/signing/repo-signing-keys-sha256-2023 \
            --query SecretString --output text | jq .default_key -r | base64 -d \
            | gpg --passphrase-file "${SECRETS_KEY_FILE}" -d - \
            | gpg --import -
          sync
          aws --region us-west-2 secretsmanager get-secret-value --secret-id /cmbu-saltstack/signing/repo-signing-keys-sha256-2023 \
            --query SecretString --output text| jq .default_passphrase -r | base64 -d \
            | gpg --passphrase-file "${SECRETS_KEY_FILE}" -o "${GNUPGHOME}/passphrase" -d -
          sync
          rm "$SECRETS_KEY_FILE"
          echo "passphrase-file ${GNUPGHOME}/passphrase" >> "${GNUPGHOME}/gpg.conf"

      - name: Create Repository Path
        run: |
          mkdir -p artifacts/pkgs/repo

      - name: Create Repository
        run: |
          tools pkg repo create src --key-id=${{ inputs.gpg_key_id }} ${{ inputs.environment == 'nightly' && format('--nightly-build-from={0}', github.ref_name) || '' }} \
            --salt-version=${{ inputs.salt-version }} \
            --incoming=artifacts/pkgs/incoming --repo-path=artifacts/pkgs/repo

      - name: Copy Files For Source Only Artifact Uploads
        run: |
          mkdir artifacts/src
          find artifacts/pkgs/repo -type f -print -exec cp {} artifacts/src \;

      - name: Upload Standalone Repository As An Artifact
        uses: actions/upload-artifact@v3
        with:
          name: salt-${{ inputs.salt-version }}-${{ inputs.environment }}-src-repo
          path: |
            artifacts/src/salt-${{ inputs.salt-version }}.tar.gz
            artifacts/src/salt-${{ inputs.salt-version }}.tar.gz.*
            artifacts/src/*-GPG-*
          retention-days: 7
          if-no-files-found: error

      - name: Upload Repository As An Artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: salt-${{ inputs.salt-version }}-${{ inputs.environment }}-repo
          path: artifacts/pkgs/repo/*
          retention-days: 7
          if-no-files-found: error
          archive-name: src-repo
