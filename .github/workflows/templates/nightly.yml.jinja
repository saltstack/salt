<%- set gh_environment = gh_environment|default("nightly") %>
<%- set skip_test_coverage_check = skip_test_coverage_check|default("false") %>
<%- set prepare_workflow_if_check = prepare_workflow_if_check|default("${{ needs.workflow-requirements.outputs.requirements-met }}") %>
<%- extends 'ci.yml.jinja' %>

<%- block name %>

name: <{ workflow_name }>
run-name: "<{ workflow_name }> (${{ format('Branch: {0}', github.ref_name) }})"

<%- endblock name %>

<%- block on %>

on:
  workflow_dispatch: {}
  schedule:
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onschedule
    - cron: '0 1 * * *'  # Every day at 1AM

<%- endblock on %>

<%- block concurrency %>

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.repository }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: false

<%- endblock concurrency %>

<%- block permissions %>
<{- super() }>
<%- if workflow_slug == "nightly" %>
  actions: write  # to trigger branch nightly builds
<%- endif %>
<%- endblock permissions %>

<%- block pre_jobs %>

  <%- set job_name = "workflow-requirements" %>

  <{ job_name }>:
  <%- do prepare_workflow_needs.append(job_name) %>
    name: Check Workflow Requirements
    runs-on: ubuntu-latest
    outputs:
      requirements-met: ${{ fromJSON(steps.check-requirements.outputs.requirements-met) }}
    steps:
      - name: Check Requirements
        id: check-requirements
        run: |
          if [ "${RUN_SCHEDULED_BUILDS}" = "1" ]; then
            echo "Running workflow because RUN_SCHEDULED_BUILDS=1"
            echo "requirements-met=true" >> "${GITHUB_OUTPUT}"
          elif [ "${{ github.event.repository.fork }}" = "true" ]; then
            echo "Not running workflow because ${{ github.repository }} is a fork"
            echo "requirements-met=false" >> "${GITHUB_OUTPUT}"
          else
            echo "Running workflow because ${{ github.repository }} is not a fork"
            echo "requirements-met=true" >> "${GITHUB_OUTPUT}"
          fi

  <%- set job_name = "trigger-branch-nightly-builds" %>
  <%- set branches = ["3006.x"] %>

  <{ job_name }>:
  <%- do conclusion_needs.append(job_name) %>
    name: Trigger Branch Schedule Workflows
    if: ${{ github.event_name == 'schedule' }}
    runs-on:
      - ubuntu-latest
    needs:
      - workflow-requirements
    steps:
    <%- for branch in branches %>
      - name: Trigger <{ branch }> branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh workflow run <{ gh_environment }>.yml --repo ${{ github.repository }} --ref <{ branch }>
    <%- endfor %>

<%- endblock pre_jobs %>

<%- block jobs %>
  <{- super() }>

  <%- if includes.get("build-repos", True) %>
  <%- include "build-repos.yml.jinja" %>
  <%- endif %>

  publish-repositories:
    <%- do conclusion_needs.append('publish-repositories') %>
    name: Publish Repositories
    runs-on:
      - self-hosted
      - linux
      - repo-<{ gh_environment }>
    environment: <{ gh_environment }>
    needs:
      - prepare-workflow
      <%- for need in build_repo_needs.iter(consume=True) %>
      - <{ need }>
      <%- endfor %>
      <%- if workflow_slug == "nightly" %>
      <%- for need in test_salt_needs.iter(consume=True) %>
      - <{ need }>
      <%- endfor %>
      <%- endif %>

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python Tools Scripts
        uses: ./.github/actions/setup-python-tools-scripts

      - name: Download Repository Artifact
        uses: actions/download-artifact@v3
        with:
          name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-<{ gh_environment }>-repo
          path: repo/

      - name: Decompress Repository Artifacts
        run: |
          find repo/ -type f -name '*.tar.gz' -print -exec tar xvf {} \;
          find repo/ -type f -name '*.tar.gz' -print -exec rm -f {} \;

      - name: Show Repository
        run: |
          tree -a artifacts/pkgs/repo/

      - name: Upload Repository Contents (<{ gh_environment }>)
        run: |
          tools pkg repo publish <{ gh_environment }> \
            ${{ contains(needs.prepare-workflow.outputs.salt-version, 'rc') && '--rc-build' || '' }} artifacts/pkgs/repo/

<%- endblock jobs %>
