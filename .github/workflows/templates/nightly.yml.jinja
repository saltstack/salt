<%- set gh_environment = gh_environment|default("nightly") %>
<%- set skip_test_coverage_check = skip_test_coverage_check|default("false") %>
<%- set skip_junit_reports_check = skip_junit_reports_check|default("false") %>
<%- set prepare_workflow_if_check = prepare_workflow_if_check|default("${{ fromJSON(needs.workflow-requirements.outputs.requirements-met) }}") %>
<%- extends 'ci.yml.jinja' %>

<%- block name %>

name: <{ workflow_name }>
run-name: "<{ workflow_name }> (branch: ${{ github.ref_name }})"

<%- endblock name %>

<%- block on %>

on:
  workflow_dispatch: {}
  schedule:
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onschedule
    - cron: '0 1 * * *'  # Every day at 1AM

<%- endblock on %>

<%- block concurrency %>

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.repository }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: false

<%- endblock concurrency %>

<%- block permissions %>
<{- super() }>
<%- if workflow_slug == "nightly" %>
  actions: write  # to trigger branch nightly builds
<%- endif %>
<%- endblock permissions %>

<%- block pre_jobs %>

  <%- include "workflow-requirements-check.yml.jinja" %>
  <%- include "trigger-branch-workflows.yml.jinja" %>

<%- endblock pre_jobs %>

<%- block jobs %>
  <{- super() }>

  <%- if includes.get("build-repos", True) %>
  <%- include "build-repos.yml.jinja" %>
  <%- endif %>

  publish-repositories:
    <%- do conclusion_needs.append('publish-repositories') %>
    name: Publish Repositories
    runs-on:
      - self-hosted
      - linux
      - repo-<{ gh_environment }>
    environment: <{ gh_environment }>
    needs:
      - prepare-workflow
      <%- for need in build_repo_needs.iter(consume=True) %>
      - <{ need }>
      <%- endfor %>
      <%- if workflow_slug == "nightly" %>
      <%- for need in test_salt_needs.iter(consume=True) %>
      - <{ need }>
      <%- endfor %>
      <%- endif %>

    steps:
      - uses: actions/checkout@v3

      - name: Get Salt Project GitHub Actions Bot Environment
        run: |
          TOKEN=$(curl -sS -f -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 30")
          SPB_ENVIRONMENT=$(curl -sS -f -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/tags/instance/spb:environment)
          echo "SPB_ENVIRONMENT=$SPB_ENVIRONMENT" >> "$GITHUB_ENV"

      - name: Setup Python Tools Scripts
        uses: ./.github/actions/setup-python-tools-scripts

      - name: Download Repository Artifact
        uses: actions/download-artifact@v3
        with:
          name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-<{ gh_environment }>-repo
          path: repo/

      - name: Decompress Repository Artifacts
        run: |
          find repo/ -type f -name '*.tar.gz' -print -exec tar xvf {} \;
          find repo/ -type f -name '*.tar.gz' -print -exec rm -f {} \;

      - name: Show Repository
        run: |
          tree -a artifacts/pkgs/repo/

      - name: Upload Repository Contents (<{ gh_environment }>)
        run: |
          tools pkg repo publish <{ gh_environment }> --salt-version=${{ needs.prepare-workflow.outputs.salt-version }} artifacts/pkgs/repo/

<%- endblock jobs %>
