# Do not edit these workflows directly as the changes made will be overwritten.
# Instead, edit the template '.github/workflows/templates/staging.yml.jinja'
---
name: Stage Release

on:
  workflow_dispatch:
    inputs:
      salt-version:
        type: string
        required: true
        description: The Salt version to set prior to building packages and staging the release.
      skip-salt-test-suite:
        type: boolean
        default: false
        description: Skip running the Salt test suite.

env:
  COLUMNS: 190
  CACHE_SEED: SEED-2  # Bump the number to invalidate all caches
  RELENV_DATA: "${{ github.workspace }}/.relenv"
  REPO_BASE_URL: "https://${{ secrets.SALT_REPO_USER }}:${{ secrets.SALT_REPO_PASS }}@${{ secrets.SALT_REPO_DOMAIN }}"

permissions:
  contents: read  # for dorny/paths-filter to fetch a list of changed files
  pull-requests: read  # for dorny/paths-filter to read pull requests

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.repository }}
  cancel-in-progress: false

jobs:

  check-requirements:
    name: Check Requirements
    runs-on: ubuntu-latest
    steps:
      - name: Check For Admin Permission
        uses: actions-cool/check-user-permission@v2
        with:
          require: admin
          username: ${{ github.triggering_actor }}

      - name: Check Branch
        run: |
          echo "Trying to run the staging workflow from branch ${{ github.ref_name }}"
          if [ "${{ github.ref_name }}" != "master" ]; then
              echo "Running the staging workflow from the ${{ github.ref_name }} branch is not allowed"
              exit 1
          else
              echo "Allowed"
          fi

  prepare-workflow:
    name: Prepare Workflow Run
    runs-on: ubuntu-latest
    needs:
      - check-requirements
    outputs:
      jobs: ${{ steps.define-jobs.outputs.jobs }}
      runners: ${{ steps.runner-types.outputs.runners }}
      changed-files: ${{ steps.process-changed-files.outputs.changed-files }}
      testrun: ${{ steps.define-testrun.outputs.testrun }}
      salt-version: ${{ steps.setup-salt-version.outputs.salt-version }}
      cache-seed: ${{ steps.set-cache-seed.outputs.cache-seed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full clone to also get the tags to get the right salt version

      - name: Get Changed Files
        if: ${{ github.event_name == 'pull_request'}}
        id: changed-files
        uses: dorny/paths-filter@v2
        with:
          token: ${{ github.token }}
          list-files: json
          filters: |
            repo:
              - added|modified:
                - '**'
            doc-requirements:
              - added|modified: &doc_requirements
                - requirements/static/ci/py3.*/docs.txt
            lint-requirements:
              - added|modified: &lint_requirements
                - requirements/static/ci/py3.*/lint.txt
            pkg_requirements:
              - added|modified: &pkg_requirements
                - requirements/static/pkg/py3.*/darwin.txt
                - requirements/static/pkg/py3.*/linux.txt
                - requirements/static/pkg/py3.*/freebsd.txt
                - requirements/static/pkg/py3.*/windows.txt
            test_requirements:
              - added|modified: &test_requirements
                - requirements/static/ci/py3.*/darwin.txt
                - requirements/static/ci/py3.*/linux.txt
                - requirements/static/ci/py3.*/freebsd.txt
                - requirements/static/ci/py3.*/windows.txt
                - requirements/static/ci/py3.*/darwin-crypto.txt
                - requirements/static/ci/py3.*/linux-crypto.txt
                - requirements/static/ci/py3.*/freebsd-crypto.txt
                - requirements/static/ci/py3.*/windows-crypto.txt
            deleted:
              - deleted:
                - '**'
            docs:
              - added|modified:
                - doc/**
                - *doc_requirements
            workflows:
              - added|modified:
                - .github/actions/**/action.yml
                - .github/workflows/*.yml
                - .github/workflows/templates/*.yml.jinja2
            salt:
              - added|modified: &salt_added_modified
                - setup.py
                - noxfile.py
                - salt/**/*.py
                - tasks/**/*.py
                - tools/**/*.py
            tests:
              - added|modified: &tests_added_modified
                - tests/**/*.py
            lint:
              - added|modified:
                - .pylintrc
                - *lint_requirements
            golden_images:
              - added|modified:
                - cicd/golden-images.json
            pkg_tests:
              - added|modified: &pkg_tests_added_modified
                - pkg/**
                - *pkg_requirements
                - *salt_added_modified
            testrun:
              - added|modified:
                - *pkg_requirements
                - *test_requirements
                - *salt_added_modified
                - *tests_added_modified
                - *pkg_tests_added_modified

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Setup Python Tools Scripts
        uses: ./.github/actions/setup-python-tools-scripts

      - name: Pretty Print The GH Actions Event
        run:
          tools ci print-gh-event

      - name: Setup Salt Version
        id: setup-salt-version
        uses: ./.github/actions/setup-salt-version
        with:
          salt-version: "${{ inputs.salt-version }}"
          validate-version: true

      - name: Check Existing Releases
        run: |
          tools pkg repo confirm-unreleased --repository ${{ github.repository }} ${{ steps.setup-salt-version.outputs.salt-version }}

      - name: Write Changed Files To A Local File
        run:
          echo '${{ toJSON(steps.changed-files.outputs) }}' > changed-files.json

      - name: Check Local Changed Files Contents
        if: ${{ github.event_name == 'pull_request' }}
        run:
          cat changed-files.json

      - name: Process Changed Files
        id: process-changed-files
        run: |
          tools ci process-changed-files ${{ github.event_name }} changed-files.json

      - name: Check Collected Changed Files
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo '${{ steps.process-changed-files.outputs.changed-files }}' | jq -C '.'

      - name: Define Runner Types
        id: runner-types
        run: |
          tools ci runner-types ${{ github.event_name }}

      - name: Check Defined Runners
        run: |
          echo '${{ steps.runner-types.outputs.runners }}' | jq -C '.'

      - name: Define Jobs
        id: define-jobs
        run: |
          tools ci define-jobs ${{ inputs.skip-salt-test-suite && '--skip-tests' || '' }} ${{ github.event_name }} changed-files.json

      - name: Check Defined Jobs
        run: |
          echo '${{ steps.define-jobs.outputs.jobs }}' | jq -C '.'

      - name: Define Testrun
        id: define-testrun
        run: |
          tools ci define-testrun ${{ github.event_name }} changed-files.json

      - name: Check Defined Test Run
        run: |
          echo '${{ steps.define-testrun.outputs.testrun }}' | jq -C '.'

      - name: Check Contents of generated testrun-changed-files.txt
        if: ${{ fromJSON(steps.define-testrun.outputs.testrun)['type'] != 'full' }}
        run: |
          cat testrun-changed-files.txt || true

      - name: Upload testrun-changed-files.txt
        if: ${{ fromJSON(steps.define-testrun.outputs.testrun)['type'] != 'full' }}
        uses: actions/upload-artifact@v3
        with:
          name: testrun-changed-files.txt
          path: testrun-changed-files.txt

      - name: Set Cache Seed Output
        id: set-cache-seed
        run: |
          echo "cache-seed=${{ env.CACHE_SEED }}" >> "$GITHUB_OUTPUT"
  pre-commit:
    name: Pre-Commit
    if: ${{ fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}
    uses: ./.github/workflows/pre-commit-action.yml
    needs:
      - prepare-workflow
    with:
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}
      changed-files: ${{ needs.prepare-workflow.outputs.changed-files }}
      pre-commit-version: "3.0.4"

  lint:
    name: Lint
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['lint'] && fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}
    uses: ./.github/workflows/lint-action.yml
    needs:
      - prepare-workflow
    with:
      changed-files: ${{ needs.prepare-workflow.outputs.changed-files }}

  prepare-release:
    name: "Prepare Release: ${{ needs.prepare-workflow.outputs.salt-version }}"
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['prepare-release'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    runs-on:
      - self-hosted
      - linux
      - medium
      - x86_64
    needs:
      - prepare-workflow
    steps:
      - uses: actions/checkout@v3

      - name: Get Python Version
        id: get-python-version
        uses: ./.github/actions/get-python-version
        with:
          python-binary: python3

      - name: Setup Python Tools Scripts
        id: python-tools-scripts
        uses: ./.github/actions/setup-python-tools-scripts

      - name: Cache Python Tools Docs Virtualenv
        uses: actions/cache@v3
        with:
          path: .tools-venvs/docs
          key: ${{ needs.prepare-workflow.outputs.cache-seed }}|${{ github.workflow }}|${{ github.job }}|tools-venvs|${{ steps.python-tools-scripts.outputs.version }}|docs|${{ steps.get-python-version.outputs.version }}|${{ hashFiles('requirements/**/docs.txt') }}

      - name: Cache Python Tools Changelog Virtualenv
        uses: actions/cache@v3
        with:
          path: .tools-venvs/changelog
          key: ${{ needs.prepare-workflow.outputs.cache-seed }}|${{ github.workflow }}|${{ github.job }}|tools-venvs|${{ steps.python-tools-scripts.outputs.version }}|changelog|${{ steps.get-python-version.outputs.version }}|${{ hashFiles('requirements/**/changelog.txt') }}


      - name: Setup Salt Version
        id: setup-salt-version
        uses: ./.github/actions/setup-salt-version
        with:
          salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
          release: true

      # TODO: Remove the --salt-version argument post 3006 release.  This was to handle versioning
      # issues on pre-3006 development versions on deb-based distros.
      - name: Update Debian changelog
        shell: bash
        run: |
          tools changelog update-deb "1:${{ needs.prepare-workflow.outputs.salt-version }}" --draft
          tools changelog update-deb "1:${{ needs.prepare-workflow.outputs.salt-version }}"

      - name: Update RPM changelog
        shell: bash
        run: |
          tools changelog update-rpm --draft
          tools changelog update-rpm

      - name: Update Release Notes
        shell: bash
        run: |
          tools changelog update-release-notes --draft --release
          tools changelog update-release-notes --release

      - name: Generate MAN Pages
        shell: bash
        env:
          LATEST_RELEASE: "${{ needs.prepare-workflow.outputs.salt-version }}"
          SALT_ON_SALTSTACK: "1"
        run: |
          tools docs man

      - name: Update Changelog
        shell: bash
        run: |
          tools changelog update-changelog-md --draft
          tools changelog update-changelog-md

      - name: Show Changes Diff
        shell: bash
        run: |
          git diff --color

      - name: Configure Git
        shell: bash
        run: |
          git config --global user.name "Salt Project Packaging"
          git config --global user.email saltproject-packaging@vmware.com

      - name: Setup Pre-Commit
        uses: ./.github/actions/setup-pre-commit
        with:
          version: "3.0.4"
          cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

      - name: Commit Changes
        shell: bash
        env:
          SKIP: lint-salt,lint-tests
        run: |
          # Run it twice so that pre-commit can fix anything that can be automatically fixed.
          git commit -am "Release v${{ needs.prepare-workflow.outputs.salt-version }}" || \
            git commit -am "Release v${{ needs.prepare-workflow.outputs.salt-version }}"

      - name: Create release changes patch
        shell: bash
        run: |
          git format-patch --keep-subject --binary --stdout HEAD^ > salt-${{ needs.prepare-workflow.outputs.salt-version }}.patch

      - name: Upload Changes Diff Artifact
        uses: actions/upload-artifact@v3
        with:
          name: salt-${{ needs.prepare-workflow.outputs.salt-version }}.patch
          path: salt-${{ needs.prepare-workflow.outputs.salt-version }}.patch
          retention-days: 7
          if-no-files-found: error

  build-docs:
    name: Documentation
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['build-docs'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-source-tarball
    uses: ./.github/workflows/build-docs.yml
    with:
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"

  build-source-tarball:
    name: Build Source Tarball
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['build-source-tarball'] && fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}
    needs:
      - prepare-workflow
      - prepare-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Get Python Version
        id: get-python-version
        uses: ./.github/actions/get-python-version
        with:
          python-binary: python3

      - name: Setup Python Tools Scripts
        id: python-tools-scripts
        uses: ./.github/actions/setup-python-tools-scripts

      - name: Setup Salt Version
        id: setup-salt-version
        uses: ./.github/actions/setup-salt-version
        with:
          salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"

      - name: Cache Python Tools Build Virtualenv
        uses: actions/cache@v3
        with:
          path: .tools-venvs/build
          key: ${{ needs.prepare-workflow.outputs.cache-seed }}|${{ github.workflow }}|${{ github.job }}|tools-venvs|${{ steps.python-tools-scripts.outputs.version }}|build|${{ steps.get-python-version.outputs.version }}|${{ hashFiles('requirements/**/build.txt') }}

      - name: Build Source Tarball
        uses: ./.github/actions/build-source-tarball
        with:
          salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"

  build-deps-onedir:
    name: Build Dependencies Onedir
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['build-deps-onedir'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
    uses: ./.github/workflows/build-deps-onedir.yml
    with:
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      self-hosted-runners: ${{ fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
      github-hosted-runners: ${{ fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}
      relenv-version: "0.7.0"
      python-version-linux: "3.10.10"
      python-version-macos: "3.10.10"
      python-version-windows: "3.10.10"

  build-salt-onedir:
    name: Build Salt Onedir
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['build-salt-onedir'] }}
    needs:
      - prepare-workflow
      - build-deps-onedir
      - build-source-tarball
    uses: ./.github/workflows/build-salt-onedir.yml
    with:
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      self-hosted-runners: ${{ fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
      github-hosted-runners: ${{ fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}
      relenv-version: "0.7.0"
      python-version-linux: "3.10.10"
      python-version-macos: "3.10.10"
      python-version-windows: "3.10.10"

  build-pkgs:
    name: Build Salt Packages
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['build-pkgs'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/build-packages.yml
    with:
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      self-hosted-runners: ${{ fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
      github-hosted-runners: ${{ fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}

  # <-------------------------------- PACKAGE TESTS -------------------------------->
  # TODO: Extract these out later

  amazonlinux-2-pkg-tests:
    name: Amazon Linux 2 Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: amazonlinux-2
      platform: linux
      arch: x86_64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: rpm
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  centos-7-pkg-tests:
    name: CentOS 7 Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: centos-7
      platform: linux
      arch: x86_64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: rpm
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}


  centosstream-8-pkg-tests:
    name: CentOS 8 Stream Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: centosstream-8
      platform: linux
      arch: x86_64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: rpm
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  centosstream-9-pkg-tests:
    name: CentOS 9 Stream Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: centosstream-9
      platform: linux
      arch: x86_64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: rpm
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  debian-10-pkg-tests:
    name: Debian 10 Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: debian-10
      platform: linux
      arch: x86_64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: deb
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  debian-11-pkg-tests:
    name: Debian 11 Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: debian-11
      platform: linux
      arch: x86_64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: deb
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  debian-11-arm64-pkg-tests:
    name: Debian 11 Arm64 Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: debian-11-arm64
      platform: linux
      arch: aarch64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: deb
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  ubuntu-2004-pkg-tests:
    name: Ubuntu 20.04 Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: ubuntu-20.04
      platform: linux
      arch: x86_64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: deb
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  ubuntu-2004-arm64-pkg-tests:
    name: Ubuntu 20.04 Arm64 Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: ubuntu-20.04-arm64
      platform: linux
      arch: aarch64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: deb
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  ubuntu-2204-pkg-tests:
    name: Ubuntu 22.04 Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: ubuntu-22.04
      platform: linux
      arch: x86_64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: deb
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  ubuntu-2204-arm64-pkg-tests:
    name: Ubuntu 22.04 Arm64 Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: ubuntu-22.04-arm64
      platform: linux
      arch: aarch64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: deb
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  macos-12-pkg-tests:
    name: macOS 12 Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action-macos.yml
    with:
      distro-slug: macos-12
      platform: darwin
      arch: x86_64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: macos
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  windows-2016-nsis-pkg-tests:
    name: Windows 2016 NSIS Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: windows-2016
      platform: windows
      arch: amd64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: NSIS
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  windows-2016-msi-pkg-tests:
    name: Windows 2016 MSI Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: windows-2016
      platform: windows
      arch: amd64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: MSI
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  windows-2019-nsis-pkg-tests:
    name: Windows 2019 NSIS Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: windows-2019
      platform: windows
      arch: amd64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: NSIS
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  windows-2019-msi-pkg-tests:
    name: Windows 2019 MSI Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: windows-2019
      platform: windows
      arch: amd64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: MSI
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  windows-2022-nsis-pkg-tests:
    name: Windows 2022 NSIS Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: windows-2022
      platform: windows
      arch: amd64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: NSIS
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}

  windows-2022-msi-pkg-tests:
    name: Windows 2022 MSI Package Tests
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/test-packages-action.yml
    with:
      distro-slug: windows-2022
      platform: windows
      arch: amd64
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      pkg-type: MSI
      cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}
  # <-------------------------------- PACKAGE TESTS -------------------------------->

  windows-2016:
    name: Windows 2016
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: windows-2016
      nox-session: ci-test-onedir
      platform: windows
      arch: amd64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  windows-2019:
    name: Windows 2019
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: windows-2019
      nox-session: ci-test-onedir
      platform: windows
      arch: amd64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  windows-2022:
    name: Windows 2022
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: windows-2022
      nox-session: ci-test-onedir
      platform: windows
      arch: amd64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  macos-12:
    name: macOS 12
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action-macos.yml
    with:
      distro-slug: macos-12
      nox-session: ci-test-onedir
      platform: darwin
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  almalinux-8:
    name: Alma Linux 8
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: almalinux-8
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  almalinux-9:
    name: Alma Linux 9
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: almalinux-9
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  amazonlinux-2:
    name: Amazon Linux 2
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: amazonlinux-2
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  archlinux-lts:
    name: Arch Linux LTS
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: archlinux-lts
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  centos-7:
    name: CentOS 7
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: centos-7
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  centosstream-8:
    name: CentOS Stream 8
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: centosstream-8
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  centosstream-9:
    name: CentOS Stream 9
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: centosstream-9
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  debian-10:
    name: Debian 10
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: debian-10
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  debian-11:
    name: Debian 11
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: debian-11
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  debian-11-arm64:
    name: Debian 11 Arm64
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: debian-11-arm64
      nox-session: ci-test-onedir
      platform: linux
      arch: aarch64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  fedora-36:
    name: Fedora 36
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: fedora-36
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  fedora-37:
    name: Fedora 37
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: fedora-37
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  fedora-38:
    name: Fedora 38
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: fedora-38
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  opensuse-15:
    name: Opensuse 15
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: opensuse-15
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  photonos-3:
    name: Photon OS 3
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: photonos-3
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  photonos-4:
    name: Photon OS 4
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: photonos-4
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  ubuntu-2004:
    name: Ubuntu 20.04
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: ubuntu-20.04
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  ubuntu-2004-arm64:
    name: Ubuntu 20.04 Arm64
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: ubuntu-20.04-arm64
      nox-session: ci-test-onedir
      platform: linux
      arch: aarch64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  ubuntu-2204:
    name: Ubuntu 22.04
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: ubuntu-22.04
      nox-session: ci-test-onedir
      platform: linux
      arch: x86_64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  ubuntu-2204-arm64:
    name: Ubuntu 22.04 Arm64
    if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}
    needs:
      - prepare-workflow
      - build-salt-onedir
    uses: ./.github/workflows/test-action.yml
    with:
      distro-slug: ubuntu-22.04-arm64
      nox-session: ci-test-onedir
      platform: linux
      arch: aarch64
      testrun: ${{ needs.prepare-workflow.outputs.testrun }}
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|3.10.10

  build-repositories:
    name: Build Repositories
    needs:
      - prepare-workflow
      - build-pkgs
    uses: ./.github/workflows/build-repos.yml
    with:
      environment: staging
      salt-version: "${{ needs.prepare-workflow.outputs.salt-version }}"
      nightly-build: false
      rc-build: ${{ contains(needs.prepare-workflow.outputs.salt-version, 'rc') }}
    secrets:
      SECRETS_KEY: ${{ secrets.SECRETS_KEY }}

  publish-repositories:
    name: Publish Repositories
    runs-on:
      - self-hosted
      - linux
      - repo-staging
    environment: staging
    needs:
      - prepare-workflow
      - build-repositories

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python Tools Scripts
        uses: ./.github/actions/setup-python-tools-scripts

      - name: Download Repository Artifact
        uses: actions/download-artifact@v3
        with:
          name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-staging-repo
          path: repo/

      - name: Decompress Repository Artifacts
        run: |
          find repo/ -type f -name '*.tar.gz' -print -exec tar xvf {} \;
          find repo/ -type f -name '*.tar.gz' -print -exec rm -f {} \;

      - name: Show Repository
        run: |
          tree -a artifacts/pkgs/repo/

      - name: Upload Repository Contents (staging)
        run: |
          tools pkg repo publish staging \
            ${{ contains(needs.prepare-workflow.outputs.salt-version, 'rc') && '--rc-build' || '' }} artifacts/pkgs/repo/

  upload-release-artifacts:
    name: Upload Release Artifacts
    needs:
      - prepare-workflow
      - build-docs
      - build-repositories
    environment: staging
    runs-on:
      - self-hosted
      - linux
      - repo-staging
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python Tools Scripts
        uses: ./.github/actions/setup-python-tools-scripts

      - name: Download Release Patch
        uses: actions/download-artifact@v3
        with:
          name: salt-${{ needs.prepare-workflow.outputs.salt-version }}.patch
          path: artifacts/release

      - name: Download Source Repository
        uses: actions/download-artifact@v3
        with:
          name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-staging-src-repo
          path: artifacts/release

      - name: Download Release Documentation (HTML)
        uses: actions/download-artifact@v3
        with:
          name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-docs-html.tar.xz
          path: artifacts/release

      - name: Download Release Documentation (ePub)
        uses: actions/download-artifact@v3
        with:
          name: Salt-${{ needs.prepare-workflow.outputs.salt-version }}.epub
          path: artifacts/release

      - name: Upload Release Artifacts
        run: |
          tools release upload-artifacts ${{ needs.prepare-workflow.outputs.salt-version }} artifacts/release

  publish-pypi:
    name: Publish to PyPi(test)
    needs:
      - prepare-workflow
      - upload-release-artifacts
      - windows-2016
      - windows-2019
      - windows-2022
      - macos-12
      - almalinux-8
      - almalinux-9
      - amazonlinux-2
      - archlinux-lts
      - centos-7
      - centosstream-8
      - centosstream-9
      - debian-10
      - debian-11
      - debian-11-arm64
      - fedora-36
      - fedora-37
      - fedora-38
      - opensuse-15
      - photonos-3
      - photonos-4
      - ubuntu-2004
      - ubuntu-2004-arm64
      - ubuntu-2204
      - ubuntu-2204-arm64
    environment: staging
    runs-on:
      - self-hosted
      - linux
      - repo-staging
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python Tools Scripts
        uses: ./.github/actions/setup-python-tools-scripts

      - name: Setup GnuPG
        run: |
          sudo install -d -m 0700 -o "$(id -u)" -g "$(id -g)" /run/gpg
          GNUPGHOME="$(mktemp -d -p /run/gpg)"
          echo "GNUPGHOME=${GNUPGHOME}" >> "$GITHUB_ENV"
          cat <<EOF > "${GNUPGHOME}/gpg.conf"
          batch
          no-tty
          pinentry-mode loopback
          EOF

      - name: Get Secrets
        id: get-secrets
        env:
          SECRETS_KEY: ${{ secrets.SECRETS_KEY }}
        run: |
          SECRETS_KEY_FILE=$(mktemp /tmp/output.XXXXXXXXXX)
          echo "$SECRETS_KEY" > "$SECRETS_KEY_FILE"
          TWINE_PASSWORD=$(aws --region us-west-2 secretsmanager get-secret-value --secret-id /cmbu-saltstack/publishing/publish-test-pypi \
            --query SecretString --output text | jq .default_passphrase -r | base64 -d \
            | gpg --passphrase-file "$SECRETS_KEY_FILE" -d -)
          echo "::add-mask::$TWINE_PASSWORD"
          echo "twine-password=$TWINE_PASSWORD" >> "${GITHUB_OUTPUT}"

      - name: Download Source Repository
        uses: actions/download-artifact@v3
        with:
          name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-staging-src-repo
          path: artifacts/release

      - name: Publish to Test PyPi
        env:
          TWINE_PASSWORD: "${{ steps.get-secrets.outputs.twine-password }}"
        run: |
          tools pkg pypi-upload --test artifacts/release/salt-${{ needs.prepare-workflow.outputs.salt-version }}.tar.gz

  set-pipeline-exit-status:
    # This step is just so we can make github require this step, to pass checks
    # on a pull request instead of requiring all
    name: Set the ${{ github.workflow }} Pipeline Exit Status
    if: always()
    runs-on: ubuntu-latest
    needs:
      - check-requirements
      - prepare-workflow
      - pre-commit
      - lint
      - build-docs
      - build-deps-onedir
      - build-salt-onedir
      - build-pkgs
      - build-repositories
      - publish-repositories
      - upload-release-artifacts
      - publish-pypi
      - amazonlinux-2-pkg-tests
      - centos-7-pkg-tests
      - centosstream-8-pkg-tests
      - centosstream-9-pkg-tests
      - debian-10-pkg-tests
      - debian-11-pkg-tests
      - debian-11-arm64-pkg-tests
      - ubuntu-2004-pkg-tests
      - ubuntu-2004-arm64-pkg-tests
      - ubuntu-2204-pkg-tests
      - ubuntu-2204-arm64-pkg-tests
      - macos-12-pkg-tests
      - windows-2016-nsis-pkg-tests
      - windows-2016-msi-pkg-tests
      - windows-2019-nsis-pkg-tests
      - windows-2019-msi-pkg-tests
      - windows-2022-nsis-pkg-tests
      - windows-2022-msi-pkg-tests
    steps:
      - name: Get workflow information
        id: get-workflow-info
        uses: technote-space/workflow-conclusion-action@v3

      - name: Set Pipeline Exit Status
        shell: bash
        run: |
          if [ "${{ steps.get-workflow-info.outputs.conclusion }}" != "success" ]; then
            exit 1
          else
            exit 0
          fi

      - name: Done
        if: always()
        run:
          echo "All worflows finished"
