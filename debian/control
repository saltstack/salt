Source: salt
Section: admin
Priority: optional
Maintainer: Corey Quinn <corey@sequestered.net>
Build-Depends: debhelper (>= 7.0.50),
               cython,
               python | python-all | python-dev | python-all-dev,
               python-crypto,
               python-jinja2,
               python-m2crypto,
               python-setuptools,
               python-sphinx,
               python-yaml,
               python-zmq,
               msgpack-python
Standards-Version: 3.9.3
Homepage: http://saltstack.org
XS-Python-Version: >= 2.6, <= 2.7


Package: salt-common
Architecture: all
Depends: ${python:Depends}, ${misc:Depends}, ${shlibs:Depends},
         python, python-support, python-pkg-resources,
         python-crypto,
         python-jinja2,
         python-m2crypto,
         python-yaml,
         python-zmq,
         dctrl-tools,
         msgpack-python
Recommends: dmidecode, pciutils
Description: Shared libraries that salt requires for all packages
 This package is a powerful remote execution manager that can be used
 to administer servers in a fast and efficient way.
 .
 It allows commands to be executed across large groups of servers. This
 means systems can be easily managed, but data can also be easily gathered.
 Quick introspection into running systems becomes a reality.
 .
 Remote execution is usually used to set up a certain state on a remote
 system. Salt addresses this problem as well, the salt state system uses
 salt state files to define the state a server needs to be in.
 .
 Between the remote execution system, and state management Salt addresses
 the backbone of cloud and data center management.
 .
 This particular package provides shared libraries that salt-master,
 salt-minion, and salt-syndic require to function.

Package: salt-master
Architecture: all
Depends: ${misc:Depends}, python, python-support, python-pkg-resources
Pre-Depends: salt-common (= ${source:Version})
Description: This package provides a remote manager to administer servers via salt
 This package is a powerful remote execution manager that can be used
 to administer servers in a fast and efficient way.
 .
 It allows commands to be executed across large groups of servers. This
 means systems can be easily managed, but data can also be easily gathered.
 Quick introspection into running systems becomes a reality.
 .
 Remote execution is usually used to set up a certain state on a remote
 system. Salt addresses this problem as well, the salt state system uses
 salt state files to define the state a server needs to be in.
 .
 Between the remote execution system, and state management Salt addresses
 the backbone of cloud and data center management.
 .
 This particular package provides the salt controller.


Package: salt-minion
Architecture: all
Depends: ${misc:Depends}, python, python-support, python-pkg-resources,
Pre-Depends: salt-common (= ${source:Version})
Recommends: debconf-utils
Description: This package represents the client package for salt
 This package is a powerful remote execution manager that can be used
 to administer servers in a fast and efficient way.
 .
 It allows commands to be executed across large groups of servers. This
 means systems can be easily managed, but data can also be easily gathered.
 Quick introspection into running systems becomes a reality.
 .
 Remote execution is usually used to set up a certain state on a remote
 system. Salt addresses this problem as well, the salt state system uses
 salt state files to define the state a server needs to be in.
 .
 Between the remote execution system, and state management Salt addresses
 the backbone of cloud and data center management.
 .
 This particular package provides the worker / agent for salt.


Package: salt-syndic
Architecture: all
Depends: ${misc:Depends}, python, python-support, python-pkg-resources,
         salt-master (= ${source:Version})
Description: This package represents the master-of-masters for salt
 This package is a powerful remote execution manager that can be used
 to administer servers in a fast and efficient way.
 .
 It allows commands to be executed across large groups of servers. This
 means systems can be easily managed, but data can also be easily gathered.
 Quick introspection into running systems becomes a reality.
 .
 Remote execution is usually used to set up a certain state on a remote
 system. Salt addresses this problem as well, the salt state system uses
 salt state files to define the state a server needs to be in.
 .
 Between the remote execution system, and state management Salt addresses
 the backbone of cloud and data center management.
 .
 This particular package provides the master of masters for salt-- it enables
 the management of multiple masters at a time..

Package: salt-ssh
Architecture: all
Depends: ${misc:Depends},
         ${python:Depends},
         salt-common (= ${source:Version}),
         sshpass
Description: remote manager to administer servers via salt
 salt is a powerful remote execution manager that can be used to
 administer servers in a fast and efficient way.
 .
 It allows commands to be executed across large groups of
 servers. This means systems can be easily managed, but data can
 also be easily gathered.  Quick introspection into running
 systems becomes a reality.
 .
 Remote execution is usually used to set up a certain state on a
 remote system. Salt addresses this problem as well, the salt
 state system uses salt state files to define the state a server
 needs to be in.
 .
 Between the remote execution system, and state management Salt
 addresses the backbone of cloud and data center management.
 .
 This particular package provides the salt ssh controller. It
 is able to run salt modules and states on remote hosts via ssh.
 No minion or other salt specific software needs to be installed
 on the remote host.

Package: salt-doc
Architecture: all
Section: doc
Depends: ${misc:Depends}
Recommends: libjs-sphinxdoc
Description: additional documentation for salt, the distributed remote execution system
 salt is a powerful remote execution manager that can be used to
 administer servers in a fast and efficient way.
 .
 It allows commands to be executed across large groups of
 servers. This means systems can be easily managed, but data can
 also be easily gathered.  Quick introspection into running
 systems becomes a reality.
 .
 Remote execution is usually used to set up a certain state on a
 remote system. Salt addresses this problem as well, the salt
 state system uses salt state files to define the state a server
 needs to be in.
 .
 Between the remote execution system, and state management Salt
 addresses the backbone of cloud and data center management.
 .
 This particular package provides the HTML documentation for
 salt.
