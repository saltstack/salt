# Salt Minion floscript

house minion

framer minionudpstack be active first setup
    # Begin the pre-flight checks
    frame setup
        enter
            do salt raet cleanup
            do salt raet road stack setup per inode ".salt.road.manor"
            do salt raet manor lane setup
        go loadmodules

    # Load the minion mods
    frame loadmodules
        do salt load modules at enter
        go start

    # OK, let's start the minion up
    frame start
        # Start the inbound framer
        bid start inbound
        # Start the bootstrap framer
        bid start bootstrap
        # Start the eventing framer
        bid start eventing
        # Start the functionmanage framer
        bid start functionmanager
        # Start the outbound framer
        bid start outbound
        bid start scheduler

        # Cleanup on exit
        exit
            do salt raet road stack closer per inode ".salt.road.manor."
            do salt raet lane stack closer per inode ".salt.lane.manor."

# Framer for handling inbound traffic
framer inbound be inactive first start
    frame start
        do salt raet road stack service rx

framer bootstrap be inactive first join
    frame join
        print Joining...
        enter
            do salt raet road stack joiner per inode ".salt.road.manor."
        recur
            do salt raet road stack joined per inode ".salt.road.manor."
            do salt raet road stack rejected per inode ".salt.road.manor."

        go next if joined in .salt.road.manor.status
        go abort if rejected in .salt.road.manor.status
        #go abort if elapsed >= 10

    frame joined
        print Joined
        go next if elapsed >= 2

    frame allow
        print Allowing...
        enter
            do salt raet road stack allower per inode ".salt.road.manor."
        recur
            do salt raet road stack allowed per inode ".salt.road.manor."

        go next if allowed in .salt.road.manor.status
        #go abort if elapsed >= 5

    frame allowed
        print Allowed
        go next if elapsed >= 2

    frame pillar
        print Pillaring
        enter
            do salt load pillar
        go loading

    frame loading
        print Loading
        enter
            do salt load modules
        go router

    frame router
        # start the manager framer
        bid start manager #start alive presence from minion side
        do salt raet router
        go pillar if .salt.var.pillar_refresh
        go loading if .salt.var.module_refresh

    frame abort
        bid stop all

framer eventing be inactive first event
    frame event
        do salt raet eventer

framer functionmanager be inactive first checkexec
    frame checkexec
        do salt raet nix jobber

framer manager be inactive first start at 10.0
    frame start
         do salt raet road stack manager per inode ".salt.road.manor"

# Framer for handling outbound traffic
framer outbound be inactive first start
    frame start
        do salt raet road stack service tx

framer scheduler be inactive first start
    frame start
        do salt schedule
